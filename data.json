{
  "models" : [ {
    "model" : {
      "name" : "latLongDomain",
      "classname" : "LatLongDomain",
      "classVarName" : "latLongDomain",
      "modelJson" : "{ }",
      "vars" : [ ],
      "imports" : [ ],
      "emptyVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "timeDomain",
      "classname" : "TimeDomain",
      "classVarName" : "timeDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"raw\" : {\n      \"type\" : \"string\"\n    },\n    \"localized\" : {\n      \"type\" : \"string\"\n    },\n    \"epochSeconds\" : {\n      \"type\" : \"string\"\n    },\n    \"timeZoneOffsetSeconds\" : {\n      \"type\" : \"string\"\n    },\n    \"localizedShortDate\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "raw",
        "getter" : "getRaw",
        "setter" : "setRaw",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "raw",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localized",

        "getter" : "getLocalized",
        "setter" : "setLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "epochSeconds",

        "getter" : "getEpochSeconds",
        "setter" : "setEpochSeconds",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "epochSeconds",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "timeZoneOffsetSeconds",

        "getter" : "getTimeZoneOffsetSeconds",
        "setter" : "setTimeZoneOffsetSeconds",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "timeZoneOffsetSeconds",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localizedShortDate",

        "getter" : "getLocalizedShortDate",
        "setter" : "setLocalizedShortDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localizedShortDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "mobileError",
      "classname" : "MobileError",
      "classVarName" : "mobileError",
      "modelJson" : "{\n  \"properties\" : {\n    \"errorCode\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Possible error codes: INVALID_INPUT, HOTEL_ROOM_UNAVAILABLE, HOTEL_OFFER_UNAVAILABLE,HOTEL_SERVICE_FATAL_FAILURE, PAYMENT_FAILED, BOOKING_SUCCEEDED_WITH_ERRORS, BOOKING_FAILED, STORE_CREDIT_CARD_INFO_FAILED, SSL_REQUIRED,  USER_UNAUTHORIZED_FOR_PROFILE, UNKNOWN_ERROR, TRIP_SERVICE_ERROR, HOTEL_PRODUCT_NOT_FOUND, APPLY_COUPON_ERROR, REMOVE_COUPON_ERROR,APPLY_BACKICK_PRICE_ADJUSTMENT_ERROR,APPLY_ADJUSTMENT_UNAUTHORIZED,FLIGHT_SOLD_OUT, FLIGHT_PRODUCT_NOT_FOUND, USER_SERVICE_ERROR, USER_SERVICE_FATAL_FAILURE, USER_SERVICE_TRAVELER_ALREADY_EXISTS, SESSION_TIMEOUT, TRIP_ALREADY_BOOKED, USER_SERVICE_DUPLICATE_EMAIL, USER_SERVICE_CREATE_USER_ERROR, IMAGE_NOT_FOUND, CANNOT_BOOK_WITH_MINOR, USER_CREATION_FAILED_DURING_CHECKOUT, OMS_ERROR,INVALID_INPUT_NOT_OPAQUE_PRODUCT_KEY, PACKAGE_SEARCH_ERROR, CAR_PRODUCT_NOT_AVAILABLE, CAR_SERVICE_ERROR, CAR_SEARCH_ERROR\"\n    },\n    \"errorInfo\" : {\n      \"type\" : \"string\",\n      \"description\" : \"It returns a Map data structure\"\n    },\n    \"diagnosticId\" : {\n      \"type\" : \"string\"\n    },\n    \"diagnosticFullText\" : {\n      \"type\" : \"string\"\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "errorCode",

        "getter" : "getErrorCode",
        "setter" : "setErrorCode",
        "description" : "Possible error codes: INVALID_INPUT, HOTEL_ROOM_UNAVAILABLE, HOTEL_OFFER_UNAVAILABLE,HOTEL_SERVICE_FATAL_FAILURE, PAYMENT_FAILED, BOOKING_SUCCEEDED_WITH_ERRORS, BOOKING_FAILED, STORE_CREDIT_CARD_INFO_FAILED, SSL_REQUIRED,  USER_UNAUTHORIZED_FOR_PROFILE, UNKNOWN_ERROR, TRIP_SERVICE_ERROR, HOTEL_PRODUCT_NOT_FOUND, APPLY_COUPON_ERROR, REMOVE_COUPON_ERROR,APPLY_BACKICK_PRICE_ADJUSTMENT_ERROR,APPLY_ADJUSTMENT_UNAUTHORIZED,FLIGHT_SOLD_OUT, FLIGHT_PRODUCT_NOT_FOUND, USER_SERVICE_ERROR, USER_SERVICE_FATAL_FAILURE, USER_SERVICE_TRAVELER_ALREADY_EXISTS, SESSION_TIMEOUT, TRIP_ALREADY_BOOKED, USER_SERVICE_DUPLICATE_EMAIL, USER_SERVICE_CREATE_USER_ERROR, IMAGE_NOT_FOUND, CANNOT_BOOK_WITH_MINOR, USER_CREATION_FAILED_DURING_CHECKOUT, OMS_ERROR,INVALID_INPUT_NOT_OPAQUE_PRODUCT_KEY, PACKAGE_SEARCH_ERROR, CAR_PRODUCT_NOT_AVAILABLE, CAR_SERVICE_ERROR, CAR_SEARCH_ERROR",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "errorCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Possible error codes: INVALID_INPUT, HOTEL_ROOM_UNAVAILABLE, HOTEL_OFFER_UNAVAILABLE,HOTEL_SERVICE_FATAL_FAILURE, PAYMENT_FAILED, BOOKING_SUCCEEDED_WITH_ERRORS, BOOKING_FAILED, STORE_CREDIT_CARD_INFO_FAILED, SSL_REQUIRED,  USER_UNAUTHORIZED_FOR_PROFILE, UNKNOWN_ERROR, TRIP_SERVICE_ERROR, HOTEL_PRODUCT_NOT_FOUND, APPLY_COUPON_ERROR, REMOVE_COUPON_ERROR,APPLY_BACKICK_PRICE_ADJUSTMENT_ERROR,APPLY_ADJUSTMENT_UNAUTHORIZED,FLIGHT_SOLD_OUT, FLIGHT_PRODUCT_NOT_FOUND, USER_SERVICE_ERROR, USER_SERVICE_FATAL_FAILURE, USER_SERVICE_TRAVELER_ALREADY_EXISTS, SESSION_TIMEOUT, TRIP_ALREADY_BOOKED, USER_SERVICE_DUPLICATE_EMAIL, USER_SERVICE_CREATE_USER_ERROR, IMAGE_NOT_FOUND, CANNOT_BOOK_WITH_MINOR, USER_CREATION_FAILED_DURING_CHECKOUT, OMS_ERROR,INVALID_INPUT_NOT_OPAQUE_PRODUCT_KEY, PACKAGE_SEARCH_ERROR, CAR_PRODUCT_NOT_AVAILABLE, CAR_SERVICE_ERROR, CAR_SEARCH_ERROR\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errorInfo",

        "getter" : "getErrorInfo",
        "setter" : "setErrorInfo",
        "description" : "It returns a Map data structure",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "errorInfo",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"It returns a Map data structure\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "diagnosticId",

        "getter" : "getDiagnosticId",
        "setter" : "setDiagnosticId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "diagnosticId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "diagnosticFullText",

        "getter" : "getDiagnosticFullText",
        "setter" : "setDiagnosticFullText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "diagnosticFullText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonSurcharge",
      "classname" : "JsonSurcharge",
      "classVarName" : "jsonSurcharge",
      "modelJson" : "{\n  \"properties\" : {\n    \"amount\" : {\n      \"type\" : \"string\"\n    },\n    \"type\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "amount",

        "getter" : "getAmount",
        "setter" : "setAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "amount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "type",

        "getter" : "getType",
        "setter" : "setType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "type",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonPriceAdjustment",
      "classname" : "JsonPriceAdjustment",
      "classVarName" : "jsonPriceAdjustment",
      "modelJson" : "{\n  \"properties\" : {\n    \"type\" : {\n      \"type\" : \"string\"\n    },\n    \"amount\" : {\n      \"type\" : \"string\"\n    },\n    \"formattedAmount\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "type",

        "getter" : "getType",
        "setter" : "setType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "type",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amount",

        "getter" : "getAmount",
        "setter" : "setAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "amount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "formattedAmount",

        "getter" : "getFormattedAmount",
        "setter" : "setFormattedAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "formattedAmount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonNightlyRates",
      "classname" : "JsonNightlyRates",
      "classVarName" : "jsonNightlyRates",
      "modelJson" : "{\n  \"properties\" : {\n    \"promo\" : {\n      \"type\" : \"boolean\"\n    },\n    \"baseRate\" : {\n      \"type\" : \"string\"\n    },\n    \"rate\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "promo",

        "getter" : "getPromo",
        "setter" : "setPromo",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "promo",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "baseRate",

        "getter" : "getBaseRate",
        "setter" : "setBaseRate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "baseRate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rate",

        "getter" : "getRate",
        "setter" : "setRate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "rate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonBaseRateInfo",
      "classname" : "JsonBaseRateInfo",
      "classVarName" : "jsonBaseRateInfo",
      "modelJson" : "{\n  \"properties\" : {\n    \"maxNightlyRate\" : {\n      \"type\" : \"string\"\n    },\n    \"averageRate\" : {\n      \"type\" : \"string\"\n    },\n    \"taxStatusType\" : {\n      \"type\" : \"string\"\n    },\n    \"surchargeTotal\" : {\n      \"type\" : \"string\"\n    },\n    \"surchargeTotalForEntireStay\" : {\n      \"type\" : \"string\"\n    },\n    \"averageBaseRate\" : {\n      \"type\" : \"string\"\n    },\n    \"nightlyRateTotal\" : {\n      \"type\" : \"string\"\n    },\n    \"total\" : {\n      \"type\" : \"string\"\n    },\n    \"currencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"currencySymbol\" : {\n      \"type\" : \"string\"\n    },\n    \"surcharges\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonSurcharge\"\n      }\n    },\n    \"surchargesForEntireStay\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonSurcharge\"\n      }\n    },\n    \"nightlyRatesPerRoom\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonNightlyRates\"\n      }\n    },\n    \"nightlyRatesSize\" : {\n      \"type\" : \"string\"\n    },\n    \"priceToShowUsers\" : {\n      \"type\" : \"string\"\n    },\n    \"depositAmountToShowUsers\" : {\n      \"type\" : \"string\"\n    },\n    \"priceRemainingAfterDepositToShowUsers\" : {\n      \"type\" : \"string\"\n    },\n    \"depositAmountExact\" : {\n      \"type\" : \"string\"\n    },\n    \"priceRemainingAfterDepositExact\" : {\n      \"type\" : \"string\"\n    },\n    \"strikethroughPriceToShowUsers\" : {\n      \"type\" : \"string\"\n    },\n    \"strikethroughPriceWithTaxesAndFeesToShowUsers\" : {\n      \"type\" : \"string\"\n    },\n    \"totalMandatoryFees\" : {\n      \"type\" : \"string\"\n    },\n    \"totalPriceWithMandatoryFees\" : {\n      \"type\" : \"string\"\n    },\n    \"userPriceType\" : {\n      \"type\" : \"string\"\n    },\n    \"priceAdjustments\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonPriceAdjustment\"\n      }\n    },\n    \"checkoutPriceType\" : {\n      \"type\" : \"string\"\n    },\n    \"airAttached\" : {\n      \"type\" : \"boolean\"\n    },\n    \"roomTypeCode\" : {\n      \"type\" : \"string\"\n    },\n    \"ratePlanCode\" : {\n      \"type\" : \"string\"\n    },\n    \"showResortFeeMessage\" : {\n      \"type\" : \"boolean\"\n    },\n    \"resortFeeInclusion\" : {\n      \"type\" : \"boolean\"\n    },\n    \"dailyMandatoryFee\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "maxNightlyRate",

        "getter" : "getMaxNightlyRate",
        "setter" : "setMaxNightlyRate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "maxNightlyRate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "averageRate",

        "getter" : "getAverageRate",
        "setter" : "setAverageRate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "averageRate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxStatusType",

        "getter" : "getTaxStatusType",
        "setter" : "setTaxStatusType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "taxStatusType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "surchargeTotal",

        "getter" : "getSurchargeTotal",
        "setter" : "setSurchargeTotal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "surchargeTotal",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "surchargeTotalForEntireStay",

        "getter" : "getSurchargeTotalForEntireStay",
        "setter" : "setSurchargeTotalForEntireStay",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "surchargeTotalForEntireStay",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "averageBaseRate",

        "getter" : "getAverageBaseRate",
        "setter" : "setAverageBaseRate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "averageBaseRate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nightlyRateTotal",

        "getter" : "getNightlyRateTotal",
        "setter" : "setNightlyRateTotal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nightlyRateTotal",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "total",

        "getter" : "getTotal",
        "setter" : "setTotal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "total",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencyCode",

        "getter" : "getCurrencyCode",
        "setter" : "setCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencySymbol",

        "getter" : "getCurrencySymbol",
        "setter" : "setCurrencySymbol",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencySymbol",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "surcharges",
        "complexType" : "jsonSurcharge",
        "getter" : "getSurcharges",
        "setter" : "setSurcharges",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "surcharges",
        "defaultValue" : "new ArrayList<jsonSurcharge>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonSurcharge\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "surchargesForEntireStay",
        "complexType" : "jsonSurcharge",
        "getter" : "getSurchargesForEntireStay",
        "setter" : "setSurchargesForEntireStay",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "surchargesForEntireStay",
        "defaultValue" : "new ArrayList<jsonSurcharge>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonSurcharge\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nightlyRatesPerRoom",
        "complexType" : "jsonNightlyRates",
        "getter" : "getNightlyRatesPerRoom",
        "setter" : "setNightlyRatesPerRoom",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "nightlyRatesPerRoom",
        "defaultValue" : "new ArrayList<jsonNightlyRates>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonNightlyRates\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nightlyRatesSize",

        "getter" : "getNightlyRatesSize",
        "setter" : "setNightlyRatesSize",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nightlyRatesSize",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "priceToShowUsers",

        "getter" : "getPriceToShowUsers",
        "setter" : "setPriceToShowUsers",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "priceToShowUsers",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "depositAmountToShowUsers",

        "getter" : "getDepositAmountToShowUsers",
        "setter" : "setDepositAmountToShowUsers",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "depositAmountToShowUsers",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "priceRemainingAfterDepositToShowUsers",

        "getter" : "getPriceRemainingAfterDepositToShowUsers",
        "setter" : "setPriceRemainingAfterDepositToShowUsers",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "priceRemainingAfterDepositToShowUsers",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "depositAmountExact",

        "getter" : "getDepositAmountExact",
        "setter" : "setDepositAmountExact",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "depositAmountExact",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "priceRemainingAfterDepositExact",

        "getter" : "getPriceRemainingAfterDepositExact",
        "setter" : "setPriceRemainingAfterDepositExact",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "priceRemainingAfterDepositExact",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "strikethroughPriceToShowUsers",

        "getter" : "getStrikethroughPriceToShowUsers",
        "setter" : "setStrikethroughPriceToShowUsers",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "strikethroughPriceToShowUsers",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "strikethroughPriceWithTaxesAndFeesToShowUsers",

        "getter" : "getStrikethroughPriceWithTaxesAndFeesToShowUsers",
        "setter" : "setStrikethroughPriceWithTaxesAndFeesToShowUsers",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "strikethroughPriceWithTaxesAndFeesToShowUsers",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalMandatoryFees",

        "getter" : "getTotalMandatoryFees",
        "setter" : "setTotalMandatoryFees",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalMandatoryFees",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalPriceWithMandatoryFees",

        "getter" : "getTotalPriceWithMandatoryFees",
        "setter" : "setTotalPriceWithMandatoryFees",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalPriceWithMandatoryFees",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "userPriceType",

        "getter" : "getUserPriceType",
        "setter" : "setUserPriceType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "userPriceType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "priceAdjustments",
        "complexType" : "jsonPriceAdjustment",
        "getter" : "getPriceAdjustments",
        "setter" : "setPriceAdjustments",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "priceAdjustments",
        "defaultValue" : "new ArrayList<jsonPriceAdjustment>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonPriceAdjustment\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkoutPriceType",

        "getter" : "getCheckoutPriceType",
        "setter" : "setCheckoutPriceType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkoutPriceType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airAttached",

        "getter" : "getAirAttached",
        "setter" : "setAirAttached",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "airAttached",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomTypeCode",

        "getter" : "getRoomTypeCode",
        "setter" : "setRoomTypeCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomTypeCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "ratePlanCode",

        "getter" : "getRatePlanCode",
        "setter" : "setRatePlanCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "ratePlanCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "showResortFeeMessage",

        "getter" : "getShowResortFeeMessage",
        "setter" : "setShowResortFeeMessage",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "showResortFeeMessage",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "resortFeeInclusion",

        "getter" : "getResortFeeInclusion",
        "setter" : "setResortFeeInclusion",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "resortFeeInclusion",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dailyMandatoryFee",

        "getter" : "getDailyMandatoryFee",
        "setter" : "setDailyMandatoryFee",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "dailyMandatoryFee",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonNightlyRates", "jsonSurcharge", "string", "List", "jsonPriceAdjustment", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "apiNewTripJson",
      "classname" : "ApiNewTripJson",
      "classVarName" : "apiNewTripJson",
      "modelJson" : "{\n  \"properties\" : {\n    \"itineraryNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"travelRecordLocator\" : {\n      \"type\" : \"string\"\n    },\n    \"tripId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "itineraryNumber",

        "getter" : "getItineraryNumber",
        "setter" : "setItineraryNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "itineraryNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "travelRecordLocator",

        "getter" : "getTravelRecordLocator",
        "setter" : "setTravelRecordLocator",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "travelRecordLocator",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tripId",

        "getter" : "getTripId",
        "setter" : "setTripId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tripId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonAssociatedTraveler",
      "classname" : "JsonAssociatedTraveler",
      "classVarName" : "jsonAssociatedTraveler",
      "modelJson" : "{\n  \"properties\" : {\n    \"tuid\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"firstName\" : {\n      \"type\" : \"string\"\n    },\n    \"middleName\" : {\n      \"type\" : \"string\"\n    },\n    \"lastName\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "tuid",

        "getter" : "getTuid",
        "setter" : "setTuid",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "tuid",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "firstName",

        "getter" : "getFirstName",
        "setter" : "setFirstName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "middleName",

        "getter" : "getMiddleName",
        "setter" : "setMiddleName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "middleName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lastName",

        "getter" : "getLastName",
        "setter" : "setLastName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "lastName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonPhone",
      "classname" : "JsonPhone",
      "classVarName" : "jsonPhone",
      "modelJson" : "{\n  \"properties\" : {\n    \"number\" : {\n      \"type\" : \"string\"\n    },\n    \"areaCode\" : {\n      \"type\" : \"string\"\n    },\n    \"category\" : {\n      \"type\" : \"string\"\n    },\n    \"countryCode\" : {\n      \"type\" : \"string\"\n    },\n    \"extensionNumber\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "number",

        "getter" : "getNumber",
        "setter" : "setNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "number",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "areaCode",

        "getter" : "getAreaCode",
        "setter" : "setAreaCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "areaCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "category",

        "getter" : "getCategory",
        "setter" : "setCategory",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "category",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "countryCode",

        "getter" : "getCountryCode",
        "setter" : "setCountryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "extensionNumber",

        "getter" : "getExtensionNumber",
        "setter" : "setExtensionNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "extensionNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonAddress",
      "classname" : "JsonAddress",
      "classVarName" : "jsonAddress",
      "modelJson" : "{\n  \"properties\" : {\n    \"firstAddressLine\" : {\n      \"type\" : \"string\"\n    },\n    \"secondAddressLine\" : {\n      \"type\" : \"string\"\n    },\n    \"city\" : {\n      \"type\" : \"string\"\n    },\n    \"province\" : {\n      \"type\" : \"string\"\n    },\n    \"postalCode\" : {\n      \"type\" : \"string\"\n    },\n    \"countryAlpha3Code\" : {\n      \"type\" : \"string\"\n    },\n    \"categoryCode\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "firstAddressLine",

        "getter" : "getFirstAddressLine",
        "setter" : "setFirstAddressLine",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstAddressLine",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "secondAddressLine",

        "getter" : "getSecondAddressLine",
        "setter" : "setSecondAddressLine",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "secondAddressLine",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "city",

        "getter" : "getCity",
        "setter" : "setCity",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "city",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "province",

        "getter" : "getProvince",
        "setter" : "setProvince",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "province",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "postalCode",

        "getter" : "getPostalCode",
        "setter" : "setPostalCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "postalCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "countryAlpha3Code",

        "getter" : "getCountryAlpha3Code",
        "setter" : "setCountryAlpha3Code",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countryAlpha3Code",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "categoryCode",

        "getter" : "getCategoryCode",
        "setter" : "setCategoryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "categoryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonUserCreditCardInformation",
      "classname" : "JsonUserCreditCardInformation",
      "classVarName" : "jsonUserCreditCardInformation",
      "modelJson" : "{\n  \"properties\" : {\n    \"description\" : {\n      \"type\" : \"string\"\n    },\n    \"paymentsInstrumentsId\" : {\n      \"type\" : \"string\"\n    },\n    \"creditCardType\" : {\n      \"type\" : \"string\"\n    },\n    \"nameOnCard\" : {\n      \"type\" : \"string\"\n    },\n    \"expired\" : {\n      \"type\" : \"string\"\n    },\n    \"expirationDate\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "description",

        "getter" : "getDescription",
        "setter" : "setDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "description",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "paymentsInstrumentsId",

        "getter" : "getPaymentsInstrumentsId",
        "setter" : "setPaymentsInstrumentsId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "paymentsInstrumentsId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "creditCardType",

        "getter" : "getCreditCardType",
        "setter" : "setCreditCardType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "creditCardType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nameOnCard",

        "getter" : "getNameOnCard",
        "setter" : "setNameOnCard",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nameOnCard",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "expired",

        "getter" : "getExpired",
        "setter" : "setExpired",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "expired",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "expirationDate",

        "getter" : "getExpirationDate",
        "setter" : "setExpirationDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "expirationDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonFrequentGuestMembership",
      "classname" : "JsonFrequentGuestMembership",
      "classVarName" : "jsonFrequentGuestMembership",
      "modelJson" : "{\n  \"properties\" : {\n    \"frequentGuestMembershipID\" : {\n      \"type\" : \"string\"\n    },\n    \"frequentGuestMembershipCode\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelMembershipNumber\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "frequentGuestMembershipID",

        "getter" : "getFrequentGuestMembershipID",
        "setter" : "setFrequentGuestMembershipID",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "frequentGuestMembershipID",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "frequentGuestMembershipCode",

        "getter" : "getFrequentGuestMembershipCode",
        "setter" : "setFrequentGuestMembershipCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "frequentGuestMembershipCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelMembershipNumber",

        "getter" : "getHotelMembershipNumber",
        "setter" : "setHotelMembershipNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelMembershipNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonPassport",
      "classname" : "JsonPassport",
      "classVarName" : "jsonPassport",
      "modelJson" : "{\n  \"properties\" : {\n    \"countryCode\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "countryCode",

        "getter" : "getCountryCode",
        "setter" : "setCountryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonTsaDetails",
      "classname" : "JsonTsaDetails",
      "classVarName" : "jsonTsaDetails",
      "modelJson" : "{\n  \"properties\" : {\n    \"gender\" : {\n      \"type\" : \"string\"\n    },\n    \"dateOfBirth\" : {\n      \"type\" : \"string\"\n    },\n    \"redressNumber\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "gender",

        "getter" : "getGender",
        "setter" : "setGender",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "gender",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dateOfBirth",

        "getter" : "getDateOfBirth",
        "setter" : "setDateOfBirth",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "dateOfBirth",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "redressNumber",

        "getter" : "getRedressNumber",
        "setter" : "setRedressNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "redressNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonFrequentFlyerMembership",
      "classname" : "JsonFrequentFlyerMembership",
      "classVarName" : "jsonFrequentFlyerMembership",
      "modelJson" : "{\n  \"properties\" : {\n    \"membershipNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"planCode\" : {\n      \"type\" : \"string\"\n    },\n    \"airlineCode\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "membershipNumber",

        "getter" : "getMembershipNumber",
        "setter" : "setMembershipNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "membershipNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "planCode",

        "getter" : "getPlanCode",
        "setter" : "setPlanCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "planCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airlineCode",

        "getter" : "getAirlineCode",
        "setter" : "setAirlineCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonEmergencyContact",
      "classname" : "JsonEmergencyContact",
      "classVarName" : "jsonEmergencyContact",
      "modelJson" : "{\n  \"properties\" : {\n    \"firstName\" : {\n      \"type\" : \"string\"\n    },\n    \"middleName\" : {\n      \"type\" : \"string\"\n    },\n    \"lastName\" : {\n      \"type\" : \"string\"\n    },\n    \"phone\" : {\n      \"$ref\" : \"#/definitions/jsonPhone\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "firstName",

        "getter" : "getFirstName",
        "setter" : "setFirstName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "middleName",

        "getter" : "getMiddleName",
        "setter" : "setMiddleName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "middleName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lastName",

        "getter" : "getLastName",
        "setter" : "setLastName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "lastName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "phone",
        "complexType" : "jsonPhone",
        "getter" : "getPhone",
        "setter" : "setPhone",
        "datatype" : "jsonPhone",
        "datatypeWithEnum" : "jsonPhone",
        "name" : "phone",
        "defaultValue" : "null",
        "baseType" : "jsonPhone",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonPhone\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "jsonPhone" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonValueAdd",
      "classname" : "JsonValueAdd",
      "classVarName" : "jsonValueAdd",
      "modelJson" : "{\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\"\n    },\n    \"description\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "id",

        "getter" : "getId",
        "setter" : "setId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "id",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "description",

        "getter" : "getDescription",
        "setter" : "setDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "description",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonHotel",
      "classname" : "JsonHotel",
      "classVarName" : "jsonHotel",
      "modelJson" : "{\n  \"properties\" : {\n    \"sortIndex\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelId\" : {\n      \"type\" : \"string\"\n    },\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"localizedName\" : {\n      \"type\" : \"string\"\n    },\n    \"nonLocalizedName\" : {\n      \"type\" : \"string\"\n    },\n    \"address\" : {\n      \"type\" : \"string\"\n    },\n    \"city\" : {\n      \"type\" : \"string\"\n    },\n    \"stateProvinceCode\" : {\n      \"type\" : \"string\"\n    },\n    \"countryCode\" : {\n      \"type\" : \"string\"\n    },\n    \"postalCode\" : {\n      \"type\" : \"string\"\n    },\n    \"airportCode\" : {\n      \"type\" : \"string\"\n    },\n    \"supplierType\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelStarRating\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelStarRatingCssClassName\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelGuestRating\" : {\n      \"type\" : \"string\"\n    },\n    \"totalRecommendations\" : {\n      \"type\" : \"string\"\n    },\n    \"percentRecommended\" : {\n      \"type\" : \"string\"\n    },\n    \"totalReviews\" : {\n      \"type\" : \"string\"\n    },\n    \"shortDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"locationDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"locationId\" : {\n      \"type\" : \"string\"\n    },\n    \"lowRate\" : {\n      \"type\" : \"string\"\n    },\n    \"lowRateInfo\" : {\n      \"$ref\" : \"#/definitions/jsonBaseRateInfo\"\n    },\n    \"rateCurrencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"rateCurrencySymbol\" : {\n      \"type\" : \"string\"\n    },\n    \"roomsLeftAtThisRate\" : {\n      \"type\" : \"string\"\n    },\n    \"latitude\" : {\n      \"type\" : \"string\"\n    },\n    \"longitude\" : {\n      \"type\" : \"string\"\n    },\n    \"proximityDistanceInMiles\" : {\n      \"type\" : \"string\"\n    },\n    \"proximityDistanceInKiloMeters\" : {\n      \"type\" : \"string\"\n    },\n    \"largeThumbnailUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"thumbnailUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"discountMessage\" : {\n      \"type\" : \"string\"\n    },\n    \"isDiscountRestrictedToCurrentSourceType\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isSameDayDRR\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isHotelAvailable\" : {\n      \"type\" : \"boolean\"\n    },\n    \"notAvailableMessage\" : {\n      \"type\" : \"string\"\n    },\n    \"isSponsoredListing\" : {\n      \"type\" : \"boolean\"\n    },\n    \"clickTrackingUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"clickTrackingRedirectUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"impressionTrackingUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"omnitureAdDisplayedUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"omnitureAdClickedUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"hasFreeCancellation\" : {\n      \"type\" : \"boolean\"\n    },\n    \"amenities\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonValueAdd\"\n      }\n    },\n    \"distanceUnit\" : {\n      \"type\" : \"string\"\n    },\n    \"didGetBackHighestPriceFromSurvey\" : {\n      \"type\" : \"boolean\"\n    },\n    \"highestPriceFromSurvey\" : {\n      \"type\" : \"string\"\n    },\n    \"isDudley\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isVipAccess\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isPaymentChoiceAvailable\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isShowEtpChoice\" : {\n      \"type\" : \"boolean\"\n    },\n    \"allowedToDisplayRatingAsStars\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "sortIndex",

        "getter" : "getSortIndex",
        "setter" : "setSortIndex",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "sortIndex",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelId",

        "getter" : "getHotelId",
        "setter" : "setHotelId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localizedName",

        "getter" : "getLocalizedName",
        "setter" : "setLocalizedName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localizedName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nonLocalizedName",

        "getter" : "getNonLocalizedName",
        "setter" : "setNonLocalizedName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nonLocalizedName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "address",

        "getter" : "getAddress",
        "setter" : "setAddress",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "address",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "city",

        "getter" : "getCity",
        "setter" : "setCity",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "city",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "stateProvinceCode",

        "getter" : "getStateProvinceCode",
        "setter" : "setStateProvinceCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "stateProvinceCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "countryCode",

        "getter" : "getCountryCode",
        "setter" : "setCountryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "postalCode",

        "getter" : "getPostalCode",
        "setter" : "setPostalCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "postalCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airportCode",

        "getter" : "getAirportCode",
        "setter" : "setAirportCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airportCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "supplierType",

        "getter" : "getSupplierType",
        "setter" : "setSupplierType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "supplierType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStarRating",

        "getter" : "getHotelStarRating",
        "setter" : "setHotelStarRating",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStarRating",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStarRatingCssClassName",

        "getter" : "getHotelStarRatingCssClassName",
        "setter" : "setHotelStarRatingCssClassName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStarRatingCssClassName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelGuestRating",

        "getter" : "getHotelGuestRating",
        "setter" : "setHotelGuestRating",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelGuestRating",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalRecommendations",

        "getter" : "getTotalRecommendations",
        "setter" : "setTotalRecommendations",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalRecommendations",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "percentRecommended",

        "getter" : "getPercentRecommended",
        "setter" : "setPercentRecommended",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "percentRecommended",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalReviews",

        "getter" : "getTotalReviews",
        "setter" : "setTotalReviews",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalReviews",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "shortDescription",

        "getter" : "getShortDescription",
        "setter" : "setShortDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "shortDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "locationDescription",

        "getter" : "getLocationDescription",
        "setter" : "setLocationDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locationDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "locationId",

        "getter" : "getLocationId",
        "setter" : "setLocationId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locationId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lowRate",

        "getter" : "getLowRate",
        "setter" : "setLowRate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "lowRate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lowRateInfo",
        "complexType" : "jsonBaseRateInfo",
        "getter" : "getLowRateInfo",
        "setter" : "setLowRateInfo",
        "datatype" : "jsonBaseRateInfo",
        "datatypeWithEnum" : "jsonBaseRateInfo",
        "name" : "lowRateInfo",
        "defaultValue" : "null",
        "baseType" : "jsonBaseRateInfo",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonBaseRateInfo\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rateCurrencyCode",

        "getter" : "getRateCurrencyCode",
        "setter" : "setRateCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "rateCurrencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rateCurrencySymbol",

        "getter" : "getRateCurrencySymbol",
        "setter" : "setRateCurrencySymbol",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "rateCurrencySymbol",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomsLeftAtThisRate",

        "getter" : "getRoomsLeftAtThisRate",
        "setter" : "setRoomsLeftAtThisRate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomsLeftAtThisRate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "latitude",

        "getter" : "getLatitude",
        "setter" : "setLatitude",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "latitude",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "longitude",

        "getter" : "getLongitude",
        "setter" : "setLongitude",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "longitude",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "proximityDistanceInMiles",

        "getter" : "getProximityDistanceInMiles",
        "setter" : "setProximityDistanceInMiles",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "proximityDistanceInMiles",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "proximityDistanceInKiloMeters",

        "getter" : "getProximityDistanceInKiloMeters",
        "setter" : "setProximityDistanceInKiloMeters",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "proximityDistanceInKiloMeters",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "largeThumbnailUrl",

        "getter" : "getLargeThumbnailUrl",
        "setter" : "setLargeThumbnailUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "largeThumbnailUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "thumbnailUrl",

        "getter" : "getThumbnailUrl",
        "setter" : "setThumbnailUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "thumbnailUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "discountMessage",

        "getter" : "getDiscountMessage",
        "setter" : "setDiscountMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "discountMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isDiscountRestrictedToCurrentSourceType",

        "getter" : "getIsDiscountRestrictedToCurrentSourceType",
        "setter" : "setIsDiscountRestrictedToCurrentSourceType",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isDiscountRestrictedToCurrentSourceType",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isSameDayDRR",

        "getter" : "getIsSameDayDRR",
        "setter" : "setIsSameDayDRR",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isSameDayDRR",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isHotelAvailable",

        "getter" : "getIsHotelAvailable",
        "setter" : "setIsHotelAvailable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isHotelAvailable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "notAvailableMessage",

        "getter" : "getNotAvailableMessage",
        "setter" : "setNotAvailableMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "notAvailableMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isSponsoredListing",

        "getter" : "getIsSponsoredListing",
        "setter" : "setIsSponsoredListing",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isSponsoredListing",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "clickTrackingUrl",

        "getter" : "getClickTrackingUrl",
        "setter" : "setClickTrackingUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "clickTrackingUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "clickTrackingRedirectUrl",

        "getter" : "getClickTrackingRedirectUrl",
        "setter" : "setClickTrackingRedirectUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "clickTrackingRedirectUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "impressionTrackingUrl",

        "getter" : "getImpressionTrackingUrl",
        "setter" : "setImpressionTrackingUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "impressionTrackingUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "omnitureAdDisplayedUrl",

        "getter" : "getOmnitureAdDisplayedUrl",
        "setter" : "setOmnitureAdDisplayedUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "omnitureAdDisplayedUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "omnitureAdClickedUrl",

        "getter" : "getOmnitureAdClickedUrl",
        "setter" : "setOmnitureAdClickedUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "omnitureAdClickedUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasFreeCancellation",

        "getter" : "getHasFreeCancellation",
        "setter" : "setHasFreeCancellation",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasFreeCancellation",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amenities",
        "complexType" : "jsonValueAdd",
        "getter" : "getAmenities",
        "setter" : "setAmenities",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "amenities",
        "defaultValue" : "new ArrayList<jsonValueAdd>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonValueAdd\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "distanceUnit",

        "getter" : "getDistanceUnit",
        "setter" : "setDistanceUnit",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "distanceUnit",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "didGetBackHighestPriceFromSurvey",

        "getter" : "getDidGetBackHighestPriceFromSurvey",
        "setter" : "setDidGetBackHighestPriceFromSurvey",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "didGetBackHighestPriceFromSurvey",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "highestPriceFromSurvey",

        "getter" : "getHighestPriceFromSurvey",
        "setter" : "setHighestPriceFromSurvey",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "highestPriceFromSurvey",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isDudley",

        "getter" : "getIsDudley",
        "setter" : "setIsDudley",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isDudley",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isVipAccess",

        "getter" : "getIsVipAccess",
        "setter" : "setIsVipAccess",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isVipAccess",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isPaymentChoiceAvailable",

        "getter" : "getIsPaymentChoiceAvailable",
        "setter" : "setIsPaymentChoiceAvailable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isPaymentChoiceAvailable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isShowEtpChoice",

        "getter" : "getIsShowEtpChoice",
        "setter" : "setIsShowEtpChoice",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isShowEtpChoice",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "allowedToDisplayRatingAsStars",

        "getter" : "getAllowedToDisplayRatingAsStars",
        "setter" : "setAllowedToDisplayRatingAsStars",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "allowedToDisplayRatingAsStars",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonValueAdd", "string", "jsonBaseRateInfo", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonOpaqueNeighborhood",
      "classname" : "JsonOpaqueNeighborhood",
      "classVarName" : "jsonOpaqueNeighborhood",
      "modelJson" : "{\n  \"properties\" : {\n    \"opaqueHoodId\" : {\n      \"type\" : \"string\"\n    },\n    \"opaqueHoodName\" : {\n      \"type\" : \"string\"\n    },\n    \"opaqueHoodDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"cityName\" : {\n      \"type\" : \"string\"\n    },\n    \"provinceName\" : {\n      \"type\" : \"string\"\n    },\n    \"centroid\" : {\n      \"$ref\" : \"#/definitions/latLongDomain\"\n    },\n    \"opaqueHoodShape\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/latLongDomain\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "opaqueHoodId",

        "getter" : "getOpaqueHoodId",
        "setter" : "setOpaqueHoodId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "opaqueHoodId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "opaqueHoodName",

        "getter" : "getOpaqueHoodName",
        "setter" : "setOpaqueHoodName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "opaqueHoodName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "opaqueHoodDescription",

        "getter" : "getOpaqueHoodDescription",
        "setter" : "setOpaqueHoodDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "opaqueHoodDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cityName",

        "getter" : "getCityName",
        "setter" : "setCityName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cityName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "provinceName",

        "getter" : "getProvinceName",
        "setter" : "setProvinceName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "provinceName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "centroid",
        "complexType" : "latLongDomain",
        "getter" : "getCentroid",
        "setter" : "setCentroid",
        "datatype" : "latLongDomain",
        "datatypeWithEnum" : "latLongDomain",
        "name" : "centroid",
        "defaultValue" : "null",
        "baseType" : "latLongDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/latLongDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "opaqueHoodShape",
        "complexType" : "latLongDomain",
        "getter" : "getOpaqueHoodShape",
        "setter" : "setOpaqueHoodShape",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "opaqueHoodShape",
        "defaultValue" : "new ArrayList<latLongDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/latLongDomain\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "latLongDomain", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonAmbiguousCityMatch",
      "classname" : "JsonAmbiguousCityMatch",
      "classVarName" : "jsonAmbiguousCityMatch",
      "modelJson" : "{\n  \"properties\" : {\n    \"regionId\" : {\n      \"type\" : \"string\"\n    },\n    \"cityName\" : {\n      \"type\" : \"string\"\n    },\n    \"cityUrl\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "regionId",

        "getter" : "getRegionId",
        "setter" : "setRegionId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "regionId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cityName",

        "getter" : "getCityName",
        "setter" : "setCityName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cityName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cityUrl",

        "getter" : "getCityUrl",
        "setter" : "setCityUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cityUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonOpaqueHotel",
      "classname" : "JsonOpaqueHotel",
      "classVarName" : "jsonOpaqueHotel",
      "modelJson" : "{\n  \"properties\" : {\n    \"sortIndex\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelStarRating\" : {\n      \"type\" : \"string\"\n    },\n    \"opaqueHoodId\" : {\n      \"type\" : \"string\"\n    },\n    \"opaqueSearchResultId\" : {\n      \"type\" : \"string\"\n    },\n    \"opaqueNeighborhood\" : {\n      \"$ref\" : \"#/definitions/jsonOpaqueNeighborhood\"\n    },\n    \"productKey\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelAmenities\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"hotelOffer\" : {\n      \"$ref\" : \"#/definitions/jsonBaseRateInfo\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "sortIndex",

        "getter" : "getSortIndex",
        "setter" : "setSortIndex",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "sortIndex",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelName",

        "getter" : "getHotelName",
        "setter" : "setHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStarRating",

        "getter" : "getHotelStarRating",
        "setter" : "setHotelStarRating",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStarRating",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "opaqueHoodId",

        "getter" : "getOpaqueHoodId",
        "setter" : "setOpaqueHoodId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "opaqueHoodId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "opaqueSearchResultId",

        "getter" : "getOpaqueSearchResultId",
        "setter" : "setOpaqueSearchResultId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "opaqueSearchResultId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "opaqueNeighborhood",
        "complexType" : "jsonOpaqueNeighborhood",
        "getter" : "getOpaqueNeighborhood",
        "setter" : "setOpaqueNeighborhood",
        "datatype" : "jsonOpaqueNeighborhood",
        "datatypeWithEnum" : "jsonOpaqueNeighborhood",
        "name" : "opaqueNeighborhood",
        "defaultValue" : "null",
        "baseType" : "jsonOpaqueNeighborhood",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonOpaqueNeighborhood\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "productKey",

        "getter" : "getProductKey",
        "setter" : "setProductKey",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "productKey",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelAmenities",

        "getter" : "getHotelAmenities",
        "setter" : "setHotelAmenities",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "hotelAmenities",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelOffer",
        "complexType" : "jsonBaseRateInfo",
        "getter" : "getHotelOffer",
        "setter" : "setHotelOffer",
        "datatype" : "jsonBaseRateInfo",
        "datatypeWithEnum" : "jsonBaseRateInfo",
        "name" : "hotelOffer",
        "defaultValue" : "null",
        "baseType" : "jsonBaseRateInfo",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonBaseRateInfo\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "jsonBaseRateInfo", "List", "jsonOpaqueNeighborhood", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "flightSegmentJson",
      "classname" : "FlightSegmentJson",
      "classVarName" : "flightSegmentJson",
      "modelJson" : "{\n  \"properties\" : {\n    \"departureTime\" : {\n      \"type\" : \"string\"\n    },\n    \"departureTimeEpochSeconds\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"departureTimeRaw\" : {\n      \"type\" : \"string\"\n    },\n    \"departureTimeZoneOffsetSeconds\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"arrivalTime\" : {\n      \"type\" : \"string\"\n    },\n    \"arrivalTimeEpochSeconds\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"arrivalTimeRaw\" : {\n      \"type\" : \"string\"\n    },\n    \"arrivalTimeZoneOffsetSeconds\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"arrivalAirportCode\" : {\n      \"type\" : \"string\"\n    },\n    \"arrivalAirportLocation\" : {\n      \"type\" : \"string\"\n    },\n    \"departureAirportCode\" : {\n      \"type\" : \"string\"\n    },\n    \"departureAirportLocation\" : {\n      \"type\" : \"string\"\n    },\n    \"airlineName\" : {\n      \"type\" : \"string\"\n    },\n    \"airlineCode\" : {\n      \"type\" : \"string\"\n    },\n    \"flightNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"onTimePercentage\" : {\n      \"type\" : \"string\"\n    },\n    \"operatingAirlineName\" : {\n      \"type\" : \"string\"\n    },\n    \"operatingAirlineCode\" : {\n      \"type\" : \"string\"\n    },\n    \"equipmentCode\" : {\n      \"type\" : \"string\"\n    },\n    \"equipmentDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"duration\" : {\n      \"type\" : \"string\"\n    },\n    \"distance\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"distanceUnits\" : {\n      \"type\" : \"string\"\n    },\n    \"stops\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"meal\" : {\n      \"type\" : \"string\"\n    },\n    \"sameFlightAsPreviousSegment\" : {\n      \"type\" : \"boolean\"\n    },\n    \"providerCode\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "departureTime",

        "getter" : "getDepartureTime",
        "setter" : "setDepartureTime",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "departureTime",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "departureTimeEpochSeconds",

        "getter" : "getDepartureTimeEpochSeconds",
        "setter" : "setDepartureTimeEpochSeconds",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "departureTimeEpochSeconds",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "departureTimeRaw",

        "getter" : "getDepartureTimeRaw",
        "setter" : "setDepartureTimeRaw",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "departureTimeRaw",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "departureTimeZoneOffsetSeconds",

        "getter" : "getDepartureTimeZoneOffsetSeconds",
        "setter" : "setDepartureTimeZoneOffsetSeconds",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "departureTimeZoneOffsetSeconds",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "arrivalTime",

        "getter" : "getArrivalTime",
        "setter" : "setArrivalTime",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "arrivalTime",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "arrivalTimeEpochSeconds",

        "getter" : "getArrivalTimeEpochSeconds",
        "setter" : "setArrivalTimeEpochSeconds",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "arrivalTimeEpochSeconds",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "arrivalTimeRaw",

        "getter" : "getArrivalTimeRaw",
        "setter" : "setArrivalTimeRaw",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "arrivalTimeRaw",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "arrivalTimeZoneOffsetSeconds",

        "getter" : "getArrivalTimeZoneOffsetSeconds",
        "setter" : "setArrivalTimeZoneOffsetSeconds",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "arrivalTimeZoneOffsetSeconds",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "arrivalAirportCode",

        "getter" : "getArrivalAirportCode",
        "setter" : "setArrivalAirportCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "arrivalAirportCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "arrivalAirportLocation",

        "getter" : "getArrivalAirportLocation",
        "setter" : "setArrivalAirportLocation",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "arrivalAirportLocation",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "departureAirportCode",

        "getter" : "getDepartureAirportCode",
        "setter" : "setDepartureAirportCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "departureAirportCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "departureAirportLocation",

        "getter" : "getDepartureAirportLocation",
        "setter" : "setDepartureAirportLocation",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "departureAirportLocation",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airlineName",

        "getter" : "getAirlineName",
        "setter" : "setAirlineName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airlineCode",

        "getter" : "getAirlineCode",
        "setter" : "setAirlineCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flightNumber",

        "getter" : "getFlightNumber",
        "setter" : "setFlightNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "flightNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "onTimePercentage",

        "getter" : "getOnTimePercentage",
        "setter" : "setOnTimePercentage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "onTimePercentage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "operatingAirlineName",

        "getter" : "getOperatingAirlineName",
        "setter" : "setOperatingAirlineName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "operatingAirlineName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "operatingAirlineCode",

        "getter" : "getOperatingAirlineCode",
        "setter" : "setOperatingAirlineCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "operatingAirlineCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "equipmentCode",

        "getter" : "getEquipmentCode",
        "setter" : "setEquipmentCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "equipmentCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "equipmentDescription",

        "getter" : "getEquipmentDescription",
        "setter" : "setEquipmentDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "equipmentDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "duration",

        "getter" : "getDuration",
        "setter" : "setDuration",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "duration",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "distance",

        "getter" : "getDistance",
        "setter" : "setDistance",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "distance",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "distanceUnits",

        "getter" : "getDistanceUnits",
        "setter" : "setDistanceUnits",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "distanceUnits",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "stops",

        "getter" : "getStops",
        "setter" : "setStops",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "stops",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "meal",

        "getter" : "getMeal",
        "setter" : "setMeal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "meal",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "sameFlightAsPreviousSegment",

        "getter" : "getSameFlightAsPreviousSegment",
        "setter" : "setSameFlightAsPreviousSegment",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "sameFlightAsPreviousSegment",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "providerCode",

        "getter" : "getProviderCode",
        "setter" : "setProviderCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "providerCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "flightLegJson",
      "classname" : "FlightLegJson",
      "classVarName" : "flightLegJson",
      "modelJson" : "{\n  \"properties\" : {\n    \"legId\" : {\n      \"type\" : \"string\"\n    },\n    \"baggageFeesUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"segments\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/flightSegmentJson\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "legId",

        "getter" : "getLegId",
        "setter" : "setLegId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "legId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "baggageFeesUrl",

        "getter" : "getBaggageFeesUrl",
        "setter" : "setBaggageFeesUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "baggageFeesUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "segments",
        "complexType" : "flightSegmentJson",
        "getter" : "getSegments",
        "setter" : "setSegments",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "segments",
        "defaultValue" : "new ArrayList<flightSegmentJson>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/flightSegmentJson\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "flightSegmentJson", "string", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "mobilePrice",
      "classname" : "MobilePrice",
      "classVarName" : "mobilePrice",
      "modelJson" : "{\n  \"properties\" : {\n    \"amount\" : {\n      \"type\" : \"string\"\n    },\n    \"formattedPrice\" : {\n      \"type\" : \"string\"\n    },\n    \"formattedWholePrice\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "amount",

        "getter" : "getAmount",
        "setter" : "setAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "amount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "formattedPrice",

        "getter" : "getFormattedPrice",
        "setter" : "setFormattedPrice",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "formattedPrice",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "formattedWholePrice",

        "getter" : "getFormattedWholePrice",
        "setter" : "setFormattedWholePrice",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "formattedWholePrice",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "passengerCategoryPrice",
      "classname" : "PassengerCategoryPrice",
      "classVarName" : "passengerCategoryPrice",
      "modelJson" : "{\n  \"properties\" : {\n    \"passengerCategory\" : {\n      \"type\" : \"string\"\n    },\n    \"totalPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"basePrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"taxesPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "passengerCategory",

        "getter" : "getPassengerCategory",
        "setter" : "setPassengerCategory",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "passengerCategory",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalPrice",
        "complexType" : "mobilePrice",
        "getter" : "getTotalPrice",
        "setter" : "setTotalPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "basePrice",
        "complexType" : "mobilePrice",
        "getter" : "getBasePrice",
        "setter" : "setBasePrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "basePrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxesPrice",
        "complexType" : "mobilePrice",
        "getter" : "getTaxesPrice",
        "setter" : "setTaxesPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "taxesPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "mobilePrice" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "flightSegmentAttributesJson",
      "classname" : "FlightSegmentAttributesJson",
      "classVarName" : "flightSegmentAttributesJson",
      "modelJson" : "{\n  \"properties\" : {\n    \"bookingCode\" : {\n      \"type\" : \"string\"\n    },\n    \"cabinCode\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "bookingCode",

        "getter" : "getBookingCode",
        "setter" : "setBookingCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cabinCode",

        "getter" : "getCabinCode",
        "setter" : "setCabinCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cabinCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "flightOfferJson",
      "classname" : "FlightOfferJson",
      "classVarName" : "flightOfferJson",
      "modelJson" : "{\n  \"properties\" : {\n    \"legIds\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"currency\" : {\n      \"type\" : \"string\"\n    },\n    \"baseFare\" : {\n      \"type\" : \"string\"\n    },\n    \"baseFarePrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"totalFare\" : {\n      \"type\" : \"string\"\n    },\n    \"totalFarePrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"pricePerPassengerCategory\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/passengerCategoryPrice\"\n      }\n    },\n    \"averageTotalPricePerTicket\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"numberOfTickets\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"taxes\" : {\n      \"type\" : \"string\"\n    },\n    \"taxesPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"fees\" : {\n      \"type\" : \"string\"\n    },\n    \"feesPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"showFees\" : {\n      \"type\" : \"boolean\"\n    },\n    \"productKey\" : {\n      \"type\" : \"string\"\n    },\n    \"mobileShoppingKey\" : {\n      \"type\" : \"string\"\n    },\n    \"seatsRemaining\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"segmentAttributes\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"array\",\n        \"items\" : {\n          \"$ref\" : \"#/definitions/flightSegmentAttributesJson\"\n        }\n      }\n    },\n    \"baggageFeesUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"fareType\" : {\n      \"type\" : \"string\"\n    },\n    \"fareName\" : {\n      \"type\" : \"string\"\n    },\n    \"fareNameLink\" : {\n      \"type\" : \"string\"\n    },\n    \"isInternational\" : {\n      \"type\" : \"boolean\"\n    },\n    \"mayChargeOBFees\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hasBagFee\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hasNoBagFee\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "legIds",

        "getter" : "getLegIds",
        "setter" : "setLegIds",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "legIds",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currency",

        "getter" : "getCurrency",
        "setter" : "setCurrency",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currency",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "baseFare",

        "getter" : "getBaseFare",
        "setter" : "setBaseFare",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "baseFare",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "baseFarePrice",
        "complexType" : "mobilePrice",
        "getter" : "getBaseFarePrice",
        "setter" : "setBaseFarePrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "baseFarePrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalFare",

        "getter" : "getTotalFare",
        "setter" : "setTotalFare",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalFare",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalFarePrice",
        "complexType" : "mobilePrice",
        "getter" : "getTotalFarePrice",
        "setter" : "setTotalFarePrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalFarePrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "pricePerPassengerCategory",
        "complexType" : "passengerCategoryPrice",
        "getter" : "getPricePerPassengerCategory",
        "setter" : "setPricePerPassengerCategory",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "pricePerPassengerCategory",
        "defaultValue" : "new ArrayList<passengerCategoryPrice>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/passengerCategoryPrice\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "averageTotalPricePerTicket",
        "complexType" : "mobilePrice",
        "getter" : "getAverageTotalPricePerTicket",
        "setter" : "setAverageTotalPricePerTicket",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "averageTotalPricePerTicket",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "numberOfTickets",

        "getter" : "getNumberOfTickets",
        "setter" : "setNumberOfTickets",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "numberOfTickets",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "taxes",

        "getter" : "getTaxes",
        "setter" : "setTaxes",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "taxes",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxesPrice",
        "complexType" : "mobilePrice",
        "getter" : "getTaxesPrice",
        "setter" : "setTaxesPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "taxesPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fees",

        "getter" : "getFees",
        "setter" : "setFees",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fees",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "feesPrice",
        "complexType" : "mobilePrice",
        "getter" : "getFeesPrice",
        "setter" : "setFeesPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "feesPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "showFees",

        "getter" : "getShowFees",
        "setter" : "setShowFees",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "showFees",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "productKey",

        "getter" : "getProductKey",
        "setter" : "setProductKey",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "productKey",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "mobileShoppingKey",

        "getter" : "getMobileShoppingKey",
        "setter" : "setMobileShoppingKey",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "mobileShoppingKey",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "seatsRemaining",

        "getter" : "getSeatsRemaining",
        "setter" : "setSeatsRemaining",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "seatsRemaining",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "segmentAttributes",
        "complexType" : "array",
        "getter" : "getSegmentAttributes",
        "setter" : "setSegmentAttributes",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "segmentAttributes",
        "defaultValue" : "new ArrayList<array>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"array\",\n    \"items\" : {\n      \"$ref\" : \"#/definitions/flightSegmentAttributesJson\"\n    }\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "baggageFeesUrl",

        "getter" : "getBaggageFeesUrl",
        "setter" : "setBaggageFeesUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "baggageFeesUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fareType",

        "getter" : "getFareType",
        "setter" : "setFareType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fareType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fareName",

        "getter" : "getFareName",
        "setter" : "setFareName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fareName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fareNameLink",

        "getter" : "getFareNameLink",
        "setter" : "setFareNameLink",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fareNameLink",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isInternational",

        "getter" : "getIsInternational",
        "setter" : "setIsInternational",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isInternational",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "mayChargeOBFees",

        "getter" : "getMayChargeOBFees",
        "setter" : "setMayChargeOBFees",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "mayChargeOBFees",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasBagFee",

        "getter" : "getHasBagFee",
        "setter" : "setHasBagFee",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasBagFee",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasNoBagFee",

        "getter" : "getHasNoBagFee",
        "setter" : "setHasNoBagFee",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasNoBagFee",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "passengerCategoryPrice", "string", "mobilePrice", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "searchCityJson",
      "classname" : "SearchCityJson",
      "classVarName" : "searchCityJson",
      "modelJson" : "{\n  \"properties\" : {\n    \"code\" : {\n      \"type\" : \"string\"\n    },\n    \"city\" : {\n      \"type\" : \"string\"\n    },\n    \"province\" : {\n      \"type\" : \"string\"\n    },\n    \"country\" : {\n      \"type\" : \"string\"\n    },\n    \"searchType\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "code",

        "getter" : "getCode",
        "setter" : "setCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "code",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "city",

        "getter" : "getCity",
        "setter" : "setCity",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "city",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "province",

        "getter" : "getProvince",
        "setter" : "setProvince",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "province",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "country",

        "getter" : "getCountry",
        "setter" : "setCountry",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "country",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "searchType",

        "getter" : "getSearchType",
        "setter" : "setSearchType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "searchType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "airport",
      "classname" : "Airport",
      "classVarName" : "airport",
      "modelJson" : "{\n  \"properties\" : {\n    \"airportCode\" : {\n      \"type\" : \"string\"\n    },\n    \"regionId\" : {\n      \"type\" : \"string\"\n    },\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"country\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "airportCode",

        "getter" : "getAirportCode",
        "setter" : "setAirportCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airportCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "regionId",

        "getter" : "getRegionId",
        "setter" : "setRegionId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "regionId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "country",

        "getter" : "getCountry",
        "setter" : "setCountry",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "country",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "route",
      "classname" : "Route",
      "classVarName" : "route",
      "modelJson" : "{\n  \"properties\" : {\n    \"origin\" : {\n      \"type\" : \"string\"\n    },\n    \"destinations\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "origin",

        "getter" : "getOrigin",
        "setter" : "setOrigin",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "origin",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "destinations",

        "getter" : "getDestinations",
        "setter" : "setDestinations",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "destinations",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "flightRulesJson",
      "classname" : "FlightRulesJson",
      "classVarName" : "flightRulesJson",
      "modelJson" : "{\n  \"properties\" : {\n    \"isChangeAllowed\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isEnrouteChangeAllowed\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isEnrouteRefundAllowed\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isRefundable\" : {\n      \"type\" : \"boolean\"\n    },\n    \"currencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"changePenaltyAmount\" : {\n      \"type\" : \"string\"\n    },\n    \"refundPenaltyAmount\" : {\n      \"type\" : \"string\"\n    },\n    \"enrouteChangePenaltyAmount\" : {\n      \"type\" : \"string\"\n    },\n    \"enrouteRefundAllowedAmount\" : {\n      \"type\" : \"string\"\n    },\n    \"changePenaltyPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"refundPenaltyPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"enrouteChangePenaltyPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"enrouteRefundAllowedPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"summaryText\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "isChangeAllowed",

        "getter" : "getIsChangeAllowed",
        "setter" : "setIsChangeAllowed",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isChangeAllowed",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isEnrouteChangeAllowed",

        "getter" : "getIsEnrouteChangeAllowed",
        "setter" : "setIsEnrouteChangeAllowed",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isEnrouteChangeAllowed",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isEnrouteRefundAllowed",

        "getter" : "getIsEnrouteRefundAllowed",
        "setter" : "setIsEnrouteRefundAllowed",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isEnrouteRefundAllowed",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isRefundable",

        "getter" : "getIsRefundable",
        "setter" : "setIsRefundable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isRefundable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencyCode",

        "getter" : "getCurrencyCode",
        "setter" : "setCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "changePenaltyAmount",

        "getter" : "getChangePenaltyAmount",
        "setter" : "setChangePenaltyAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "changePenaltyAmount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "refundPenaltyAmount",

        "getter" : "getRefundPenaltyAmount",
        "setter" : "setRefundPenaltyAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "refundPenaltyAmount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "enrouteChangePenaltyAmount",

        "getter" : "getEnrouteChangePenaltyAmount",
        "setter" : "setEnrouteChangePenaltyAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "enrouteChangePenaltyAmount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "enrouteRefundAllowedAmount",

        "getter" : "getEnrouteRefundAllowedAmount",
        "setter" : "setEnrouteRefundAllowedAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "enrouteRefundAllowedAmount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "changePenaltyPrice",
        "complexType" : "mobilePrice",
        "getter" : "getChangePenaltyPrice",
        "setter" : "setChangePenaltyPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "changePenaltyPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "refundPenaltyPrice",
        "complexType" : "mobilePrice",
        "getter" : "getRefundPenaltyPrice",
        "setter" : "setRefundPenaltyPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "refundPenaltyPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "enrouteChangePenaltyPrice",
        "complexType" : "mobilePrice",
        "getter" : "getEnrouteChangePenaltyPrice",
        "setter" : "setEnrouteChangePenaltyPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "enrouteChangePenaltyPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "enrouteRefundAllowedPrice",
        "complexType" : "mobilePrice",
        "getter" : "getEnrouteRefundAllowedPrice",
        "setter" : "setEnrouteRefundAllowedPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "enrouteRefundAllowedPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "summaryText",

        "getter" : "getSummaryText",
        "setter" : "setSummaryText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "summaryText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "mobilePrice" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "apiNewTrip",
      "classname" : "ApiNewTrip",
      "classVarName" : "apiNewTrip",
      "modelJson" : "{\n  \"properties\" : {\n    \"itineraryNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"travelRecordLocator\" : {\n      \"type\" : \"string\"\n    },\n    \"tripId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "itineraryNumber",

        "getter" : "getItineraryNumber",
        "setter" : "setItineraryNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "itineraryNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "travelRecordLocator",

        "getter" : "getTravelRecordLocator",
        "setter" : "setTravelRecordLocator",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "travelRecordLocator",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tripId",

        "getter" : "getTripId",
        "setter" : "setTripId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tripId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "flightDetailedRulesJson",
      "classname" : "FlightDetailedRulesJson",
      "classVarName" : "flightDetailedRulesJson",
      "modelJson" : "{\n  \"properties\" : {\n    \"RuleToTextMap\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Returns a Map data structure\"\n    },\n    \"RuleToUrlMap\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Returns a Map data structure\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "RuleToTextMap",

        "getter" : "getRuleToTextMap",
        "setter" : "setRuleToTextMap",
        "description" : "Returns a Map data structure",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "RuleToTextMap",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Returns a Map data structure\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "RuleToUrlMap",

        "getter" : "getRuleToUrlMap",
        "setter" : "setRuleToUrlMap",
        "description" : "Returns a Map data structure",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "RuleToUrlMap",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Returns a Map data structure\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "apiPaymentOptionJson",
      "classname" : "ApiPaymentOptionJson",
      "classVarName" : "apiPaymentOptionJson",
      "modelJson" : "{\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"fee\" : {\n      \"type\" : \"string\"\n    },\n    \"feeCurrencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"totalFarePriceWithFee\" : {\n      \"type\" : \"string\"\n    },\n    \"formattedFee\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fee",

        "getter" : "getFee",
        "setter" : "setFee",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fee",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "feeCurrencyCode",

        "getter" : "getFeeCurrencyCode",
        "setter" : "setFeeCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "feeCurrencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalFarePriceWithFee",

        "getter" : "getTotalFarePriceWithFee",
        "setter" : "setTotalFarePriceWithFee",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalFarePriceWithFee",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "formattedFee",

        "getter" : "getFormattedFee",
        "setter" : "setFormattedFee",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "formattedFee",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "expediaRewardsForTripJson",
      "classname" : "ExpediaRewardsForTripJson",
      "classVarName" : "expediaRewardsForTripJson",
      "modelJson" : "{\n  \"properties\" : {\n    \"totalPointsToEarn\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"isActiveRewardsMember\" : {\n      \"type\" : \"boolean\"\n    },\n    \"rewardsMembershipTierName\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "totalPointsToEarn",

        "getter" : "getTotalPointsToEarn",
        "setter" : "setTotalPointsToEarn",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "totalPointsToEarn",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "isActiveRewardsMember",

        "getter" : "getIsActiveRewardsMember",
        "setter" : "setIsActiveRewardsMember",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isActiveRewardsMember",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rewardsMembershipTierName",

        "getter" : "getRewardsMembershipTierName",
        "setter" : "setRewardsMembershipTierName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "rewardsMembershipTierName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "addOn",
      "classname" : "AddOn",
      "classVarName" : "addOn",
      "modelJson" : "{\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"description\" : {\n      \"type\" : \"string\"\n    },\n    \"termsUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"insuranceTypeId\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"price\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"displayPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"displayPriceType\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "description",

        "getter" : "getDescription",
        "setter" : "setDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "description",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "termsUrl",

        "getter" : "getTermsUrl",
        "setter" : "setTermsUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "termsUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "insuranceTypeId",

        "getter" : "getInsuranceTypeId",
        "setter" : "setInsuranceTypeId",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "insuranceTypeId",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "price",
        "complexType" : "mobilePrice",
        "getter" : "getPrice",
        "setter" : "setPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "price",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "displayPrice",
        "complexType" : "mobilePrice",
        "getter" : "getDisplayPrice",
        "setter" : "setDisplayPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "displayPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "displayPriceType",

        "getter" : "getDisplayPriceType",
        "setter" : "setDisplayPriceType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "displayPriceType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string", "mobilePrice" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "insurance",
      "classname" : "Insurance",
      "classVarName" : "insurance",
      "modelJson" : "{\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"productId\" : {\n      \"type\" : \"string\"\n    },\n    \"policyNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"description\" : {\n      \"type\" : \"string\"\n    },\n    \"termsUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"totalPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"totalPriceWithoutAddOns\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"displayPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"displayPriceType\" : {\n      \"type\" : \"string\"\n    },\n    \"availableInsuranceAddOns\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/addOn\"\n      }\n    },\n    \"selectedInsuranceAddOn\" : {\n      \"$ref\" : \"#/definitions/addOn\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "productId",

        "getter" : "getProductId",
        "setter" : "setProductId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "productId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "policyNumber",

        "getter" : "getPolicyNumber",
        "setter" : "setPolicyNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "policyNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "description",

        "getter" : "getDescription",
        "setter" : "setDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "description",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "termsUrl",

        "getter" : "getTermsUrl",
        "setter" : "setTermsUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "termsUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalPrice",
        "complexType" : "mobilePrice",
        "getter" : "getTotalPrice",
        "setter" : "setTotalPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalPriceWithoutAddOns",
        "complexType" : "mobilePrice",
        "getter" : "getTotalPriceWithoutAddOns",
        "setter" : "setTotalPriceWithoutAddOns",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalPriceWithoutAddOns",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "displayPrice",
        "complexType" : "mobilePrice",
        "getter" : "getDisplayPrice",
        "setter" : "setDisplayPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "displayPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "displayPriceType",

        "getter" : "getDisplayPriceType",
        "setter" : "setDisplayPriceType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "displayPriceType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "availableInsuranceAddOns",
        "complexType" : "addOn",
        "getter" : "getAvailableInsuranceAddOns",
        "setter" : "setAvailableInsuranceAddOns",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "availableInsuranceAddOns",
        "defaultValue" : "new ArrayList<addOn>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/addOn\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "selectedInsuranceAddOn",
        "complexType" : "addOn",
        "getter" : "getSelectedInsuranceAddOn",
        "setter" : "setSelectedInsuranceAddOn",
        "datatype" : "addOn",
        "datatypeWithEnum" : "addOn",
        "name" : "selectedInsuranceAddOn",
        "defaultValue" : "null",
        "baseType" : "addOn",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/addOn\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "mobilePrice", "List", "array", "addOn" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "mobileCoupon",
      "classname" : "MobileCoupon",
      "classVarName" : "mobileCoupon",
      "modelJson" : "{\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Minimum size: 1, Maximum Size: 225, Pattern: \\\"^[.,a-zA-Z0-9'\\\\- #]*$\\\"\"\n    },\n    \"code\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Minimum size: 1, Maximum Size: 100, Pattern: \\\"^[.,a-zA-Z0-9'\\\\- #]*$\\\"\"\n    },\n    \"instanceId\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "description" : "Minimum size: 1, Maximum Size: 225, Pattern: \\\"^[.,a-zA-Z0-9'\\- #]*$\\\"",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Minimum size: 1, Maximum Size: 225, Pattern: \\\"^[.,a-zA-Z0-9'\\\\- #]*$\\\"\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "code",

        "getter" : "getCode",
        "setter" : "setCode",
        "description" : "Minimum size: 1, Maximum Size: 100, Pattern: \\\"^[.,a-zA-Z0-9'\\- #]*$\\\"",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "code",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Minimum size: 1, Maximum Size: 100, Pattern: \\\"^[.,a-zA-Z0-9'\\\\- #]*$\\\"\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "instanceId",

        "getter" : "getInstanceId",
        "setter" : "setInstanceId",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "instanceId",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      } ],
      "imports" : [ "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "textSection",
      "classname" : "TextSection",
      "classVarName" : "textSection",
      "modelJson" : "{\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"content\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "content",

        "getter" : "getContent",
        "setter" : "setContent",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "content",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "region",
      "classname" : "Region",
      "classVarName" : "region",
      "modelJson" : "{\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"type\" : {\n      \"type\" : \"string\"\n    },\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"description\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "id",

        "getter" : "getId",
        "setter" : "setId",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "id",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "type",

        "getter" : "getType",
        "setter" : "setType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "type",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "description",

        "getter" : "getDescription",
        "setter" : "setDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "description",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonPhoto",
      "classname" : "JsonPhoto",
      "classVarName" : "jsonPhoto",
      "modelJson" : "{\n  \"properties\" : {\n    \"url\" : {\n      \"type\" : \"string\"\n    },\n    \"thumbnailUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"featured\" : {\n      \"type\" : \"boolean\"\n    },\n    \"displayText\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "url",

        "getter" : "getUrl",
        "setter" : "setUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "url",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "thumbnailUrl",

        "getter" : "getThumbnailUrl",
        "setter" : "setThumbnailUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "thumbnailUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "featured",

        "getter" : "getFeatured",
        "setter" : "setFeatured",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "featured",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "displayText",

        "getter" : "getDisplayText",
        "setter" : "setDisplayText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "displayText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonBedType",
      "classname" : "JsonBedType",
      "classVarName" : "jsonBedType",
      "modelJson" : "{\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\"\n    },\n    \"description\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "id",

        "getter" : "getId",
        "setter" : "setId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "id",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "description",

        "getter" : "getDescription",
        "setter" : "setDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "description",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonAvailabilityCancelPolicyInfo",
      "classname" : "JsonAvailabilityCancelPolicyInfo",
      "classVarName" : "jsonAvailabilityCancelPolicyInfo",
      "modelJson" : "{\n  \"properties\" : {\n    \"versionID\" : {\n      \"type\" : \"string\"\n    },\n    \"cancelTime\" : {\n      \"type\" : \"string\"\n    },\n    \"startWindowHours\" : {\n      \"type\" : \"string\"\n    },\n    \"nightCount\" : {\n      \"type\" : \"string\"\n    },\n    \"percent\" : {\n      \"type\" : \"string\"\n    },\n    \"amount\" : {\n      \"type\" : \"string\"\n    },\n    \"currencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"timeZoneDescription\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "versionID",

        "getter" : "getVersionID",
        "setter" : "setVersionID",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "versionID",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancelTime",

        "getter" : "getCancelTime",
        "setter" : "setCancelTime",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cancelTime",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "startWindowHours",

        "getter" : "getStartWindowHours",
        "setter" : "setStartWindowHours",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "startWindowHours",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nightCount",

        "getter" : "getNightCount",
        "setter" : "setNightCount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nightCount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "percent",

        "getter" : "getPercent",
        "setter" : "setPercent",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "percent",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amount",

        "getter" : "getAmount",
        "setter" : "setAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "amount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencyCode",

        "getter" : "getCurrencyCode",
        "setter" : "setCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "timeZoneDescription",

        "getter" : "getTimeZoneDescription",
        "setter" : "setTimeZoneDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "timeZoneDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonHotelRateInfo",
      "classname" : "JsonHotelRateInfo",
      "classVarName" : "jsonHotelRateInfo",
      "modelJson" : "{\n  \"properties\" : {\n    \"priceBreakdown\" : {\n      \"type\" : \"boolean\"\n    },\n    \"promo\" : {\n      \"type\" : \"boolean\"\n    },\n    \"rateChange\" : {\n      \"type\" : \"boolean\"\n    },\n    \"chargeableRateInfo\" : {\n      \"$ref\" : \"#/definitions/jsonBaseRateInfo\"\n    },\n    \"convertedRateInfo\" : {\n      \"$ref\" : \"#/definitions/jsonBaseRateInfo\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "priceBreakdown",

        "getter" : "getPriceBreakdown",
        "setter" : "setPriceBreakdown",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "priceBreakdown",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "promo",

        "getter" : "getPromo",
        "setter" : "setPromo",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "promo",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rateChange",

        "getter" : "getRateChange",
        "setter" : "setRateChange",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "rateChange",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "chargeableRateInfo",
        "complexType" : "jsonBaseRateInfo",
        "getter" : "getChargeableRateInfo",
        "setter" : "setChargeableRateInfo",
        "datatype" : "jsonBaseRateInfo",
        "datatypeWithEnum" : "jsonBaseRateInfo",
        "name" : "chargeableRateInfo",
        "defaultValue" : "null",
        "baseType" : "jsonBaseRateInfo",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonBaseRateInfo\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "convertedRateInfo",
        "complexType" : "jsonBaseRateInfo",
        "getter" : "getConvertedRateInfo",
        "setter" : "setConvertedRateInfo",
        "datatype" : "jsonBaseRateInfo",
        "datatypeWithEnum" : "jsonBaseRateInfo",
        "name" : "convertedRateInfo",
        "defaultValue" : "null",
        "baseType" : "jsonBaseRateInfo",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonBaseRateInfo\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonBaseRateInfo" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "mobileHotelSmokingPreference",
      "classname" : "MobileHotelSmokingPreference",
      "classVarName" : "mobileHotelSmokingPreference",
      "modelJson" : "{\n  \"properties\" : {\n    \"description\" : {\n      \"type\" : \"string\",\n      \"description\" : \" S(\\\"Smoking\\\", \\\"label_smoking\\\"), NS(\\\"Non-Smoking\\\", \\\"label_non_smoking\\\"),E(\\\"Smoking or Non-Smoking\\\", \\\"label_smoking_or_non_smoking\\\"), Unknown(\\\"Unknown smoking preference\\\", \\\"label_unknown_smoking_preference\\\");\"\n    },\n    \"locMsgId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "description",

        "getter" : "getDescription",
        "setter" : "setDescription",
        "description" : " S(\\\"Smoking\\\", \\\"label_smoking\\\"), NS(\\\"Non-Smoking\\\", \\\"label_non_smoking\\\"),E(\\\"Smoking or Non-Smoking\\\", \\\"label_smoking_or_non_smoking\\\"), Unknown(\\\"Unknown smoking preference\\\", \\\"label_unknown_smoking_preference\\\");",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "description",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \" S(\\\"Smoking\\\", \\\"label_smoking\\\"), NS(\\\"Non-Smoking\\\", \\\"label_non_smoking\\\"),E(\\\"Smoking or Non-Smoking\\\", \\\"label_smoking_or_non_smoking\\\"), Unknown(\\\"Unknown smoking preference\\\", \\\"label_unknown_smoking_preference\\\");\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "locMsgId",

        "getter" : "getLocMsgId",
        "setter" : "setLocMsgId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locMsgId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonHotelOffer",
      "classname" : "JsonHotelOffer",
      "classVarName" : "jsonHotelOffer",
      "modelJson" : "{\n  \"properties\" : {\n    \"productKey\" : {\n      \"type\" : \"string\"\n    },\n    \"cancellationPolicy\" : {\n      \"type\" : \"string\"\n    },\n    \"policy\" : {\n      \"type\" : \"string\"\n    },\n    \"rateDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"roomTypeDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"roomLongDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"roomThumbnailUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"supplierType\" : {\n      \"type\" : \"string\"\n    },\n    \"otherInformation\" : {\n      \"type\" : \"string\"\n    },\n    \"rateChange\" : {\n      \"type\" : \"boolean\"\n    },\n    \"nonRefundable\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hasFreeCancellation\" : {\n      \"type\" : \"boolean\"\n    },\n    \"freeCancellationWindowDate\" : {\n      \"type\" : \"string\"\n    },\n    \"guaranteeRequired\" : {\n      \"type\" : \"boolean\"\n    },\n    \"depositRequired\" : {\n      \"type\" : \"boolean\"\n    },\n    \"immediateChargeRequired\" : {\n      \"type\" : \"boolean\"\n    },\n    \"currentAllotment\" : {\n      \"type\" : \"string\"\n    },\n    \"promoId\" : {\n      \"type\" : \"string\"\n    },\n    \"promoDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"isDiscountRestrictedToCurrentSourceType\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isSameDayDRR\" : {\n      \"type\" : \"boolean\"\n    },\n    \"smokingPreferences\" : {\n      \"$ref\" : \"#/definitions/MobileHotelSmokingPreference\"\n    },\n    \"rateOccupancyPerRoom\" : {\n      \"type\" : \"string\"\n    },\n    \"bedTypes\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonBedType\"\n      }\n    },\n    \"cancelPolicyInfoList\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonAvailabilityCancelPolicyInfo\"\n      }\n    },\n    \"rateInfo\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonHotelRateInfo\"\n      }\n    },\n    \"valueAdds\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonValueAdd\"\n      }\n    },\n    \"quotedOccupancy\" : {\n      \"type\" : \"string\"\n    },\n    \"minGuestAge\" : {\n      \"type\" : \"string\"\n    },\n    \"taxRate\" : {\n      \"type\" : \"string\"\n    },\n    \"roomTypeCode\" : {\n      \"type\" : \"string\"\n    },\n    \"ratePlanCode\" : {\n      \"type\" : \"string\"\n    },\n    \"isPayLater\" : {\n      \"type\" : \"boolean\"\n    },\n    \"payLaterOffer\" : {\n      \"$ref\" : \"#/definitions/jsonHotelOffer\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "productKey",

        "getter" : "getProductKey",
        "setter" : "setProductKey",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "productKey",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancellationPolicy",

        "getter" : "getCancellationPolicy",
        "setter" : "setCancellationPolicy",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cancellationPolicy",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "policy",

        "getter" : "getPolicy",
        "setter" : "setPolicy",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "policy",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rateDescription",

        "getter" : "getRateDescription",
        "setter" : "setRateDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "rateDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomTypeDescription",

        "getter" : "getRoomTypeDescription",
        "setter" : "setRoomTypeDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomTypeDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomLongDescription",

        "getter" : "getRoomLongDescription",
        "setter" : "setRoomLongDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomLongDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomThumbnailUrl",

        "getter" : "getRoomThumbnailUrl",
        "setter" : "setRoomThumbnailUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomThumbnailUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "supplierType",

        "getter" : "getSupplierType",
        "setter" : "setSupplierType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "supplierType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "otherInformation",

        "getter" : "getOtherInformation",
        "setter" : "setOtherInformation",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "otherInformation",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rateChange",

        "getter" : "getRateChange",
        "setter" : "setRateChange",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "rateChange",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nonRefundable",

        "getter" : "getNonRefundable",
        "setter" : "setNonRefundable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "nonRefundable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasFreeCancellation",

        "getter" : "getHasFreeCancellation",
        "setter" : "setHasFreeCancellation",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasFreeCancellation",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "freeCancellationWindowDate",

        "getter" : "getFreeCancellationWindowDate",
        "setter" : "setFreeCancellationWindowDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "freeCancellationWindowDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "guaranteeRequired",

        "getter" : "getGuaranteeRequired",
        "setter" : "setGuaranteeRequired",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "guaranteeRequired",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "depositRequired",

        "getter" : "getDepositRequired",
        "setter" : "setDepositRequired",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "depositRequired",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "immediateChargeRequired",

        "getter" : "getImmediateChargeRequired",
        "setter" : "setImmediateChargeRequired",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "immediateChargeRequired",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currentAllotment",

        "getter" : "getCurrentAllotment",
        "setter" : "setCurrentAllotment",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currentAllotment",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "promoId",

        "getter" : "getPromoId",
        "setter" : "setPromoId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "promoId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "promoDescription",

        "getter" : "getPromoDescription",
        "setter" : "setPromoDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "promoDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isDiscountRestrictedToCurrentSourceType",

        "getter" : "getIsDiscountRestrictedToCurrentSourceType",
        "setter" : "setIsDiscountRestrictedToCurrentSourceType",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isDiscountRestrictedToCurrentSourceType",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isSameDayDRR",

        "getter" : "getIsSameDayDRR",
        "setter" : "setIsSameDayDRR",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isSameDayDRR",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "smokingPreferences",
        "complexType" : "MobileHotelSmokingPreference",
        "getter" : "getSmokingPreferences",
        "setter" : "setSmokingPreferences",
        "datatype" : "MobileHotelSmokingPreference",
        "datatypeWithEnum" : "MobileHotelSmokingPreference",
        "name" : "smokingPreferences",
        "defaultValue" : "null",
        "baseType" : "MobileHotelSmokingPreference",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/MobileHotelSmokingPreference\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rateOccupancyPerRoom",

        "getter" : "getRateOccupancyPerRoom",
        "setter" : "setRateOccupancyPerRoom",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "rateOccupancyPerRoom",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bedTypes",
        "complexType" : "jsonBedType",
        "getter" : "getBedTypes",
        "setter" : "setBedTypes",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "bedTypes",
        "defaultValue" : "new ArrayList<jsonBedType>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonBedType\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancelPolicyInfoList",
        "complexType" : "jsonAvailabilityCancelPolicyInfo",
        "getter" : "getCancelPolicyInfoList",
        "setter" : "setCancelPolicyInfoList",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "cancelPolicyInfoList",
        "defaultValue" : "new ArrayList<jsonAvailabilityCancelPolicyInfo>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonAvailabilityCancelPolicyInfo\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rateInfo",
        "complexType" : "jsonHotelRateInfo",
        "getter" : "getRateInfo",
        "setter" : "setRateInfo",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "rateInfo",
        "defaultValue" : "new ArrayList<jsonHotelRateInfo>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonHotelRateInfo\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "valueAdds",
        "complexType" : "jsonValueAdd",
        "getter" : "getValueAdds",
        "setter" : "setValueAdds",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "valueAdds",
        "defaultValue" : "new ArrayList<jsonValueAdd>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonValueAdd\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "quotedOccupancy",

        "getter" : "getQuotedOccupancy",
        "setter" : "setQuotedOccupancy",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "quotedOccupancy",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "minGuestAge",

        "getter" : "getMinGuestAge",
        "setter" : "setMinGuestAge",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "minGuestAge",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxRate",

        "getter" : "getTaxRate",
        "setter" : "setTaxRate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "taxRate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomTypeCode",

        "getter" : "getRoomTypeCode",
        "setter" : "setRoomTypeCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomTypeCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "ratePlanCode",

        "getter" : "getRatePlanCode",
        "setter" : "setRatePlanCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "ratePlanCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isPayLater",

        "getter" : "getIsPayLater",
        "setter" : "setIsPayLater",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isPayLater",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "payLaterOffer",
        "complexType" : "jsonHotelOffer",
        "getter" : "getPayLaterOffer",
        "setter" : "setPayLaterOffer",
        "datatype" : "jsonHotelOffer",
        "datatypeWithEnum" : "jsonHotelOffer",
        "name" : "payLaterOffer",
        "defaultValue" : "null",
        "baseType" : "jsonHotelOffer",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonHotelOffer\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonHotelOffer", "jsonValueAdd", "jsonAvailabilityCancelPolicyInfo", "string", "jsonHotelRateInfo", "List", "jsonBedType", "MobileHotelSmokingPreference", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonLoyaltyPointInfo",
      "classname" : "JsonLoyaltyPointInfo",
      "classVarName" : "jsonLoyaltyPointInfo",
      "modelJson" : "{\n  \"properties\" : {\n    \"pointValue\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"pointType\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "pointValue",

        "getter" : "getPointValue",
        "setter" : "setPointValue",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "pointValue",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "pointType",

        "getter" : "getPointType",
        "setter" : "setPointType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "pointType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonLoyaltyPoints",
      "classname" : "JsonLoyaltyPoints",
      "classVarName" : "jsonLoyaltyPoints",
      "modelJson" : "{\n  \"properties\" : {\n    \"totalLoyaltyPoints\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"loyaltyPointInfoList\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonLoyaltyPointInfo\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "totalLoyaltyPoints",

        "getter" : "getTotalLoyaltyPoints",
        "setter" : "setTotalLoyaltyPoints",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "totalLoyaltyPoints",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "loyaltyPointInfoList",
        "complexType" : "jsonLoyaltyPointInfo",
        "getter" : "getLoyaltyPointInfoList",
        "setter" : "setLoyaltyPointInfoList",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "loyaltyPointInfoList",
        "defaultValue" : "new ArrayList<jsonLoyaltyPointInfo>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonLoyaltyPointInfo\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonLoyaltyPointInfo", "integer", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "packageTripPricing",
      "classname" : "PackageTripPricing",
      "classVarName" : "packageTripPricing",
      "modelJson" : "{\n  \"properties\" : {\n    \"packageTotal\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"basePrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"totalTaxesAndFees\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"hotelPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"flightPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"savings\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"couponDiscount\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"packageTotalWithoutCoupon\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"taxesAndFeesIncluded\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "packageTotal",
        "complexType" : "mobilePrice",
        "getter" : "getPackageTotal",
        "setter" : "setPackageTotal",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "packageTotal",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "basePrice",
        "complexType" : "mobilePrice",
        "getter" : "getBasePrice",
        "setter" : "setBasePrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "basePrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalTaxesAndFees",
        "complexType" : "mobilePrice",
        "getter" : "getTotalTaxesAndFees",
        "setter" : "setTotalTaxesAndFees",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalTaxesAndFees",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelPrice",
        "complexType" : "mobilePrice",
        "getter" : "getHotelPrice",
        "setter" : "setHotelPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "hotelPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flightPrice",
        "complexType" : "mobilePrice",
        "getter" : "getFlightPrice",
        "setter" : "setFlightPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "flightPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "savings",
        "complexType" : "mobilePrice",
        "getter" : "getSavings",
        "setter" : "setSavings",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "savings",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "couponDiscount",
        "complexType" : "mobilePrice",
        "getter" : "getCouponDiscount",
        "setter" : "setCouponDiscount",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "couponDiscount",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "packageTotalWithoutCoupon",
        "complexType" : "mobilePrice",
        "getter" : "getPackageTotalWithoutCoupon",
        "setter" : "setPackageTotalWithoutCoupon",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "packageTotalWithoutCoupon",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxesAndFeesIncluded",

        "getter" : "getTaxesAndFeesIncluded",
        "setter" : "setTaxesAndFeesIncluded",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "taxesAndFeesIncluded",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "mobilePrice" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonRoomOptions",
      "classname" : "JsonRoomOptions",
      "classVarName" : "jsonRoomOptions",
      "modelJson" : "{\n  \"properties\" : {\n    \"bedTypeName\" : {\n      \"type\" : \"string\"\n    },\n    \"smokingPreference\" : {\n      \"$ref\" : \"#/definitions/mobileHotelSmokingPreference\"\n    },\n    \"specialRequest\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hasExtraBedAdult\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hasExtraBedChild\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hasExtraBedInfant\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isSmokingPreferenceSelected\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isRoomOptionsAvailable\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "bedTypeName",

        "getter" : "getBedTypeName",
        "setter" : "setBedTypeName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bedTypeName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "smokingPreference",
        "complexType" : "mobileHotelSmokingPreference",
        "getter" : "getSmokingPreference",
        "setter" : "setSmokingPreference",
        "datatype" : "mobileHotelSmokingPreference",
        "datatypeWithEnum" : "mobileHotelSmokingPreference",
        "name" : "smokingPreference",
        "defaultValue" : "null",
        "baseType" : "mobileHotelSmokingPreference",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobileHotelSmokingPreference\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "specialRequest",

        "getter" : "getSpecialRequest",
        "setter" : "setSpecialRequest",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "specialRequest",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasExtraBedAdult",

        "getter" : "getHasExtraBedAdult",
        "setter" : "setHasExtraBedAdult",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasExtraBedAdult",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasExtraBedChild",

        "getter" : "getHasExtraBedChild",
        "setter" : "setHasExtraBedChild",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasExtraBedChild",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasExtraBedInfant",

        "getter" : "getHasExtraBedInfant",
        "setter" : "setHasExtraBedInfant",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasExtraBedInfant",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isSmokingPreferenceSelected",

        "getter" : "getIsSmokingPreferenceSelected",
        "setter" : "setIsSmokingPreferenceSelected",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isSmokingPreferenceSelected",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isRoomOptionsAvailable",

        "getter" : "getIsRoomOptionsAvailable",
        "setter" : "setIsRoomOptionsAvailable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isRoomOptionsAvailable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "mobileHotelSmokingPreference", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonRoomOccupants",
      "classname" : "JsonRoomOccupants",
      "classVarName" : "jsonRoomOccupants",
      "modelJson" : "{\n  \"properties\" : {\n    \"adultCount\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"childAndInfantAges\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"integer\",\n        \"format\" : \"int32\"\n      }\n    },\n    \"bookingItemId\" : {\n      \"type\" : \"string\"\n    },\n    \"orderLineGUID\" : {\n      \"type\" : \"string\"\n    },\n    \"reservationStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"primaryOccupantName\" : {\n      \"type\" : \"string\"\n    },\n    \"occupantSelectedRoomOptions\" : {\n      \"$ref\" : \"#/definitions/jsonRoomOptions\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "adultCount",

        "getter" : "getAdultCount",
        "setter" : "setAdultCount",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "adultCount",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "childAndInfantAges",

        "getter" : "getChildAndInfantAges",
        "setter" : "setChildAndInfantAges",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "childAndInfantAges",
        "defaultValue" : "new ArrayList<integer>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"integer\",\n    \"format\" : \"int32\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingItemId",

        "getter" : "getBookingItemId",
        "setter" : "setBookingItemId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingItemId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderLineGUID",

        "getter" : "getOrderLineGUID",
        "setter" : "setOrderLineGUID",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderLineGUID",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "reservationStatus",

        "getter" : "getReservationStatus",
        "setter" : "setReservationStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "reservationStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "primaryOccupantName",

        "getter" : "getPrimaryOccupantName",
        "setter" : "setPrimaryOccupantName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "primaryOccupantName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "occupantSelectedRoomOptions",
        "complexType" : "jsonRoomOptions",
        "getter" : "getOccupantSelectedRoomOptions",
        "setter" : "setOccupantSelectedRoomOptions",
        "datatype" : "jsonRoomOptions",
        "datatypeWithEnum" : "jsonRoomOptions",
        "name" : "occupantSelectedRoomOptions",
        "defaultValue" : "null",
        "baseType" : "jsonRoomOptions",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonRoomOptions\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "jsonRoomOptions", "string", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonHotelBooking",
      "classname" : "JsonHotelBooking",
      "classVarName" : "jsonHotelBooking",
      "modelJson" : "{\n  \"properties\" : {\n    \"error\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"warnings\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"cancellationPolicy\" : {\n      \"type\" : \"string\"\n    },\n    \"nonLocalizedhotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"localizedHotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelAddress\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelPostalCode\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelStateProvinceCode\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelCountryCode\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelCity\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelPhone\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelLongitude\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelLatitude\" : {\n      \"type\" : \"string\"\n    },\n    \"nightCount\" : {\n      \"type\" : \"string\"\n    },\n    \"maxGuestCount\" : {\n      \"type\" : \"string\"\n    },\n    \"checkInInstructions\" : {\n      \"type\" : \"string\"\n    },\n    \"roomDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"checkInDate\" : {\n      \"type\" : \"string\"\n    },\n    \"checkInDateForTracking\" : {\n      \"type\" : \"string\"\n    },\n    \"checkOutDate\" : {\n      \"type\" : \"string\"\n    },\n    \"pricePerDayBreakdown\" : {\n      \"type\" : \"string\"\n    },\n    \"averageDailyHotelPrice\" : {\n      \"type\" : \"string\"\n    },\n    \"extraGuestCharges\" : {\n      \"type\" : \"string\"\n    },\n    \"taxes\" : {\n      \"type\" : \"string\"\n    },\n    \"fees\" : {\n      \"type\" : \"string\"\n    },\n    \"averageBaseRate\" : {\n      \"type\" : \"string\"\n    },\n    \"totalPrice\" : {\n      \"type\" : \"string\"\n    },\n    \"currencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"nightlyRates\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonNightlyRate\"\n      }\n    },\n    \"supplierType\" : {\n      \"type\" : \"string\"\n    },\n    \"confirmationPending\" : {\n      \"type\" : \"string\"\n    },\n    \"itineraryNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"travelRecordLocator\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelConfirmationNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"numberOfRoomsBooked\" : {\n      \"type\" : \"string\"\n    },\n    \"nonRefundable\" : {\n      \"type\" : \"string\"\n    },\n    \"hasFreeCancellation\" : {\n      \"type\" : \"boolean\"\n    },\n    \"freeCancellationWindowDate\" : {\n      \"type\" : \"string\"\n    },\n    \"email\" : {\n      \"type\" : \"string\"\n    },\n    \"guestFullName\" : {\n      \"type\" : \"string\"\n    },\n    \"guestPhone\" : {\n      \"$ref\" : \"#/definitions/jsonPhone\"\n    },\n    \"guestAddress\" : {\n      \"$ref\" : \"#/definitions/jsonAddress\"\n    },\n    \"tripId\" : {\n      \"type\" : \"string\"\n    },\n    \"isMerchant\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isGDS\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isOpaque\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hotelInventoryTypeName\" : {\n      \"type\" : \"string\"\n    },\n    \"passbookUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"roomOccupants\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonRoomOccupants\"\n      }\n    },\n    \"orderNumber\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"debugTealeafInfo\" : {\n      \"type\" : \"string\"\n    },\n    \"confirmationUrl\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "error",
        "complexType" : "mobileError",
        "getter" : "getError",
        "setter" : "setError",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "error",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "warnings",
        "complexType" : "mobileError",
        "getter" : "getWarnings",
        "setter" : "setWarnings",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "warnings",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancellationPolicy",

        "getter" : "getCancellationPolicy",
        "setter" : "setCancellationPolicy",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cancellationPolicy",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nonLocalizedhotelName",

        "getter" : "getNonLocalizedhotelName",
        "setter" : "setNonLocalizedhotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nonLocalizedhotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelName",

        "getter" : "getHotelName",
        "setter" : "setHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localizedHotelName",

        "getter" : "getLocalizedHotelName",
        "setter" : "setLocalizedHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localizedHotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelAddress",

        "getter" : "getHotelAddress",
        "setter" : "setHotelAddress",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelAddress",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelPostalCode",

        "getter" : "getHotelPostalCode",
        "setter" : "setHotelPostalCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelPostalCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStateProvinceCode",

        "getter" : "getHotelStateProvinceCode",
        "setter" : "setHotelStateProvinceCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStateProvinceCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelCountryCode",

        "getter" : "getHotelCountryCode",
        "setter" : "setHotelCountryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelCountryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelCity",

        "getter" : "getHotelCity",
        "setter" : "setHotelCity",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelCity",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelPhone",

        "getter" : "getHotelPhone",
        "setter" : "setHotelPhone",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelPhone",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelLongitude",

        "getter" : "getHotelLongitude",
        "setter" : "setHotelLongitude",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelLongitude",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelLatitude",

        "getter" : "getHotelLatitude",
        "setter" : "setHotelLatitude",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelLatitude",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nightCount",

        "getter" : "getNightCount",
        "setter" : "setNightCount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nightCount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "maxGuestCount",

        "getter" : "getMaxGuestCount",
        "setter" : "setMaxGuestCount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "maxGuestCount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInInstructions",

        "getter" : "getCheckInInstructions",
        "setter" : "setCheckInInstructions",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkInInstructions",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomDescription",

        "getter" : "getRoomDescription",
        "setter" : "setRoomDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInDate",

        "getter" : "getCheckInDate",
        "setter" : "setCheckInDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkInDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInDateForTracking",

        "getter" : "getCheckInDateForTracking",
        "setter" : "setCheckInDateForTracking",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkInDateForTracking",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkOutDate",

        "getter" : "getCheckOutDate",
        "setter" : "setCheckOutDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkOutDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "pricePerDayBreakdown",

        "getter" : "getPricePerDayBreakdown",
        "setter" : "setPricePerDayBreakdown",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "pricePerDayBreakdown",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "averageDailyHotelPrice",

        "getter" : "getAverageDailyHotelPrice",
        "setter" : "setAverageDailyHotelPrice",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "averageDailyHotelPrice",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "extraGuestCharges",

        "getter" : "getExtraGuestCharges",
        "setter" : "setExtraGuestCharges",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "extraGuestCharges",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxes",

        "getter" : "getTaxes",
        "setter" : "setTaxes",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "taxes",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fees",

        "getter" : "getFees",
        "setter" : "setFees",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fees",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "averageBaseRate",

        "getter" : "getAverageBaseRate",
        "setter" : "setAverageBaseRate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "averageBaseRate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalPrice",

        "getter" : "getTotalPrice",
        "setter" : "setTotalPrice",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalPrice",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencyCode",

        "getter" : "getCurrencyCode",
        "setter" : "setCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nightlyRates",
        "complexType" : "jsonNightlyRate",
        "getter" : "getNightlyRates",
        "setter" : "setNightlyRates",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "nightlyRates",
        "defaultValue" : "new ArrayList<jsonNightlyRate>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonNightlyRate\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "supplierType",

        "getter" : "getSupplierType",
        "setter" : "setSupplierType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "supplierType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "confirmationPending",

        "getter" : "getConfirmationPending",
        "setter" : "setConfirmationPending",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "confirmationPending",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "itineraryNumber",

        "getter" : "getItineraryNumber",
        "setter" : "setItineraryNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "itineraryNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "travelRecordLocator",

        "getter" : "getTravelRecordLocator",
        "setter" : "setTravelRecordLocator",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "travelRecordLocator",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelConfirmationNumber",

        "getter" : "getHotelConfirmationNumber",
        "setter" : "setHotelConfirmationNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelConfirmationNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "numberOfRoomsBooked",

        "getter" : "getNumberOfRoomsBooked",
        "setter" : "setNumberOfRoomsBooked",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "numberOfRoomsBooked",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nonRefundable",

        "getter" : "getNonRefundable",
        "setter" : "setNonRefundable",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nonRefundable",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasFreeCancellation",

        "getter" : "getHasFreeCancellation",
        "setter" : "setHasFreeCancellation",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasFreeCancellation",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "freeCancellationWindowDate",

        "getter" : "getFreeCancellationWindowDate",
        "setter" : "setFreeCancellationWindowDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "freeCancellationWindowDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "email",

        "getter" : "getEmail",
        "setter" : "setEmail",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "email",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "guestFullName",

        "getter" : "getGuestFullName",
        "setter" : "setGuestFullName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "guestFullName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "guestPhone",
        "complexType" : "jsonPhone",
        "getter" : "getGuestPhone",
        "setter" : "setGuestPhone",
        "datatype" : "jsonPhone",
        "datatypeWithEnum" : "jsonPhone",
        "name" : "guestPhone",
        "defaultValue" : "null",
        "baseType" : "jsonPhone",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonPhone\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "guestAddress",
        "complexType" : "jsonAddress",
        "getter" : "getGuestAddress",
        "setter" : "setGuestAddress",
        "datatype" : "jsonAddress",
        "datatypeWithEnum" : "jsonAddress",
        "name" : "guestAddress",
        "defaultValue" : "null",
        "baseType" : "jsonAddress",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonAddress\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tripId",

        "getter" : "getTripId",
        "setter" : "setTripId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tripId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isMerchant",

        "getter" : "getIsMerchant",
        "setter" : "setIsMerchant",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isMerchant",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isGDS",

        "getter" : "getIsGDS",
        "setter" : "setIsGDS",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isGDS",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isOpaque",

        "getter" : "getIsOpaque",
        "setter" : "setIsOpaque",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isOpaque",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelInventoryTypeName",

        "getter" : "getHotelInventoryTypeName",
        "setter" : "setHotelInventoryTypeName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelInventoryTypeName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "passbookUrl",

        "getter" : "getPassbookUrl",
        "setter" : "setPassbookUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "passbookUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomOccupants",
        "complexType" : "jsonRoomOccupants",
        "getter" : "getRoomOccupants",
        "setter" : "setRoomOccupants",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "roomOccupants",
        "defaultValue" : "new ArrayList<jsonRoomOccupants>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonRoomOccupants\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderNumber",

        "getter" : "getOrderNumber",
        "setter" : "setOrderNumber",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "orderNumber",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "debugTealeafInfo",

        "getter" : "getDebugTealeafInfo",
        "setter" : "setDebugTealeafInfo",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "debugTealeafInfo",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "confirmationUrl",

        "getter" : "getConfirmationUrl",
        "setter" : "setConfirmationUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "confirmationUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonRoomOccupants", "integer", "string", "jsonAddress", "jsonPhone", "List", "mobileError", "jsonNightlyRate", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonPriceChange",
      "classname" : "JsonPriceChange",
      "classVarName" : "jsonPriceChange",
      "modelJson" : "{\n  \"properties\" : {\n    \"oldProduct\" : {\n      \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n    },\n    \"newProduct\" : {\n      \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "oldProduct",
        "complexType" : "jsonGetProductResponse",
        "getter" : "getOldProduct",
        "setter" : "setOldProduct",
        "datatype" : "jsonGetProductResponse",
        "datatypeWithEnum" : "jsonGetProductResponse",
        "name" : "oldProduct",
        "defaultValue" : "null",
        "baseType" : "jsonGetProductResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "newProduct",
        "complexType" : "jsonGetProductResponse",
        "getter" : "getNewProduct",
        "setter" : "setNewProduct",
        "datatype" : "jsonGetProductResponse",
        "datatypeWithEnum" : "jsonGetProductResponse",
        "name" : "newProduct",
        "defaultValue" : "null",
        "baseType" : "jsonGetProductResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonGetProductResponse" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "checkout",
      "classname" : "Checkout",
      "classVarName" : "checkout",
      "modelJson" : "{\n  \"properties\" : {\n    \"bookingResponse\" : {\n      \"$ref\" : \"#/definitions/jsonHotelBooking\"\n    },\n    \"productResponse\" : {\n      \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n    },\n    \"jsonPriceChangeResponse\" : {\n      \"$ref\" : \"#/definitions/jsonPriceChange\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "bookingResponse",
        "complexType" : "jsonHotelBooking",
        "getter" : "getBookingResponse",
        "setter" : "setBookingResponse",
        "datatype" : "jsonHotelBooking",
        "datatypeWithEnum" : "jsonHotelBooking",
        "name" : "bookingResponse",
        "defaultValue" : "null",
        "baseType" : "jsonHotelBooking",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonHotelBooking\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "productResponse",
        "complexType" : "jsonGetProductResponse",
        "getter" : "getProductResponse",
        "setter" : "setProductResponse",
        "datatype" : "jsonGetProductResponse",
        "datatypeWithEnum" : "jsonGetProductResponse",
        "name" : "productResponse",
        "defaultValue" : "null",
        "baseType" : "jsonGetProductResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "jsonPriceChangeResponse",
        "complexType" : "jsonPriceChange",
        "getter" : "getJsonPriceChangeResponse",
        "setter" : "setJsonPriceChangeResponse",
        "datatype" : "jsonPriceChange",
        "datatypeWithEnum" : "jsonPriceChange",
        "name" : "jsonPriceChangeResponse",
        "defaultValue" : "null",
        "baseType" : "jsonPriceChange",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonPriceChange\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonPriceChange", "jsonHotelBooking", "jsonGetProductResponse" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "mobileAirAttachQualifier",
      "classname" : "MobileAirAttachQualifier",
      "classVarName" : "mobileAirAttachQualifier",
      "modelJson" : "{\n  \"properties\" : {\n    \"airAttachQualified\" : {\n      \"type\" : \"boolean\"\n    },\n    \"offerExpires\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "airAttachQualified",

        "getter" : "getAirAttachQualified",
        "setter" : "setAirAttachQualified",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "airAttachQualified",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "offerExpires",

        "getter" : "getOfferExpires",
        "setter" : "setOfferExpires",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "offerExpires",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "hotelCancelRules",
      "classname" : "HotelCancelRules",
      "classVarName" : "hotelCancelRules",
      "modelJson" : "{\n  \"properties\" : {\n    \"isRefundable\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isVenere\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isOpaque\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hasFixedPenaltyPrice\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isExpediaRate\" : {\n      \"type\" : \"boolean\"\n    },\n    \"cancellationWindowHours\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"cancellationWindowDays\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"cancellationTimeZoneName\" : {\n      \"type\" : \"string\"\n    },\n    \"outsideWindowPenaltyNightCount\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"outsideWindowPenaltyPercentage\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"nonRefundableOutsideWindow\" : {\n      \"type\" : \"boolean\"\n    },\n    \"insideWindowPenaltyNightCount\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"insideWindowPenaltyPercentage\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"nonRefundableInsideWindow\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"policyText\" : {\n      \"type\" : \"string\"\n    },\n    \"cancellationText1\" : {\n      \"type\" : \"string\"\n    },\n    \"cancellationText2\" : {\n      \"type\" : \"string\"\n    },\n    \"nonRefundableDates\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"integer\",\n        \"format\" : \"int32\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "isRefundable",

        "getter" : "getIsRefundable",
        "setter" : "setIsRefundable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isRefundable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isVenere",

        "getter" : "getIsVenere",
        "setter" : "setIsVenere",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isVenere",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isOpaque",

        "getter" : "getIsOpaque",
        "setter" : "setIsOpaque",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isOpaque",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasFixedPenaltyPrice",

        "getter" : "getHasFixedPenaltyPrice",
        "setter" : "setHasFixedPenaltyPrice",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasFixedPenaltyPrice",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isExpediaRate",

        "getter" : "getIsExpediaRate",
        "setter" : "setIsExpediaRate",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isExpediaRate",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancellationWindowHours",

        "getter" : "getCancellationWindowHours",
        "setter" : "setCancellationWindowHours",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "cancellationWindowHours",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "cancellationWindowDays",

        "getter" : "getCancellationWindowDays",
        "setter" : "setCancellationWindowDays",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "cancellationWindowDays",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "cancellationTimeZoneName",

        "getter" : "getCancellationTimeZoneName",
        "setter" : "setCancellationTimeZoneName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cancellationTimeZoneName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "outsideWindowPenaltyNightCount",

        "getter" : "getOutsideWindowPenaltyNightCount",
        "setter" : "setOutsideWindowPenaltyNightCount",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "outsideWindowPenaltyNightCount",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "outsideWindowPenaltyPercentage",

        "getter" : "getOutsideWindowPenaltyPercentage",
        "setter" : "setOutsideWindowPenaltyPercentage",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "outsideWindowPenaltyPercentage",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "nonRefundableOutsideWindow",

        "getter" : "getNonRefundableOutsideWindow",
        "setter" : "setNonRefundableOutsideWindow",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "nonRefundableOutsideWindow",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "insideWindowPenaltyNightCount",

        "getter" : "getInsideWindowPenaltyNightCount",
        "setter" : "setInsideWindowPenaltyNightCount",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "insideWindowPenaltyNightCount",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "insideWindowPenaltyPercentage",

        "getter" : "getInsideWindowPenaltyPercentage",
        "setter" : "setInsideWindowPenaltyPercentage",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "insideWindowPenaltyPercentage",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "nonRefundableInsideWindow",

        "getter" : "getNonRefundableInsideWindow",
        "setter" : "setNonRefundableInsideWindow",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "nonRefundableInsideWindow",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelName",

        "getter" : "getHotelName",
        "setter" : "setHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "policyText",

        "getter" : "getPolicyText",
        "setter" : "setPolicyText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "policyText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancellationText1",

        "getter" : "getCancellationText1",
        "setter" : "setCancellationText1",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cancellationText1",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancellationText2",

        "getter" : "getCancellationText2",
        "setter" : "setCancellationText2",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cancellationText2",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nonRefundableDates",

        "getter" : "getNonRefundableDates",
        "setter" : "setNonRefundableDates",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "nonRefundableDates",
        "defaultValue" : "new ArrayList<integer>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"integer\",\n    \"format\" : \"int32\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "hotelCancelEnquiryRoomInfo",
      "classname" : "HotelCancelEnquiryRoomInfo",
      "classVarName" : "hotelCancelEnquiryRoomInfo",
      "modelJson" : "{\n  \"properties\" : {\n    \"ratePlanDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"adultCount\" : {\n      \"type\" : \"string\"\n    },\n    \"numberOfNights\" : {\n      \"type\" : \"string\"\n    },\n    \"amountPaid\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"amountRefund\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"orderLineGUID\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "ratePlanDescription",

        "getter" : "getRatePlanDescription",
        "setter" : "setRatePlanDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "ratePlanDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adultCount",

        "getter" : "getAdultCount",
        "setter" : "setAdultCount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adultCount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "numberOfNights",

        "getter" : "getNumberOfNights",
        "setter" : "setNumberOfNights",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "numberOfNights",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amountPaid",
        "complexType" : "mobilePrice",
        "getter" : "getAmountPaid",
        "setter" : "setAmountPaid",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "amountPaid",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amountRefund",
        "complexType" : "mobilePrice",
        "getter" : "getAmountRefund",
        "setter" : "setAmountRefund",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "amountRefund",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderLineGUID",

        "getter" : "getOrderLineGUID",
        "setter" : "setOrderLineGUID",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderLineGUID",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "mobilePrice" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "hotelCancelEnquiryInfo",
      "classname" : "HotelCancelEnquiryInfo",
      "classVarName" : "hotelCancelEnquiryInfo",
      "modelJson" : "{\n  \"properties\" : {\n    \"roomInfoList\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/hotelCancelEnquiryRoomInfo\"\n      }\n    },\n    \"hotelRules\" : {\n      \"$ref\" : \"#/definitions/hotelCancelRules\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "roomInfoList",
        "complexType" : "hotelCancelEnquiryRoomInfo",
        "getter" : "getRoomInfoList",
        "setter" : "setRoomInfoList",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "roomInfoList",
        "defaultValue" : "new ArrayList<hotelCancelEnquiryRoomInfo>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/hotelCancelEnquiryRoomInfo\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelRules",
        "complexType" : "hotelCancelRules",
        "getter" : "getHotelRules",
        "setter" : "setHotelRules",
        "datatype" : "hotelCancelRules",
        "datatypeWithEnum" : "hotelCancelRules",
        "name" : "hotelRules",
        "defaultValue" : "null",
        "baseType" : "hotelCancelRules",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/hotelCancelRules\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "hotelCancelRules", "List", "hotelCancelEnquiryRoomInfo", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "packageHotelOffer",
      "classname" : "PackageHotelOffer",
      "classVarName" : "packageHotelOffer",
      "modelJson" : "{\n  \"properties\" : {\n    \"pricePerPerson\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"packagePricing\" : {\n      \"$ref\" : \"#/definitions/packageTripPricing\"\n    },\n    \"packageProductId\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelOffer\" : {\n      \"$ref\" : \"#/definitions/jsonHotelOffer\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "pricePerPerson",
        "complexType" : "mobilePrice",
        "getter" : "getPricePerPerson",
        "setter" : "setPricePerPerson",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "pricePerPerson",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "packagePricing",
        "complexType" : "packageTripPricing",
        "getter" : "getPackagePricing",
        "setter" : "setPackagePricing",
        "datatype" : "packageTripPricing",
        "datatypeWithEnum" : "packageTripPricing",
        "name" : "packagePricing",
        "defaultValue" : "null",
        "baseType" : "packageTripPricing",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/packageTripPricing\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "packageProductId",

        "getter" : "getPackageProductId",
        "setter" : "setPackageProductId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "packageProductId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelOffer",
        "complexType" : "jsonHotelOffer",
        "getter" : "getHotelOffer",
        "setter" : "setHotelOffer",
        "datatype" : "jsonHotelOffer",
        "datatypeWithEnum" : "jsonHotelOffer",
        "name" : "hotelOffer",
        "defaultValue" : "null",
        "baseType" : "jsonHotelOffer",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonHotelOffer\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "packageTripPricing", "jsonHotelOffer", "string", "mobilePrice" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "packageTrip",
      "classname" : "PackageTrip",
      "classVarName" : "packageTrip",
      "modelJson" : "{\n  \"properties\" : {\n    \"tripId\" : {\n      \"type\" : \"string\"\n    },\n    \"itineraryNumber\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"flight\" : {\n      \"$ref\" : \"#/definitions/packageFlightJsonResponse\"\n    },\n    \"hotel\" : {\n      \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n    },\n    \"pricing\" : {\n      \"$ref\" : \"#/definitions/packageTripPricing\"\n    },\n    \"tealeafTransactionId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "tripId",

        "getter" : "getTripId",
        "setter" : "setTripId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tripId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "itineraryNumber",

        "getter" : "getItineraryNumber",
        "setter" : "setItineraryNumber",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "itineraryNumber",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "flight",
        "complexType" : "packageFlightJsonResponse",
        "getter" : "getFlight",
        "setter" : "setFlight",
        "datatype" : "packageFlightJsonResponse",
        "datatypeWithEnum" : "packageFlightJsonResponse",
        "name" : "flight",
        "defaultValue" : "null",
        "baseType" : "packageFlightJsonResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/packageFlightJsonResponse\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotel",
        "complexType" : "jsonGetProductResponse",
        "getter" : "getHotel",
        "setter" : "setHotel",
        "datatype" : "jsonGetProductResponse",
        "datatypeWithEnum" : "jsonGetProductResponse",
        "name" : "hotel",
        "defaultValue" : "null",
        "baseType" : "jsonGetProductResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "pricing",
        "complexType" : "packageTripPricing",
        "getter" : "getPricing",
        "setter" : "setPricing",
        "datatype" : "packageTripPricing",
        "datatypeWithEnum" : "packageTripPricing",
        "name" : "pricing",
        "defaultValue" : "null",
        "baseType" : "packageTripPricing",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/packageTripPricing\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tealeafTransactionId",

        "getter" : "getTealeafTransactionId",
        "setter" : "setTealeafTransactionId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tealeafTransactionId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "packageFlightJsonResponse", "packageTripPricing", "integer", "string", "jsonGetProductResponse" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "vendor",
      "classname" : "Vendor",
      "classVarName" : "vendor",
      "modelJson" : "{\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"code\" : {\n      \"type\" : \"string\"\n    },\n    \"localPhoneNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"phoneNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"loyaltyProgram\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "id",

        "getter" : "getId",
        "setter" : "setId",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "id",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "code",

        "getter" : "getCode",
        "setter" : "setCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "code",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localPhoneNumber",

        "getter" : "getLocalPhoneNumber",
        "setter" : "setLocalPhoneNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localPhoneNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "phoneNumber",

        "getter" : "getPhoneNumber",
        "setter" : "setPhoneNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "phoneNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "loyaltyProgram",

        "getter" : "getLoyaltyProgram",
        "setter" : "setLoyaltyProgram",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "loyaltyProgram",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carLocation",
      "classname" : "CarLocation",
      "classVarName" : "carLocation",
      "modelJson" : "{\n  \"properties\" : {\n    \"locationType\" : {\n      \"type\" : \"string\"\n    },\n    \"locationDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"airportInstructions\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine1\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine2\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine3\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine4\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine5\" : {\n      \"type\" : \"string\"\n    },\n    \"cityName\" : {\n      \"type\" : \"string\"\n    },\n    \"provinceStateName\" : {\n      \"type\" : \"string\"\n    },\n    \"postalCode\" : {\n      \"type\" : \"string\"\n    },\n    \"countryCode\" : {\n      \"type\" : \"string\"\n    },\n    \"locationCode\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "locationType",

        "getter" : "getLocationType",
        "setter" : "setLocationType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locationType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "locationDescription",

        "getter" : "getLocationDescription",
        "setter" : "setLocationDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locationDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airportInstructions",

        "getter" : "getAirportInstructions",
        "setter" : "setAirportInstructions",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airportInstructions",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine1",

        "getter" : "getAddressLine1",
        "setter" : "setAddressLine1",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine1",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine2",

        "getter" : "getAddressLine2",
        "setter" : "setAddressLine2",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine2",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine3",

        "getter" : "getAddressLine3",
        "setter" : "setAddressLine3",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine3",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine4",

        "getter" : "getAddressLine4",
        "setter" : "setAddressLine4",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine4",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine5",

        "getter" : "getAddressLine5",
        "setter" : "setAddressLine5",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine5",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cityName",

        "getter" : "getCityName",
        "setter" : "setCityName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cityName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "provinceStateName",

        "getter" : "getProvinceStateName",
        "setter" : "setProvinceStateName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "provinceStateName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "postalCode",

        "getter" : "getPostalCode",
        "setter" : "setPostalCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "postalCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "countryCode",

        "getter" : "getCountryCode",
        "setter" : "setCountryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "locationCode",

        "getter" : "getLocationCode",
        "setter" : "setLocationCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locationCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "rentalFare",
      "classname" : "RentalFare",
      "classVarName" : "rentalFare",
      "modelJson" : "{\n  \"properties\" : {\n    \"rateTerm\" : {\n      \"type\" : \"string\"\n    },\n    \"rate\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"dailyRate\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"total\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "rateTerm",

        "getter" : "getRateTerm",
        "setter" : "setRateTerm",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "rateTerm",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rate",
        "complexType" : "mobilePrice",
        "getter" : "getRate",
        "setter" : "setRate",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "rate",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dailyRate",
        "complexType" : "mobilePrice",
        "getter" : "getDailyRate",
        "setter" : "setDailyRate",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "dailyRate",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "total",
        "complexType" : "mobilePrice",
        "getter" : "getTotal",
        "setter" : "setTotal",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "total",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "mobilePrice" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carRentalMileageLimits",
      "classname" : "CarRentalMileageLimits",
      "classVarName" : "carRentalMileageLimits",
      "modelJson" : "{\n  \"properties\" : {\n    \"freeMileage\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"mileageUnit\" : {\n      \"type\" : \"string\"\n    },\n    \"extraCostPerDistance\" : {\n      \"$ref\" : \"#/definitions/priceDomain\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "freeMileage",

        "getter" : "getFreeMileage",
        "setter" : "setFreeMileage",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "freeMileage",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "mileageUnit",

        "getter" : "getMileageUnit",
        "setter" : "setMileageUnit",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "mileageUnit",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "extraCostPerDistance",
        "complexType" : "priceDomain",
        "getter" : "getExtraCostPerDistance",
        "setter" : "setExtraCostPerDistance",
        "datatype" : "priceDomain",
        "datatypeWithEnum" : "priceDomain",
        "name" : "extraCostPerDistance",
        "defaultValue" : "null",
        "baseType" : "priceDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/priceDomain\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "priceDomain", "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carRentalLimits",
      "classname" : "CarRentalLimits",
      "classVarName" : "carRentalLimits",
      "modelJson" : "{\n  \"properties\" : {\n    \"minDuration\" : {\n      \"type\" : \"string\"\n    },\n    \"maxDuration\" : {\n      \"type\" : \"string\"\n    },\n    \"lastestReturnTime\" : {\n      \"type\" : \"string\"\n    },\n    \"mileageLimits\" : {\n      \"$ref\" : \"#/definitions/carRentalMileageLimits\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "minDuration",

        "getter" : "getMinDuration",
        "setter" : "setMinDuration",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "minDuration",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "maxDuration",

        "getter" : "getMaxDuration",
        "setter" : "setMaxDuration",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "maxDuration",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lastestReturnTime",

        "getter" : "getLastestReturnTime",
        "setter" : "setLastestReturnTime",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "lastestReturnTime",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "mileageLimits",
        "complexType" : "carRentalMileageLimits",
        "getter" : "getMileageLimits",
        "setter" : "setMileageLimits",
        "datatype" : "carRentalMileageLimits",
        "datatypeWithEnum" : "carRentalMileageLimits",
        "name" : "mileageLimits",
        "defaultValue" : "null",
        "baseType" : "carRentalMileageLimits",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carRentalMileageLimits\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "carRentalMileageLimits", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "vehicleInfo",
      "classname" : "VehicleInfo",
      "classVarName" : "vehicleInfo",
      "modelJson" : "{\n  \"properties\" : {\n    \"category\" : {\n      \"type\" : \"string\",\n      \"description\" : \"It can have following values: \\\"* MINI\\\", \\\"* ECONOMY\\\", \\\"* COMPACT\\\", \\\"* MIDSIZE\\\", \\\"* STANDARD\\\", \\\"* FULLSIZE\\\", \\\"* PREMIUM\\\", \\\"* LUXURY\\\", \\\"* SPECIAL\\\", \\\"* MINI_ELITE\\\", \\\"* ECONOMY_ELITE\\\", \\\"* COMPACT_ELITE\\\", \\\"* MIDSIZE_ELITE\\\", \\\"* STANDARD_ELITE\\\", \\\"* FULLSIZE_ELITE\\\", \\\"* PREMIUM_ELITE\\\", \\\"* LUXURY_ELITE\\\", \\\"* OVERSIZE\\\"\"\n    },\n    \"type\" : {\n      \"type\" : \"string\",\n      \"description\" : \"It can have following values: \\\"* TWO_DOOR_CAR\\\", \\\"* THREE_DOOR_CAR\\\", \\\"* FOUR_DOOR_CAR\\\", \\\"* VAN\\\", \\\"* WAGON\\\", \\\"* LIMOUSINE\\\", \\\"* RECREATIONAL_VEHICLE\\\", \\\"* CONVERTIBLE\\\", \\\"* SPORTS_CAR\\\", \\\"* SUV\\\", \\\"* PICKUP_REGULAR_CAB\\\", \\\"* PICKUP_EXTENDED_CAB\\\", \\\"* OPEN_AIR_ALL_TERRAIN\\\", \\\"* SPECIAL\\\", \\\"* COMMERCIAL_VAN_TRUCK\\\", \\\"* SPECIAL_OFFER_CAR\\\", \\\"* COUPE\\\", \\\"* MONOSPACE\\\", \\\"* MOTORHOME\\\", \\\"* TWO_WHEEL_VEHICLE\\\", \\\"* ROADSTER\\\", \\\"* CROSSOVER\\\"\"\n    },\n    \"fuel\" : {\n      \"type\" : \"string\",\n      \"description\" : \"It can have following values: \\\"* `UNKNOWN`\\\", \\\"* `GASOLINE`\\\", \\\"* `DIESEL`\\\", \\\"* `HYBRID`\\\", \\\"* `ELECTRIC`\\\", \\\"* `LIQUID_COMPRESSED_NATURAL_GAS`\\\", \\\"* `HYDROGEN`\\\", \\\"* `MULTI_FUEL`\\\", \\\"* `ETHANOL`\\\"\"\n    },\n    \"transmission\" : {\n      \"type\" : \"string\",\n      \"description\" : \"It can have following values: \\\"* `UNKNOWN`\\\", \\\"* `AUTOMATIC_TRANSMISSION`\\\", \\\"* `MANUAL_TRANSMISSION`\\\"\"\n    },\n    \"drive\" : {\n      \"type\" : \"string\",\n      \"description\" : \"It can have following values: \\\"* `UNKNOWN`\\\", \\\"* `TWO_WHEEL_DRIVE`\\\", \\\"* `FOUR_WHEEL_DRIVE`\\\", \\\"* `ALL_WHEEL_DRIVE`\\\"\"\n    },\n    \"hasAirConditioning\" : {\n      \"type\" : \"boolean\"\n    },\n    \"makes\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"minDoors\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"maxDoors\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"adultCapacity\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"childCapacity\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"largeLuggageCapacity\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"smallLuggageCapacity\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "category",

        "getter" : "getCategory",
        "setter" : "setCategory",
        "description" : "It can have following values: \\\"* MINI\\\", \\\"* ECONOMY\\\", \\\"* COMPACT\\\", \\\"* MIDSIZE\\\", \\\"* STANDARD\\\", \\\"* FULLSIZE\\\", \\\"* PREMIUM\\\", \\\"* LUXURY\\\", \\\"* SPECIAL\\\", \\\"* MINI_ELITE\\\", \\\"* ECONOMY_ELITE\\\", \\\"* COMPACT_ELITE\\\", \\\"* MIDSIZE_ELITE\\\", \\\"* STANDARD_ELITE\\\", \\\"* FULLSIZE_ELITE\\\", \\\"* PREMIUM_ELITE\\\", \\\"* LUXURY_ELITE\\\", \\\"* OVERSIZE\\\"",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "category",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"It can have following values: \\\"* MINI\\\", \\\"* ECONOMY\\\", \\\"* COMPACT\\\", \\\"* MIDSIZE\\\", \\\"* STANDARD\\\", \\\"* FULLSIZE\\\", \\\"* PREMIUM\\\", \\\"* LUXURY\\\", \\\"* SPECIAL\\\", \\\"* MINI_ELITE\\\", \\\"* ECONOMY_ELITE\\\", \\\"* COMPACT_ELITE\\\", \\\"* MIDSIZE_ELITE\\\", \\\"* STANDARD_ELITE\\\", \\\"* FULLSIZE_ELITE\\\", \\\"* PREMIUM_ELITE\\\", \\\"* LUXURY_ELITE\\\", \\\"* OVERSIZE\\\"\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "type",

        "getter" : "getType",
        "setter" : "setType",
        "description" : "It can have following values: \\\"* TWO_DOOR_CAR\\\", \\\"* THREE_DOOR_CAR\\\", \\\"* FOUR_DOOR_CAR\\\", \\\"* VAN\\\", \\\"* WAGON\\\", \\\"* LIMOUSINE\\\", \\\"* RECREATIONAL_VEHICLE\\\", \\\"* CONVERTIBLE\\\", \\\"* SPORTS_CAR\\\", \\\"* SUV\\\", \\\"* PICKUP_REGULAR_CAB\\\", \\\"* PICKUP_EXTENDED_CAB\\\", \\\"* OPEN_AIR_ALL_TERRAIN\\\", \\\"* SPECIAL\\\", \\\"* COMMERCIAL_VAN_TRUCK\\\", \\\"* SPECIAL_OFFER_CAR\\\", \\\"* COUPE\\\", \\\"* MONOSPACE\\\", \\\"* MOTORHOME\\\", \\\"* TWO_WHEEL_VEHICLE\\\", \\\"* ROADSTER\\\", \\\"* CROSSOVER\\\"",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "type",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"It can have following values: \\\"* TWO_DOOR_CAR\\\", \\\"* THREE_DOOR_CAR\\\", \\\"* FOUR_DOOR_CAR\\\", \\\"* VAN\\\", \\\"* WAGON\\\", \\\"* LIMOUSINE\\\", \\\"* RECREATIONAL_VEHICLE\\\", \\\"* CONVERTIBLE\\\", \\\"* SPORTS_CAR\\\", \\\"* SUV\\\", \\\"* PICKUP_REGULAR_CAB\\\", \\\"* PICKUP_EXTENDED_CAB\\\", \\\"* OPEN_AIR_ALL_TERRAIN\\\", \\\"* SPECIAL\\\", \\\"* COMMERCIAL_VAN_TRUCK\\\", \\\"* SPECIAL_OFFER_CAR\\\", \\\"* COUPE\\\", \\\"* MONOSPACE\\\", \\\"* MOTORHOME\\\", \\\"* TWO_WHEEL_VEHICLE\\\", \\\"* ROADSTER\\\", \\\"* CROSSOVER\\\"\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fuel",

        "getter" : "getFuel",
        "setter" : "setFuel",
        "description" : "It can have following values: \\\"* `UNKNOWN`\\\", \\\"* `GASOLINE`\\\", \\\"* `DIESEL`\\\", \\\"* `HYBRID`\\\", \\\"* `ELECTRIC`\\\", \\\"* `LIQUID_COMPRESSED_NATURAL_GAS`\\\", \\\"* `HYDROGEN`\\\", \\\"* `MULTI_FUEL`\\\", \\\"* `ETHANOL`\\\"",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fuel",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"It can have following values: \\\"* `UNKNOWN`\\\", \\\"* `GASOLINE`\\\", \\\"* `DIESEL`\\\", \\\"* `HYBRID`\\\", \\\"* `ELECTRIC`\\\", \\\"* `LIQUID_COMPRESSED_NATURAL_GAS`\\\", \\\"* `HYDROGEN`\\\", \\\"* `MULTI_FUEL`\\\", \\\"* `ETHANOL`\\\"\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "transmission",

        "getter" : "getTransmission",
        "setter" : "setTransmission",
        "description" : "It can have following values: \\\"* `UNKNOWN`\\\", \\\"* `AUTOMATIC_TRANSMISSION`\\\", \\\"* `MANUAL_TRANSMISSION`\\\"",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "transmission",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"It can have following values: \\\"* `UNKNOWN`\\\", \\\"* `AUTOMATIC_TRANSMISSION`\\\", \\\"* `MANUAL_TRANSMISSION`\\\"\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "drive",

        "getter" : "getDrive",
        "setter" : "setDrive",
        "description" : "It can have following values: \\\"* `UNKNOWN`\\\", \\\"* `TWO_WHEEL_DRIVE`\\\", \\\"* `FOUR_WHEEL_DRIVE`\\\", \\\"* `ALL_WHEEL_DRIVE`\\\"",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "drive",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"It can have following values: \\\"* `UNKNOWN`\\\", \\\"* `TWO_WHEEL_DRIVE`\\\", \\\"* `FOUR_WHEEL_DRIVE`\\\", \\\"* `ALL_WHEEL_DRIVE`\\\"\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasAirConditioning",

        "getter" : "getHasAirConditioning",
        "setter" : "setHasAirConditioning",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasAirConditioning",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "makes",

        "getter" : "getMakes",
        "setter" : "setMakes",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "makes",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "minDoors",

        "getter" : "getMinDoors",
        "setter" : "setMinDoors",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "minDoors",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "maxDoors",

        "getter" : "getMaxDoors",
        "setter" : "setMaxDoors",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "maxDoors",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "adultCapacity",

        "getter" : "getAdultCapacity",
        "setter" : "setAdultCapacity",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "adultCapacity",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "childCapacity",

        "getter" : "getChildCapacity",
        "setter" : "setChildCapacity",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "childCapacity",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "largeLuggageCapacity",

        "getter" : "getLargeLuggageCapacity",
        "setter" : "setLargeLuggageCapacity",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "largeLuggageCapacity",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "smallLuggageCapacity",

        "getter" : "getSmallLuggageCapacity",
        "setter" : "setSmallLuggageCapacity",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "smallLuggageCapacity",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      } ],
      "imports" : [ "integer", "string", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "rentalOffer",
      "classname" : "RentalOffer",
      "classVarName" : "rentalOffer",
      "modelJson" : "{\n  \"properties\" : {\n    \"productKey\" : {\n      \"type\" : \"string\"\n    },\n    \"vendor\" : {\n      \"$ref\" : \"#/definitions/vendor\"\n    },\n    \"creditCardRequiredToGuaranteeReservation\" : {\n      \"type\" : \"boolean\"\n    },\n    \"pickUpLocation\" : {\n      \"$ref\" : \"#/definitions/carLocation\"\n    },\n    \"dropOffLocation\" : {\n      \"$ref\" : \"#/definitions/carLocation\"\n    },\n    \"fare\" : {\n      \"$ref\" : \"#/definitions/rentalFare\"\n    },\n    \"isMerchant\" : {\n      \"type\" : \"boolean\"\n    },\n    \"carRentalLimits\" : {\n      \"$ref\" : \"#/definitions/carRentalLimits\"\n    },\n    \"vehicleInfo\" : {\n      \"$ref\" : \"#/definitions/vehicleInfo\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "productKey",

        "getter" : "getProductKey",
        "setter" : "setProductKey",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "productKey",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "vendor",
        "complexType" : "vendor",
        "getter" : "getVendor",
        "setter" : "setVendor",
        "datatype" : "vendor",
        "datatypeWithEnum" : "vendor",
        "name" : "vendor",
        "defaultValue" : "null",
        "baseType" : "vendor",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/vendor\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "creditCardRequiredToGuaranteeReservation",

        "getter" : "getCreditCardRequiredToGuaranteeReservation",
        "setter" : "setCreditCardRequiredToGuaranteeReservation",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "creditCardRequiredToGuaranteeReservation",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "pickUpLocation",
        "complexType" : "carLocation",
        "getter" : "getPickUpLocation",
        "setter" : "setPickUpLocation",
        "datatype" : "carLocation",
        "datatypeWithEnum" : "carLocation",
        "name" : "pickUpLocation",
        "defaultValue" : "null",
        "baseType" : "carLocation",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carLocation\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dropOffLocation",
        "complexType" : "carLocation",
        "getter" : "getDropOffLocation",
        "setter" : "setDropOffLocation",
        "datatype" : "carLocation",
        "datatypeWithEnum" : "carLocation",
        "name" : "dropOffLocation",
        "defaultValue" : "null",
        "baseType" : "carLocation",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carLocation\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fare",
        "complexType" : "rentalFare",
        "getter" : "getFare",
        "setter" : "setFare",
        "datatype" : "rentalFare",
        "datatypeWithEnum" : "rentalFare",
        "name" : "fare",
        "defaultValue" : "null",
        "baseType" : "rentalFare",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/rentalFare\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isMerchant",

        "getter" : "getIsMerchant",
        "setter" : "setIsMerchant",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isMerchant",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "carRentalLimits",
        "complexType" : "carRentalLimits",
        "getter" : "getCarRentalLimits",
        "setter" : "setCarRentalLimits",
        "datatype" : "carRentalLimits",
        "datatypeWithEnum" : "carRentalLimits",
        "name" : "carRentalLimits",
        "defaultValue" : "null",
        "baseType" : "carRentalLimits",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carRentalLimits\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "vehicleInfo",
        "complexType" : "vehicleInfo",
        "getter" : "getVehicleInfo",
        "setter" : "setVehicleInfo",
        "datatype" : "vehicleInfo",
        "datatypeWithEnum" : "vehicleInfo",
        "name" : "vehicleInfo",
        "defaultValue" : "null",
        "baseType" : "vehicleInfo",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/vehicleInfo\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "rentalFare", "vendor", "string", "carRentalLimits", "vehicleInfo", "carLocation" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "rentalFareBreakdownItem",
      "classname" : "RentalFareBreakdownItem",
      "classVarName" : "rentalFareBreakdownItem",
      "modelJson" : "{\n  \"properties\" : {\n    \"type\" : {\n      \"type\" : \"string\",\n      \"description\" : \"It can have the following values: \\\"* `INSURANCE`\\\",\\\"* `DROP_OFF_CHARGE`\\\",\\\"* `TAXES_AND_FEES`\\\",\\\"* `BASE`\\\"\"\n    },\n    \"includedInTotal\" : {\n      \"type\" : \"boolean\"\n    },\n    \"price\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "type",

        "getter" : "getType",
        "setter" : "setType",
        "description" : "It can have the following values: \\\"* `INSURANCE`\\\",\\\"* `DROP_OFF_CHARGE`\\\",\\\"* `TAXES_AND_FEES`\\\",\\\"* `BASE`\\\"",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "type",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"It can have the following values: \\\"* `INSURANCE`\\\",\\\"* `DROP_OFF_CHARGE`\\\",\\\"* `TAXES_AND_FEES`\\\",\\\"* `BASE`\\\"\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "includedInTotal",

        "getter" : "getIncludedInTotal",
        "setter" : "setIncludedInTotal",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "includedInTotal",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "price",
        "complexType" : "mobilePrice",
        "getter" : "getPrice",
        "setter" : "setPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "price",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "mobilePrice" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "detailedRentalFare",
      "classname" : "DetailedRentalFare",
      "classVarName" : "detailedRentalFare",
      "modelJson" : "{\n  \"properties\" : {\n    \"rateTerm\" : {\n      \"type\" : \"string\",\n      \"description\" : \"It can have the following values: HOURLY, DAILY, WEEKLY, WEEKEND, MONTHLY, TOTAL, TRIP\"\n    },\n    \"rate\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"priceBreakdownOfTotalDueToday\" : {\n      \"type\" : \"array\"\n    },\n    \"totalDueToday\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"priceBreakdownOfTotalDueAtPickup\" : {\n      \"type\" : \"array\"\n    },\n    \"totalDueAtPickup\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"grandTotal\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "rateTerm",

        "getter" : "getRateTerm",
        "setter" : "setRateTerm",
        "description" : "It can have the following values: HOURLY, DAILY, WEEKLY, WEEKEND, MONTHLY, TOTAL, TRIP",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "rateTerm",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"It can have the following values: HOURLY, DAILY, WEEKLY, WEEKEND, MONTHLY, TOTAL, TRIP\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rate",
        "complexType" : "mobilePrice",
        "getter" : "getRate",
        "setter" : "setRate",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "rate",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "priceBreakdownOfTotalDueToday",
        "getter" : "getPriceBreakdownOfTotalDueToday",
        "setter" : "setPriceBreakdownOfTotalDueToday",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "priceBreakdownOfTotalDueToday",
        "defaultValue" : "new ArrayList<null>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\"\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalDueToday",
        "complexType" : "mobilePrice",
        "getter" : "getTotalDueToday",
        "setter" : "setTotalDueToday",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalDueToday",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "priceBreakdownOfTotalDueAtPickup",
        "getter" : "getPriceBreakdownOfTotalDueAtPickup",
        "setter" : "setPriceBreakdownOfTotalDueAtPickup",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "priceBreakdownOfTotalDueAtPickup",
        "defaultValue" : "new ArrayList<null>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\"\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalDueAtPickup",
        "complexType" : "mobilePrice",
        "getter" : "getTotalDueAtPickup",
        "setter" : "setTotalDueAtPickup",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalDueAtPickup",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "grandTotal",
        "complexType" : "mobilePrice",
        "getter" : "getGrandTotal",
        "setter" : "setGrandTotal",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "grandTotal",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "mobilePrice", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "rentalProduct",
      "classname" : "RentalProduct",
      "classVarName" : "rentalProduct",
      "modelJson" : "{\n  \"properties\" : {\n    \"pickupTime\" : {\n      \"type\" : \"string\"\n    },\n    \"dropOffTime\" : {\n      \"type\" : \"string\"\n    },\n    \"productKey\" : {\n      \"type\" : \"string\"\n    },\n    \"vendor\" : {\n      \"$ref\" : \"#/definitions/vendor\"\n    },\n    \"creditCardRequiredToGuaranteeReservation\" : {\n      \"type\" : \"boolean\"\n    },\n    \"pickUpLocation\" : {\n      \"$ref\" : \"#/definitions/carLocation\"\n    },\n    \"dropOffLocation\" : {\n      \"$ref\" : \"#/definitions/carLocation\"\n    },\n    \"vehicleInfo\" : {\n      \"$ref\" : \"#/definitions/vehicleInfo\"\n    },\n    \"detailedFare\" : {\n      \"$ref\" : \"#/definitions/detailedRentalFare\"\n    },\n    \"rulesAndRestrictionsURL\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "pickupTime",

        "getter" : "getPickupTime",
        "setter" : "setPickupTime",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "pickupTime",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dropOffTime",

        "getter" : "getDropOffTime",
        "setter" : "setDropOffTime",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "dropOffTime",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "productKey",

        "getter" : "getProductKey",
        "setter" : "setProductKey",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "productKey",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "vendor",
        "complexType" : "vendor",
        "getter" : "getVendor",
        "setter" : "setVendor",
        "datatype" : "vendor",
        "datatypeWithEnum" : "vendor",
        "name" : "vendor",
        "defaultValue" : "null",
        "baseType" : "vendor",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/vendor\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "creditCardRequiredToGuaranteeReservation",

        "getter" : "getCreditCardRequiredToGuaranteeReservation",
        "setter" : "setCreditCardRequiredToGuaranteeReservation",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "creditCardRequiredToGuaranteeReservation",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "pickUpLocation",
        "complexType" : "carLocation",
        "getter" : "getPickUpLocation",
        "setter" : "setPickUpLocation",
        "datatype" : "carLocation",
        "datatypeWithEnum" : "carLocation",
        "name" : "pickUpLocation",
        "defaultValue" : "null",
        "baseType" : "carLocation",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carLocation\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dropOffLocation",
        "complexType" : "carLocation",
        "getter" : "getDropOffLocation",
        "setter" : "setDropOffLocation",
        "datatype" : "carLocation",
        "datatypeWithEnum" : "carLocation",
        "name" : "dropOffLocation",
        "defaultValue" : "null",
        "baseType" : "carLocation",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carLocation\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "vehicleInfo",
        "complexType" : "vehicleInfo",
        "getter" : "getVehicleInfo",
        "setter" : "setVehicleInfo",
        "datatype" : "vehicleInfo",
        "datatypeWithEnum" : "vehicleInfo",
        "name" : "vehicleInfo",
        "defaultValue" : "null",
        "baseType" : "vehicleInfo",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/vehicleInfo\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "detailedFare",
        "complexType" : "detailedRentalFare",
        "getter" : "getDetailedFare",
        "setter" : "setDetailedFare",
        "datatype" : "detailedRentalFare",
        "datatypeWithEnum" : "detailedRentalFare",
        "name" : "detailedFare",
        "defaultValue" : "null",
        "baseType" : "detailedRentalFare",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/detailedRentalFare\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rulesAndRestrictionsURL",

        "getter" : "getRulesAndRestrictionsURL",
        "setter" : "setRulesAndRestrictionsURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "rulesAndRestrictionsURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "vendor", "string", "vehicleInfo", "carLocation", "detailedRentalFare" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "loyaltyPointDomain",
      "classname" : "LoyaltyPointDomain",
      "classVarName" : "loyaltyPointDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"m_pointType\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Possible description: basePoint, offerPoint, None, bonusPoint, fallOfferPoint, eliteCredit, manualAdjustment;\"\n    },\n    \"m_pointDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"m_status\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "m_pointType",

        "getter" : "getM_pointType",
        "setter" : "setM_pointType",
        "description" : "Possible description: basePoint, offerPoint, None, bonusPoint, fallOfferPoint, eliteCredit, manualAdjustment;",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "m_pointType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Possible description: basePoint, offerPoint, None, bonusPoint, fallOfferPoint, eliteCredit, manualAdjustment;\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "m_pointDescription",

        "getter" : "getM_pointDescription",
        "setter" : "setM_pointDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "m_pointDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "m_status",

        "getter" : "getM_status",
        "setter" : "setM_status",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "m_status",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "rewardsDomain",
      "classname" : "RewardsDomain",
      "classVarName" : "rewardsDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"totalPoints\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"basePoints\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"bonusPoints\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/loyaltyPointDomain\"\n      }\n    },\n    \"logoUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"viewStatementURL\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "totalPoints",

        "getter" : "getTotalPoints",
        "setter" : "setTotalPoints",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "totalPoints",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "basePoints",

        "getter" : "getBasePoints",
        "setter" : "setBasePoints",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "basePoints",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "bonusPoints",
        "complexType" : "loyaltyPointDomain",
        "getter" : "getBonusPoints",
        "setter" : "setBonusPoints",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "bonusPoints",
        "defaultValue" : "new ArrayList<loyaltyPointDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/loyaltyPointDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "logoUrl",

        "getter" : "getLogoUrl",
        "setter" : "setLogoUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "logoUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "viewStatementURL",

        "getter" : "getViewStatementURL",
        "setter" : "setViewStatementURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "viewStatementURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string", "loyaltyPointDomain", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "customerSupportDomain",
      "classname" : "CustomerSupportDomain",
      "classVarName" : "customerSupportDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"customerSupportURL\" : {\n      \"type\" : \"string\"\n    },\n    \"customerSupportPhoneInfo\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"customerSupportPhoneNumberDomestic\" : {\n      \"type\" : \"string\"\n    },\n    \"customerSupportPhoneNumberDomesticAfterHours\" : {\n      \"type\" : \"string\"\n    },\n    \"customerSupportPhoneNumberInternational\" : {\n      \"type\" : \"string\"\n    },\n    \"customerSupportPhoneInfoForEmail\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"termsAndConditionsURL\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "customerSupportURL",

        "getter" : "getCustomerSupportURL",
        "setter" : "setCustomerSupportURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "customerSupportURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "customerSupportPhoneInfo",

        "getter" : "getCustomerSupportPhoneInfo",
        "setter" : "setCustomerSupportPhoneInfo",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "customerSupportPhoneInfo",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "customerSupportPhoneNumberDomestic",

        "getter" : "getCustomerSupportPhoneNumberDomestic",
        "setter" : "setCustomerSupportPhoneNumberDomestic",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "customerSupportPhoneNumberDomestic",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "customerSupportPhoneNumberDomesticAfterHours",

        "getter" : "getCustomerSupportPhoneNumberDomesticAfterHours",
        "setter" : "setCustomerSupportPhoneNumberDomesticAfterHours",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "customerSupportPhoneNumberDomesticAfterHours",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "customerSupportPhoneNumberInternational",

        "getter" : "getCustomerSupportPhoneNumberInternational",
        "setter" : "setCustomerSupportPhoneNumberInternational",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "customerSupportPhoneNumberInternational",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "customerSupportPhoneInfoForEmail",

        "getter" : "getCustomerSupportPhoneInfoForEmail",
        "setter" : "setCustomerSupportPhoneInfoForEmail",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "customerSupportPhoneInfoForEmail",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "termsAndConditionsURL",

        "getter" : "getTermsAndConditionsURL",
        "setter" : "setTermsAndConditionsURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "termsAndConditionsURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "addressDomain",
      "classname" : "AddressDomain",
      "classVarName" : "addressDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"addressLine1\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine2\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine3\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine4\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine5\" : {\n      \"type\" : \"string\"\n    },\n    \"city\" : {\n      \"type\" : \"string\"\n    },\n    \"cityLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"companyName\" : {\n      \"type\" : \"string\"\n    },\n    \"countrySubdivisionCode\" : {\n      \"type\" : \"string\"\n    },\n    \"postalCode\" : {\n      \"type\" : \"string\"\n    },\n    \"countryCode\" : {\n      \"type\" : \"string\"\n    },\n    \"countryName\" : {\n      \"type\" : \"string\"\n    },\n    \"fullAddress\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "addressLine1",

        "getter" : "getAddressLine1",
        "setter" : "setAddressLine1",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine1",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine2",

        "getter" : "getAddressLine2",
        "setter" : "setAddressLine2",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine2",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine3",

        "getter" : "getAddressLine3",
        "setter" : "setAddressLine3",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine3",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine4",

        "getter" : "getAddressLine4",
        "setter" : "setAddressLine4",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine4",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine5",

        "getter" : "getAddressLine5",
        "setter" : "setAddressLine5",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine5",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "city",

        "getter" : "getCity",
        "setter" : "setCity",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "city",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cityLocalized",

        "getter" : "getCityLocalized",
        "setter" : "setCityLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cityLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "companyName",

        "getter" : "getCompanyName",
        "setter" : "setCompanyName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "companyName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "countrySubdivisionCode",

        "getter" : "getCountrySubdivisionCode",
        "setter" : "setCountrySubdivisionCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countrySubdivisionCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "postalCode",

        "getter" : "getPostalCode",
        "setter" : "setPostalCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "postalCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "countryCode",

        "getter" : "getCountryCode",
        "setter" : "setCountryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "countryName",

        "getter" : "getCountryName",
        "setter" : "setCountryName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countryName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fullAddress",

        "getter" : "getFullAddress",
        "setter" : "setFullAddress",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fullAddress",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "labelAndValuePairDomain",
      "classname" : "LabelAndValuePairDomain",
      "classVarName" : "labelAndValuePairDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"label\" : {\n      \"type\" : \"string\"\n    },\n    \"value\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "label",

        "getter" : "getLabel",
        "setter" : "setLabel",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "label",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "value",

        "getter" : "getValue",
        "setter" : "setValue",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "value",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "hotelPropertyInfoDomain",
      "classname" : "HotelPropertyInfoDomain",
      "classVarName" : "hotelPropertyInfoDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"address\" : {\n      \"$ref\" : \"#/definitions/addressDomain\"\n    },\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"starRating\" : {\n      \"type\" : \"string\"\n    },\n    \"photoThumbnailURL\" : {\n      \"type\" : \"string\"\n    },\n    \"photoThumbnail500pixURL\" : {\n      \"type\" : \"string\"\n    },\n    \"photoThumbnail1000pixURL\" : {\n      \"type\" : \"string\"\n    },\n    \"localPhone\" : {\n      \"type\" : \"string\"\n    },\n    \"tollFreePhone\" : {\n      \"type\" : \"string\"\n    },\n    \"formattedPhoneNumbers\" : {\n      \"type\" : \"string\"\n    },\n    \"checkInPolicies\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"checkInStartTimePolicy\" : {\n      \"$ref\" : \"#/definitions/labelAndValuePairDomain\"\n    },\n    \"checkInEndTimePolicy\" : {\n      \"$ref\" : \"#/definitions/labelAndValuePairDomain\"\n    },\n    \"checkOutTimePolicy\" : {\n      \"$ref\" : \"#/definitions/labelAndValuePairDomain\"\n    },\n    \"generalRules\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"restrictionPolicies\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"fees\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"mandatoryFees\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"specialCheckInInstructions\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"isVipAccess\" : {\n      \"type\" : \"boolean\"\n    },\n    \"googleMapsLink\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "address",
        "complexType" : "addressDomain",
        "getter" : "getAddress",
        "setter" : "setAddress",
        "datatype" : "addressDomain",
        "datatypeWithEnum" : "addressDomain",
        "name" : "address",
        "defaultValue" : "null",
        "baseType" : "addressDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/addressDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "starRating",

        "getter" : "getStarRating",
        "setter" : "setStarRating",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "starRating",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "photoThumbnailURL",

        "getter" : "getPhotoThumbnailURL",
        "setter" : "setPhotoThumbnailURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "photoThumbnailURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "photoThumbnail500pixURL",

        "getter" : "getPhotoThumbnail500pixURL",
        "setter" : "setPhotoThumbnail500pixURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "photoThumbnail500pixURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "photoThumbnail1000pixURL",

        "getter" : "getPhotoThumbnail1000pixURL",
        "setter" : "setPhotoThumbnail1000pixURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "photoThumbnail1000pixURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localPhone",

        "getter" : "getLocalPhone",
        "setter" : "setLocalPhone",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localPhone",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tollFreePhone",

        "getter" : "getTollFreePhone",
        "setter" : "setTollFreePhone",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tollFreePhone",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "formattedPhoneNumbers",

        "getter" : "getFormattedPhoneNumbers",
        "setter" : "setFormattedPhoneNumbers",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "formattedPhoneNumbers",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInPolicies",

        "getter" : "getCheckInPolicies",
        "setter" : "setCheckInPolicies",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "checkInPolicies",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInStartTimePolicy",
        "complexType" : "labelAndValuePairDomain",
        "getter" : "getCheckInStartTimePolicy",
        "setter" : "setCheckInStartTimePolicy",
        "datatype" : "labelAndValuePairDomain",
        "datatypeWithEnum" : "labelAndValuePairDomain",
        "name" : "checkInStartTimePolicy",
        "defaultValue" : "null",
        "baseType" : "labelAndValuePairDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/labelAndValuePairDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInEndTimePolicy",
        "complexType" : "labelAndValuePairDomain",
        "getter" : "getCheckInEndTimePolicy",
        "setter" : "setCheckInEndTimePolicy",
        "datatype" : "labelAndValuePairDomain",
        "datatypeWithEnum" : "labelAndValuePairDomain",
        "name" : "checkInEndTimePolicy",
        "defaultValue" : "null",
        "baseType" : "labelAndValuePairDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/labelAndValuePairDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkOutTimePolicy",
        "complexType" : "labelAndValuePairDomain",
        "getter" : "getCheckOutTimePolicy",
        "setter" : "setCheckOutTimePolicy",
        "datatype" : "labelAndValuePairDomain",
        "datatypeWithEnum" : "labelAndValuePairDomain",
        "name" : "checkOutTimePolicy",
        "defaultValue" : "null",
        "baseType" : "labelAndValuePairDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/labelAndValuePairDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "generalRules",

        "getter" : "getGeneralRules",
        "setter" : "setGeneralRules",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "generalRules",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "restrictionPolicies",

        "getter" : "getRestrictionPolicies",
        "setter" : "setRestrictionPolicies",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "restrictionPolicies",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fees",

        "getter" : "getFees",
        "setter" : "setFees",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "fees",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "mandatoryFees",

        "getter" : "getMandatoryFees",
        "setter" : "setMandatoryFees",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "mandatoryFees",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "specialCheckInInstructions",

        "getter" : "getSpecialCheckInInstructions",
        "setter" : "setSpecialCheckInInstructions",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "specialCheckInInstructions",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isVipAccess",

        "getter" : "getIsVipAccess",
        "setter" : "setIsVipAccess",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isVipAccess",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "googleMapsLink",

        "getter" : "getGoogleMapsLink",
        "setter" : "setGoogleMapsLink",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "googleMapsLink",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "labelAndValuePairDomain", "string", "addressDomain", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "lodgingPriceDetailsPerDayDomain",
      "classname" : "LodgingPriceDetailsPerDayDomain",
      "classVarName" : "lodgingPriceDetailsPerDayDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"day\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"primaryCurrencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"amount\" : {\n      \"type\" : \"string\"\n    },\n    \"amountFormatted\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "day",
        "complexType" : "timeDomain",
        "getter" : "getDay",
        "setter" : "setDay",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "day",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "primaryCurrencyCode",

        "getter" : "getPrimaryCurrencyCode",
        "setter" : "setPrimaryCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "primaryCurrencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amount",

        "getter" : "getAmount",
        "setter" : "setAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "amount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amountFormatted",

        "getter" : "getAmountFormatted",
        "setter" : "setAmountFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "amountFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "timeDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "lodgingPriceDetailsDomain",
      "classname" : "LodgingPriceDetailsDomain",
      "classVarName" : "lodgingPriceDetailsDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"comment\" : {\n      \"type\" : \"string\"\n    },\n    \"primaryCurrencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"base\" : {\n      \"type\" : \"string\"\n    },\n    \"baseFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"baseWithAdjustmentForDRRRateDiscount\" : {\n      \"type\" : \"string\"\n    },\n    \"baseWithAdjustmentForDRRRateDiscountFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"extraGuestCharges\" : {\n      \"type\" : \"string\"\n    },\n    \"extraGuestChargesFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"taxesAndFees\" : {\n      \"type\" : \"string\"\n    },\n    \"taxesAndFeesFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"mandatoryHotelFees\" : {\n      \"type\" : \"string\"\n    },\n    \"mandatoryHotelFeesFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"adjustmentForDRRRateDiscount\" : {\n      \"type\" : \"string\"\n    },\n    \"adjustmentForDRRRateDiscountFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"drrRateDiscountDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"adjustmentForAgent\" : {\n      \"type\" : \"string\"\n    },\n    \"adjustmentForAgentFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"adjustmentForCoupon\" : {\n      \"type\" : \"string\"\n    },\n    \"adjustmentForCouponFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"adjustmentForEmployeeDiscount\" : {\n      \"type\" : \"string\"\n    },\n    \"adjustmentForEmployeeDiscountFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"adjustmentForLoyalty\" : {\n      \"type\" : \"string\"\n    },\n    \"adjustmentForLoyaltyFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"subTotalBeforeCoupon\" : {\n      \"type\" : \"string\"\n    },\n    \"subTotalBeforeCouponFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"subTotalAfterDeposits\" : {\n      \"type\" : \"string\"\n    },\n    \"subTotalAfterDepositsFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"subTotalAfterDepositsPOS\" : {\n      \"type\" : \"string\"\n    },\n    \"subTotalAfterDepositsPOSFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"penalty\" : {\n      \"type\" : \"string\"\n    },\n    \"penaltyFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"refund\" : {\n      \"type\" : \"string\"\n    },\n    \"refundFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"refundPOS\" : {\n      \"type\" : \"string\"\n    },\n    \"refundPOSFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"taxStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"total\" : {\n      \"type\" : \"string\"\n    },\n    \"totalFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"totalExpediaCollectAmount\" : {\n      \"type\" : \"string\"\n    },\n    \"totalExpediaCollectAmountFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"totalPOSCurrencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"totalPOS\" : {\n      \"type\" : \"string\"\n    },\n    \"totalPOSFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelDeposits\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelDepositsFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelDepositsPOS\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelDepositsPOSFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelDepositsAfterRefund\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelDepositsAfterRefundFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelDepositsAfterRefundPOS\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelDepositsAfterRefundPOSFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"averagePricePerDay\" : {\n      \"type\" : \"string\"\n    },\n    \"averagePricePerDayFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"averageTaxPerDay\" : {\n      \"type\" : \"string\"\n    },\n    \"averageTaxPerDayFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"priceDetailsPerDay\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/lodgingPriceDetailsPerDayDomain\"\n      }\n    },\n    \"isSameRateForAllNights\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hasFees\" : {\n      \"type\" : \"boolean\"\n    },\n    \"expediaChangeFee\" : {\n      \"type\" : \"string\"\n    },\n    \"expediaChangeFeeFormatted\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "comment",

        "getter" : "getComment",
        "setter" : "setComment",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "comment",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "primaryCurrencyCode",

        "getter" : "getPrimaryCurrencyCode",
        "setter" : "setPrimaryCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "primaryCurrencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "base",

        "getter" : "getBase",
        "setter" : "setBase",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "base",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "baseFormatted",

        "getter" : "getBaseFormatted",
        "setter" : "setBaseFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "baseFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "baseWithAdjustmentForDRRRateDiscount",

        "getter" : "getBaseWithAdjustmentForDRRRateDiscount",
        "setter" : "setBaseWithAdjustmentForDRRRateDiscount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "baseWithAdjustmentForDRRRateDiscount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "baseWithAdjustmentForDRRRateDiscountFormatted",

        "getter" : "getBaseWithAdjustmentForDRRRateDiscountFormatted",
        "setter" : "setBaseWithAdjustmentForDRRRateDiscountFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "baseWithAdjustmentForDRRRateDiscountFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "extraGuestCharges",

        "getter" : "getExtraGuestCharges",
        "setter" : "setExtraGuestCharges",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "extraGuestCharges",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "extraGuestChargesFormatted",

        "getter" : "getExtraGuestChargesFormatted",
        "setter" : "setExtraGuestChargesFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "extraGuestChargesFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxesAndFees",

        "getter" : "getTaxesAndFees",
        "setter" : "setTaxesAndFees",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "taxesAndFees",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxesAndFeesFormatted",

        "getter" : "getTaxesAndFeesFormatted",
        "setter" : "setTaxesAndFeesFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "taxesAndFeesFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "mandatoryHotelFees",

        "getter" : "getMandatoryHotelFees",
        "setter" : "setMandatoryHotelFees",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "mandatoryHotelFees",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "mandatoryHotelFeesFormatted",

        "getter" : "getMandatoryHotelFeesFormatted",
        "setter" : "setMandatoryHotelFeesFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "mandatoryHotelFeesFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adjustmentForDRRRateDiscount",

        "getter" : "getAdjustmentForDRRRateDiscount",
        "setter" : "setAdjustmentForDRRRateDiscount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adjustmentForDRRRateDiscount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adjustmentForDRRRateDiscountFormatted",

        "getter" : "getAdjustmentForDRRRateDiscountFormatted",
        "setter" : "setAdjustmentForDRRRateDiscountFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adjustmentForDRRRateDiscountFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "drrRateDiscountDescription",

        "getter" : "getDrrRateDiscountDescription",
        "setter" : "setDrrRateDiscountDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "drrRateDiscountDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adjustmentForAgent",

        "getter" : "getAdjustmentForAgent",
        "setter" : "setAdjustmentForAgent",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adjustmentForAgent",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adjustmentForAgentFormatted",

        "getter" : "getAdjustmentForAgentFormatted",
        "setter" : "setAdjustmentForAgentFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adjustmentForAgentFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adjustmentForCoupon",

        "getter" : "getAdjustmentForCoupon",
        "setter" : "setAdjustmentForCoupon",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adjustmentForCoupon",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adjustmentForCouponFormatted",

        "getter" : "getAdjustmentForCouponFormatted",
        "setter" : "setAdjustmentForCouponFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adjustmentForCouponFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adjustmentForEmployeeDiscount",

        "getter" : "getAdjustmentForEmployeeDiscount",
        "setter" : "setAdjustmentForEmployeeDiscount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adjustmentForEmployeeDiscount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adjustmentForEmployeeDiscountFormatted",

        "getter" : "getAdjustmentForEmployeeDiscountFormatted",
        "setter" : "setAdjustmentForEmployeeDiscountFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adjustmentForEmployeeDiscountFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adjustmentForLoyalty",

        "getter" : "getAdjustmentForLoyalty",
        "setter" : "setAdjustmentForLoyalty",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adjustmentForLoyalty",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adjustmentForLoyaltyFormatted",

        "getter" : "getAdjustmentForLoyaltyFormatted",
        "setter" : "setAdjustmentForLoyaltyFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adjustmentForLoyaltyFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "subTotalBeforeCoupon",

        "getter" : "getSubTotalBeforeCoupon",
        "setter" : "setSubTotalBeforeCoupon",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "subTotalBeforeCoupon",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "subTotalBeforeCouponFormatted",

        "getter" : "getSubTotalBeforeCouponFormatted",
        "setter" : "setSubTotalBeforeCouponFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "subTotalBeforeCouponFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "subTotalAfterDeposits",

        "getter" : "getSubTotalAfterDeposits",
        "setter" : "setSubTotalAfterDeposits",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "subTotalAfterDeposits",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "subTotalAfterDepositsFormatted",

        "getter" : "getSubTotalAfterDepositsFormatted",
        "setter" : "setSubTotalAfterDepositsFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "subTotalAfterDepositsFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "subTotalAfterDepositsPOS",

        "getter" : "getSubTotalAfterDepositsPOS",
        "setter" : "setSubTotalAfterDepositsPOS",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "subTotalAfterDepositsPOS",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "subTotalAfterDepositsPOSFormatted",

        "getter" : "getSubTotalAfterDepositsPOSFormatted",
        "setter" : "setSubTotalAfterDepositsPOSFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "subTotalAfterDepositsPOSFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "penalty",

        "getter" : "getPenalty",
        "setter" : "setPenalty",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "penalty",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "penaltyFormatted",

        "getter" : "getPenaltyFormatted",
        "setter" : "setPenaltyFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "penaltyFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "refund",

        "getter" : "getRefund",
        "setter" : "setRefund",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "refund",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "refundFormatted",

        "getter" : "getRefundFormatted",
        "setter" : "setRefundFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "refundFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "refundPOS",

        "getter" : "getRefundPOS",
        "setter" : "setRefundPOS",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "refundPOS",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "refundPOSFormatted",

        "getter" : "getRefundPOSFormatted",
        "setter" : "setRefundPOSFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "refundPOSFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxStatus",

        "getter" : "getTaxStatus",
        "setter" : "setTaxStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "taxStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "total",

        "getter" : "getTotal",
        "setter" : "setTotal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "total",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalFormatted",

        "getter" : "getTotalFormatted",
        "setter" : "setTotalFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalExpediaCollectAmount",

        "getter" : "getTotalExpediaCollectAmount",
        "setter" : "setTotalExpediaCollectAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalExpediaCollectAmount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalExpediaCollectAmountFormatted",

        "getter" : "getTotalExpediaCollectAmountFormatted",
        "setter" : "setTotalExpediaCollectAmountFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalExpediaCollectAmountFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalPOSCurrencyCode",

        "getter" : "getTotalPOSCurrencyCode",
        "setter" : "setTotalPOSCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalPOSCurrencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalPOS",

        "getter" : "getTotalPOS",
        "setter" : "setTotalPOS",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalPOS",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalPOSFormatted",

        "getter" : "getTotalPOSFormatted",
        "setter" : "setTotalPOSFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalPOSFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelDeposits",

        "getter" : "getHotelDeposits",
        "setter" : "setHotelDeposits",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelDeposits",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelDepositsFormatted",

        "getter" : "getHotelDepositsFormatted",
        "setter" : "setHotelDepositsFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelDepositsFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelDepositsPOS",

        "getter" : "getHotelDepositsPOS",
        "setter" : "setHotelDepositsPOS",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelDepositsPOS",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelDepositsPOSFormatted",

        "getter" : "getHotelDepositsPOSFormatted",
        "setter" : "setHotelDepositsPOSFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelDepositsPOSFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelDepositsAfterRefund",

        "getter" : "getHotelDepositsAfterRefund",
        "setter" : "setHotelDepositsAfterRefund",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelDepositsAfterRefund",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelDepositsAfterRefundFormatted",

        "getter" : "getHotelDepositsAfterRefundFormatted",
        "setter" : "setHotelDepositsAfterRefundFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelDepositsAfterRefundFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelDepositsAfterRefundPOS",

        "getter" : "getHotelDepositsAfterRefundPOS",
        "setter" : "setHotelDepositsAfterRefundPOS",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelDepositsAfterRefundPOS",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelDepositsAfterRefundPOSFormatted",

        "getter" : "getHotelDepositsAfterRefundPOSFormatted",
        "setter" : "setHotelDepositsAfterRefundPOSFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelDepositsAfterRefundPOSFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "averagePricePerDay",

        "getter" : "getAveragePricePerDay",
        "setter" : "setAveragePricePerDay",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "averagePricePerDay",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "averagePricePerDayFormatted",

        "getter" : "getAveragePricePerDayFormatted",
        "setter" : "setAveragePricePerDayFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "averagePricePerDayFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "averageTaxPerDay",

        "getter" : "getAverageTaxPerDay",
        "setter" : "setAverageTaxPerDay",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "averageTaxPerDay",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "averageTaxPerDayFormatted",

        "getter" : "getAverageTaxPerDayFormatted",
        "setter" : "setAverageTaxPerDayFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "averageTaxPerDayFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "priceDetailsPerDay",
        "complexType" : "lodgingPriceDetailsPerDayDomain",
        "getter" : "getPriceDetailsPerDay",
        "setter" : "setPriceDetailsPerDay",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "priceDetailsPerDay",
        "defaultValue" : "new ArrayList<lodgingPriceDetailsPerDayDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/lodgingPriceDetailsPerDayDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isSameRateForAllNights",

        "getter" : "getIsSameRateForAllNights",
        "setter" : "setIsSameRateForAllNights",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isSameRateForAllNights",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasFees",

        "getter" : "getHasFees",
        "setter" : "setHasFees",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasFees",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "expediaChangeFee",

        "getter" : "getExpediaChangeFee",
        "setter" : "setExpediaChangeFee",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "expediaChangeFee",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "expediaChangeFeeFormatted",

        "getter" : "getExpediaChangeFeeFormatted",
        "setter" : "setExpediaChangeFeeFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "expediaChangeFeeFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "lodgingPriceDetailsPerDayDomain", "string", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "lodgingRulesDomain",
      "classname" : "LodgingRulesDomain",
      "classVarName" : "lodgingRulesDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"cancelChangeWarning\" : {\n      \"type\" : \"string\"\n    },\n    \"cancelChangeRulesIntroduction\" : {\n      \"type\" : \"string\"\n    },\n    \"cancelChangeRules\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"cancellationWindowTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"opaqueRules\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"opaquePolicies\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"lateArrivalInstructions\" : {\n      \"type\" : \"string\"\n    },\n    \"loyaltyPointsDisclaimer\" : {\n      \"type\" : \"string\"\n    },\n    \"quebecResidentsIndemnityFund\" : {\n      \"type\" : \"string\"\n    },\n    \"currencyDisclaimer\" : {\n      \"type\" : \"string\"\n    },\n    \"currencyConversionDisclaimer\" : {\n      \"type\" : \"string\"\n    },\n    \"extraGuestPolicies\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"occupancyPolicies\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"paymentPolicies\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"aarpCheckIn\" : {\n      \"type\" : \"string\"\n    },\n    \"roomRequestDisclaimer\" : {\n      \"type\" : \"string\"\n    },\n    \"accessibilityText\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "cancelChangeWarning",

        "getter" : "getCancelChangeWarning",
        "setter" : "setCancelChangeWarning",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cancelChangeWarning",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancelChangeRulesIntroduction",

        "getter" : "getCancelChangeRulesIntroduction",
        "setter" : "setCancelChangeRulesIntroduction",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cancelChangeRulesIntroduction",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancelChangeRules",

        "getter" : "getCancelChangeRules",
        "setter" : "setCancelChangeRules",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "cancelChangeRules",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancellationWindowTime",
        "complexType" : "timeDomain",
        "getter" : "getCancellationWindowTime",
        "setter" : "setCancellationWindowTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "cancellationWindowTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "opaqueRules",

        "getter" : "getOpaqueRules",
        "setter" : "setOpaqueRules",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "opaqueRules",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "opaquePolicies",

        "getter" : "getOpaquePolicies",
        "setter" : "setOpaquePolicies",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "opaquePolicies",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lateArrivalInstructions",

        "getter" : "getLateArrivalInstructions",
        "setter" : "setLateArrivalInstructions",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "lateArrivalInstructions",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "loyaltyPointsDisclaimer",

        "getter" : "getLoyaltyPointsDisclaimer",
        "setter" : "setLoyaltyPointsDisclaimer",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "loyaltyPointsDisclaimer",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "quebecResidentsIndemnityFund",

        "getter" : "getQuebecResidentsIndemnityFund",
        "setter" : "setQuebecResidentsIndemnityFund",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "quebecResidentsIndemnityFund",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencyDisclaimer",

        "getter" : "getCurrencyDisclaimer",
        "setter" : "setCurrencyDisclaimer",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyDisclaimer",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencyConversionDisclaimer",

        "getter" : "getCurrencyConversionDisclaimer",
        "setter" : "setCurrencyConversionDisclaimer",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyConversionDisclaimer",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "extraGuestPolicies",

        "getter" : "getExtraGuestPolicies",
        "setter" : "setExtraGuestPolicies",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "extraGuestPolicies",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "occupancyPolicies",

        "getter" : "getOccupancyPolicies",
        "setter" : "setOccupancyPolicies",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "occupancyPolicies",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "paymentPolicies",

        "getter" : "getPaymentPolicies",
        "setter" : "setPaymentPolicies",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "paymentPolicies",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "aarpCheckIn",

        "getter" : "getAarpCheckIn",
        "setter" : "setAarpCheckIn",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "aarpCheckIn",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomRequestDisclaimer",

        "getter" : "getRoomRequestDisclaimer",
        "setter" : "setRoomRequestDisclaimer",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomRequestDisclaimer",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "accessibilityText",

        "getter" : "getAccessibilityText",
        "setter" : "setAccessibilityText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "accessibilityText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "List", "timeDomain", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "priceDomain",
      "classname" : "PriceDomain",
      "classVarName" : "priceDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"currency\" : {\n      \"$ref\" : \"#/definitions/currencyDomain\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "currency",
        "complexType" : "currencyDomain",
        "getter" : "getCurrency",
        "setter" : "setCurrency",
        "datatype" : "currencyDomain",
        "datatypeWithEnum" : "currencyDomain",
        "name" : "currency",
        "defaultValue" : "null",
        "baseType" : "currencyDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/currencyDomain\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "currencyDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "couponDomain",
      "classname" : "CouponDomain",
      "classVarName" : "couponDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"description\" : {\n      \"type\" : \"string\"\n    },\n    \"code\" : {\n      \"type\" : \"string\"\n    },\n    \"couponValue\" : {\n      \"$ref\" : \"#/definitions/priceDomain\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "description",

        "getter" : "getDescription",
        "setter" : "setDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "description",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "code",

        "getter" : "getCode",
        "setter" : "setCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "code",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "couponValue",
        "complexType" : "priceDomain",
        "getter" : "getCouponValue",
        "setter" : "setCouponValue",
        "datatype" : "priceDomain",
        "datatypeWithEnum" : "priceDomain",
        "name" : "couponValue",
        "defaultValue" : "null",
        "baseType" : "priceDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/priceDomain\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "priceDomain", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "currencyDomain",
      "classname" : "CurrencyDomain",
      "classVarName" : "currencyDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"currencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"defaultFractionDigits\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"numericCode\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"instances\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Returns a Hashmap data structure(HashMap<String, Currency>)\"\n    },\n    \"available\" : {\n      \"type\" : \"array\",\n      \"description\" : \"Returns a Hashset data structure(HashSet<Currency>)\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/currencyDomain\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "currencyCode",

        "getter" : "getCurrencyCode",
        "setter" : "setCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "defaultFractionDigits",

        "getter" : "getDefaultFractionDigits",
        "setter" : "setDefaultFractionDigits",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "defaultFractionDigits",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "numericCode",

        "getter" : "getNumericCode",
        "setter" : "setNumericCode",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "numericCode",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "instances",

        "getter" : "getInstances",
        "setter" : "setInstances",
        "description" : "Returns a Hashmap data structure(HashMap<String, Currency>)",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "instances",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Returns a Hashmap data structure(HashMap<String, Currency>)\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "available",
        "complexType" : "currencyDomain",
        "getter" : "getAvailable",
        "setter" : "setAvailable",
        "description" : "Returns a Hashset data structure(HashSet<Currency>)",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "available",
        "defaultValue" : "new ArrayList<currencyDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"description\" : \"Returns a Hashset data structure(HashSet<Currency>)\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/currencyDomain\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string", "currencyDomain", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "guestDomain",
      "classname" : "GuestDomain",
      "classVarName" : "guestDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"firstName\" : {\n      \"type\" : \"string\"\n    },\n    \"fullName\" : {\n      \"type\" : \"string\"\n    },\n    \"email\" : {\n      \"type\" : \"string\"\n    },\n    \"primaryPhone\" : {\n      \"type\" : \"string\"\n    },\n    \"phone\" : {\n      \"type\" : \"string\"\n    },\n    \"frequentGuestPlanName\" : {\n      \"type\" : \"string\"\n    },\n    \"frequentGuestMembershipCode\" : {\n      \"type\" : \"string\"\n    },\n    \"frequentFlyerPlanName\" : {\n      \"type\" : \"string\"\n    },\n    \"frequentFlyerMembershipCode\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "firstName",

        "getter" : "getFirstName",
        "setter" : "setFirstName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fullName",

        "getter" : "getFullName",
        "setter" : "setFullName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fullName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "email",

        "getter" : "getEmail",
        "setter" : "setEmail",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "email",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "primaryPhone",

        "getter" : "getPrimaryPhone",
        "setter" : "setPrimaryPhone",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "primaryPhone",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "phone",

        "getter" : "getPhone",
        "setter" : "setPhone",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "phone",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "frequentGuestPlanName",

        "getter" : "getFrequentGuestPlanName",
        "setter" : "setFrequentGuestPlanName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "frequentGuestPlanName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "frequentGuestMembershipCode",

        "getter" : "getFrequentGuestMembershipCode",
        "setter" : "setFrequentGuestMembershipCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "frequentGuestMembershipCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "frequentFlyerPlanName",

        "getter" : "getFrequentFlyerPlanName",
        "setter" : "setFrequentFlyerPlanName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "frequentFlyerPlanName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "frequentFlyerMembershipCode",

        "getter" : "getFrequentFlyerMembershipCode",
        "setter" : "setFrequentFlyerMembershipCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "frequentFlyerMembershipCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "occupancyInfoDomain",
      "classname" : "OccupancyInfoDomain",
      "classVarName" : "occupancyInfoDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"adultCount\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"childCount\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"infantCount\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"childAndInfantAges\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"integer\",\n        \"format\" : \"int32\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "adultCount",

        "getter" : "getAdultCount",
        "setter" : "setAdultCount",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "adultCount",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "childCount",

        "getter" : "getChildCount",
        "setter" : "setChildCount",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "childCount",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "infantCount",

        "getter" : "getInfantCount",
        "setter" : "setInfantCount",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "infantCount",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "childAndInfantAges",

        "getter" : "getChildAndInfantAges",
        "setter" : "setChildAndInfantAges",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "childAndInfantAges",
        "defaultValue" : "new ArrayList<integer>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"integer\",\n    \"format\" : \"int32\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "roomOptionsDomain",
      "classname" : "RoomOptionsDomain",
      "classVarName" : "roomOptionsDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"bedTypeName\" : {\n      \"type\" : \"string\"\n    },\n    \"defaultBedTypeName\" : {\n      \"type\" : \"string\"\n    },\n    \"smokingPreference\" : {\n      \"type\" : \"string\"\n    },\n    \"specialRequest\" : {\n      \"type\" : \"string\"\n    },\n    \"accessibilityOptions\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"hasExtraBedAdult\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hasExtraBedChild\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hasExtraBedInfant\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isSmokingPreferenceSelected\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isRoomOptionsAvailable\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "bedTypeName",

        "getter" : "getBedTypeName",
        "setter" : "setBedTypeName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bedTypeName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "defaultBedTypeName",

        "getter" : "getDefaultBedTypeName",
        "setter" : "setDefaultBedTypeName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "defaultBedTypeName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "smokingPreference",

        "getter" : "getSmokingPreference",
        "setter" : "setSmokingPreference",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "smokingPreference",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "specialRequest",

        "getter" : "getSpecialRequest",
        "setter" : "setSpecialRequest",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "specialRequest",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "accessibilityOptions",

        "getter" : "getAccessibilityOptions",
        "setter" : "setAccessibilityOptions",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "accessibilityOptions",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasExtraBedAdult",

        "getter" : "getHasExtraBedAdult",
        "setter" : "setHasExtraBedAdult",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasExtraBedAdult",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasExtraBedChild",

        "getter" : "getHasExtraBedChild",
        "setter" : "setHasExtraBedChild",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasExtraBedChild",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasExtraBedInfant",

        "getter" : "getHasExtraBedInfant",
        "setter" : "setHasExtraBedInfant",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasExtraBedInfant",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isSmokingPreferenceSelected",

        "getter" : "getIsSmokingPreferenceSelected",
        "setter" : "setIsSmokingPreferenceSelected",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isSmokingPreferenceSelected",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isRoomOptionsAvailable",

        "getter" : "getIsRoomOptionsAvailable",
        "setter" : "setIsRoomOptionsAvailable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isRoomOptionsAvailable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "bedDomain",
      "classname" : "BedDomain",
      "classVarName" : "bedDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\"\n    },\n    \"description\" : {\n      \"type\" : \"string\"\n    },\n    \"selected\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "id",

        "getter" : "getId",
        "setter" : "setId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "id",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "description",

        "getter" : "getDescription",
        "setter" : "setDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "description",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "selected",

        "getter" : "getSelected",
        "setter" : "setSelected",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "selected",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "accessibilityDomain",
      "classname" : "AccessibilityDomain",
      "classVarName" : "accessibilityDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\"\n    },\n    \"description\" : {\n      \"type\" : \"string\"\n    },\n    \"selected\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "id",

        "getter" : "getId",
        "setter" : "setId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "id",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "description",

        "getter" : "getDescription",
        "setter" : "setDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "description",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "selected",

        "getter" : "getSelected",
        "setter" : "setSelected",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "selected",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "availableRoomOptionsDomain",
      "classname" : "AvailableRoomOptionsDomain",
      "classVarName" : "availableRoomOptionsDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"bedTypes\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/bedDomain\"\n      }\n    },\n    \"accessibilityOptions\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/accessibilityDomain\"\n      }\n    },\n    \"isSmokingRoomAvailable\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isNonSmokingRoomAvailable\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "bedTypes",
        "complexType" : "bedDomain",
        "getter" : "getBedTypes",
        "setter" : "setBedTypes",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "bedTypes",
        "defaultValue" : "new ArrayList<bedDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/bedDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "accessibilityOptions",
        "complexType" : "accessibilityDomain",
        "getter" : "getAccessibilityOptions",
        "setter" : "setAccessibilityOptions",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "accessibilityOptions",
        "defaultValue" : "new ArrayList<accessibilityDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/accessibilityDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isSmokingRoomAvailable",

        "getter" : "getIsSmokingRoomAvailable",
        "setter" : "setIsSmokingRoomAvailable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isSmokingRoomAvailable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isNonSmokingRoomAvailable",

        "getter" : "getIsNonSmokingRoomAvailable",
        "setter" : "setIsNonSmokingRoomAvailable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isNonSmokingRoomAvailable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "accessibilityDomain", "List", "array", "bedDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "roomPreferencesDomain",
      "classname" : "RoomPreferencesDomain",
      "classVarName" : "roomPreferencesDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"primaryOccupant\" : {\n      \"$ref\" : \"#/definitions/guestDomain\"\n    },\n    \"otherOccupantInfo\" : {\n      \"$ref\" : \"#/definitions/occupancyInfoDomain\"\n    },\n    \"occupantSelectedRoomOptions\" : {\n      \"$ref\" : \"#/definitions/roomOptionsDomain\"\n    },\n    \"availableRoomOptions\" : {\n      \"$ref\" : \"#/definitions/availableRoomOptionsDomain\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "primaryOccupant",
        "complexType" : "guestDomain",
        "getter" : "getPrimaryOccupant",
        "setter" : "setPrimaryOccupant",
        "datatype" : "guestDomain",
        "datatypeWithEnum" : "guestDomain",
        "name" : "primaryOccupant",
        "defaultValue" : "null",
        "baseType" : "guestDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/guestDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "otherOccupantInfo",
        "complexType" : "occupancyInfoDomain",
        "getter" : "getOtherOccupantInfo",
        "setter" : "setOtherOccupantInfo",
        "datatype" : "occupancyInfoDomain",
        "datatypeWithEnum" : "occupancyInfoDomain",
        "name" : "otherOccupantInfo",
        "defaultValue" : "null",
        "baseType" : "occupancyInfoDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/occupancyInfoDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "occupantSelectedRoomOptions",
        "complexType" : "roomOptionsDomain",
        "getter" : "getOccupantSelectedRoomOptions",
        "setter" : "setOccupantSelectedRoomOptions",
        "datatype" : "roomOptionsDomain",
        "datatypeWithEnum" : "roomOptionsDomain",
        "name" : "occupantSelectedRoomOptions",
        "defaultValue" : "null",
        "baseType" : "roomOptionsDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/roomOptionsDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "availableRoomOptions",
        "complexType" : "availableRoomOptionsDomain",
        "getter" : "getAvailableRoomOptions",
        "setter" : "setAvailableRoomOptions",
        "datatype" : "availableRoomOptionsDomain",
        "datatypeWithEnum" : "availableRoomOptionsDomain",
        "name" : "availableRoomOptions",
        "defaultValue" : "null",
        "baseType" : "availableRoomOptionsDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/availableRoomOptionsDomain\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "occupancyInfoDomain", "availableRoomOptionsDomain", "guestDomain", "roomOptionsDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "cancelRefundDetailsDomain",
      "classname" : "CancelRefundDetailsDomain",
      "classVarName" : "cancelRefundDetailsDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"condition\" : {\n      \"type\" : \"string\"\n    },\n    \"currencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"penaltyAmount\" : {\n      \"type\" : \"string\"\n    },\n    \"penaltyAmountFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"refundAmount\" : {\n      \"type\" : \"string\"\n    },\n    \"refundAmountFormatted\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "condition",

        "getter" : "getCondition",
        "setter" : "setCondition",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "condition",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencyCode",

        "getter" : "getCurrencyCode",
        "setter" : "setCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "penaltyAmount",

        "getter" : "getPenaltyAmount",
        "setter" : "setPenaltyAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "penaltyAmount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "penaltyAmountFormatted",

        "getter" : "getPenaltyAmountFormatted",
        "setter" : "setPenaltyAmountFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "penaltyAmountFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "refundAmount",

        "getter" : "getRefundAmount",
        "setter" : "setRefundAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "refundAmount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "refundAmountFormatted",

        "getter" : "getRefundAmountFormatted",
        "setter" : "setRefundAmountFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "refundAmountFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "roomDomain",
      "classname" : "RoomDomain",
      "classVarName" : "roomDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"uniqueID\" : {\n      \"type\" : \"string\"\n    },\n    \"roomRatePlanDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"roomTypeCode\" : {\n      \"type\" : \"string\"\n    },\n    \"ratePlanCode\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatusEnum\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelConfirmationNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelCancellationId\" : {\n      \"type\" : \"string\"\n    },\n    \"drrRateDiscountDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"orderLineNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"refundabilityStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"availableOnAllDates\" : {\n      \"type\" : \"string\"\n    },\n    \"roomCancelLink\" : {\n      \"type\" : \"string\"\n    },\n    \"roomChangeLink\" : {\n      \"type\" : \"string\"\n    },\n    \"cancelRefundDetails\" : {\n      \"$ref\" : \"#/definitions/cancelRefundDetailsDomain\"\n    },\n    \"totalPriceDetails\" : {\n      \"$ref\" : \"#/definitions/lodgingPriceDetailsDomain\"\n    },\n    \"averagePriceDetails\" : {\n      \"$ref\" : \"#/definitions/lodgingPriceDetailsDomain\"\n    },\n    \"roomPreferences\" : {\n      \"$ref\" : \"#/definitions/roomPreferencesDomain\"\n    },\n    \"amenities\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "uniqueID",

        "getter" : "getUniqueID",
        "setter" : "setUniqueID",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "uniqueID",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomRatePlanDescription",

        "getter" : "getRoomRatePlanDescription",
        "setter" : "setRoomRatePlanDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomRatePlanDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomTypeCode",

        "getter" : "getRoomTypeCode",
        "setter" : "setRoomTypeCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomTypeCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "ratePlanCode",

        "getter" : "getRatePlanCode",
        "setter" : "setRatePlanCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "ratePlanCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatus",

        "getter" : "getBookingStatus",
        "setter" : "setBookingStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatusEnum",

        "getter" : "getBookingStatusEnum",
        "setter" : "setBookingStatusEnum",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatusEnum",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelConfirmationNumber",

        "getter" : "getHotelConfirmationNumber",
        "setter" : "setHotelConfirmationNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelConfirmationNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelCancellationId",

        "getter" : "getHotelCancellationId",
        "setter" : "setHotelCancellationId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelCancellationId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "drrRateDiscountDescription",

        "getter" : "getDrrRateDiscountDescription",
        "setter" : "setDrrRateDiscountDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "drrRateDiscountDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderLineNumber",

        "getter" : "getOrderLineNumber",
        "setter" : "setOrderLineNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderLineNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "refundabilityStatus",

        "getter" : "getRefundabilityStatus",
        "setter" : "setRefundabilityStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "refundabilityStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "availableOnAllDates",

        "getter" : "getAvailableOnAllDates",
        "setter" : "setAvailableOnAllDates",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "availableOnAllDates",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomCancelLink",

        "getter" : "getRoomCancelLink",
        "setter" : "setRoomCancelLink",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomCancelLink",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomChangeLink",

        "getter" : "getRoomChangeLink",
        "setter" : "setRoomChangeLink",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomChangeLink",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancelRefundDetails",
        "complexType" : "cancelRefundDetailsDomain",
        "getter" : "getCancelRefundDetails",
        "setter" : "setCancelRefundDetails",
        "datatype" : "cancelRefundDetailsDomain",
        "datatypeWithEnum" : "cancelRefundDetailsDomain",
        "name" : "cancelRefundDetails",
        "defaultValue" : "null",
        "baseType" : "cancelRefundDetailsDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/cancelRefundDetailsDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalPriceDetails",
        "complexType" : "lodgingPriceDetailsDomain",
        "getter" : "getTotalPriceDetails",
        "setter" : "setTotalPriceDetails",
        "datatype" : "lodgingPriceDetailsDomain",
        "datatypeWithEnum" : "lodgingPriceDetailsDomain",
        "name" : "totalPriceDetails",
        "defaultValue" : "null",
        "baseType" : "lodgingPriceDetailsDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/lodgingPriceDetailsDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "averagePriceDetails",
        "complexType" : "lodgingPriceDetailsDomain",
        "getter" : "getAveragePriceDetails",
        "setter" : "setAveragePriceDetails",
        "datatype" : "lodgingPriceDetailsDomain",
        "datatypeWithEnum" : "lodgingPriceDetailsDomain",
        "name" : "averagePriceDetails",
        "defaultValue" : "null",
        "baseType" : "lodgingPriceDetailsDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/lodgingPriceDetailsDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomPreferences",
        "complexType" : "roomPreferencesDomain",
        "getter" : "getRoomPreferences",
        "setter" : "setRoomPreferences",
        "datatype" : "roomPreferencesDomain",
        "datatypeWithEnum" : "roomPreferencesDomain",
        "name" : "roomPreferences",
        "defaultValue" : "null",
        "baseType" : "roomPreferencesDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/roomPreferencesDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amenities",

        "getter" : "getAmenities",
        "setter" : "setAmenities",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "amenities",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "roomPreferencesDomain", "string", "lodgingPriceDetailsDomain", "cancelRefundDetailsDomain", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "paymentAndCreditFeesDomain",
      "classname" : "PaymentAndCreditFeesDomain",
      "classVarName" : "paymentAndCreditFeesDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"paymentsHotelFeesAndDepositsDisclaimer\" : {\n      \"type\" : \"string\"\n    },\n    \"paymentsDepositRequired\" : {\n      \"type\" : \"string\"\n    },\n    \"paymentsCreditsGDSHotelAnyRoomCancelled\" : {\n      \"type\" : \"string\"\n    },\n    \"paymentsCreditsDAHotelAnyRoomCancelled\" : {\n      \"type\" : \"string\"\n    },\n    \"noFeesStaticText\" : {\n      \"type\" : \"string\"\n    },\n    \"isDirectAgency\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isGDS\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isFullyCancelled\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isAnyRoomCancelled\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isDepositRequired\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isPaymentsCreditsVisible\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "paymentsHotelFeesAndDepositsDisclaimer",

        "getter" : "getPaymentsHotelFeesAndDepositsDisclaimer",
        "setter" : "setPaymentsHotelFeesAndDepositsDisclaimer",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "paymentsHotelFeesAndDepositsDisclaimer",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "paymentsDepositRequired",

        "getter" : "getPaymentsDepositRequired",
        "setter" : "setPaymentsDepositRequired",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "paymentsDepositRequired",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "paymentsCreditsGDSHotelAnyRoomCancelled",

        "getter" : "getPaymentsCreditsGDSHotelAnyRoomCancelled",
        "setter" : "setPaymentsCreditsGDSHotelAnyRoomCancelled",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "paymentsCreditsGDSHotelAnyRoomCancelled",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "paymentsCreditsDAHotelAnyRoomCancelled",

        "getter" : "getPaymentsCreditsDAHotelAnyRoomCancelled",
        "setter" : "setPaymentsCreditsDAHotelAnyRoomCancelled",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "paymentsCreditsDAHotelAnyRoomCancelled",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "noFeesStaticText",

        "getter" : "getNoFeesStaticText",
        "setter" : "setNoFeesStaticText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "noFeesStaticText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isDirectAgency",

        "getter" : "getIsDirectAgency",
        "setter" : "setIsDirectAgency",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isDirectAgency",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isGDS",

        "getter" : "getIsGDS",
        "setter" : "setIsGDS",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isGDS",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isFullyCancelled",

        "getter" : "getIsFullyCancelled",
        "setter" : "setIsFullyCancelled",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isFullyCancelled",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isAnyRoomCancelled",

        "getter" : "getIsAnyRoomCancelled",
        "setter" : "setIsAnyRoomCancelled",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isAnyRoomCancelled",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isDepositRequired",

        "getter" : "getIsDepositRequired",
        "setter" : "setIsDepositRequired",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isDepositRequired",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isPaymentsCreditsVisible",

        "getter" : "getIsPaymentsCreditsVisible",
        "setter" : "setIsPaymentsCreditsVisible",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isPaymentsCreditsVisible",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "hotelDomain",
      "classname" : "HotelDomain",
      "classVarName" : "hotelDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"uniqueID\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelId\" : {\n      \"type\" : \"string\"\n    },\n    \"checkInDateTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"checkOutDateTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"startTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"endTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"checkInDate\" : {\n      \"type\" : \"string\"\n    },\n    \"checkOutDate\" : {\n      \"type\" : \"string\"\n    },\n    \"checkInDateLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"checkOutDateLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"numberOfNights\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"bookingStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatusText\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatusMessage\" : {\n      \"type\" : \"string\"\n    },\n    \"inventoryType\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Possible values: MERCHANT, PEGASUS, WORLDSPAN, VENERE, DIRECT_AGENCY, OPAQUE, ESCAPIA, WOTIF\"\n    },\n    \"inventorySource\" : {\n      \"type\" : \"string\"\n    },\n    \"paymentModel\" : {\n      \"type\" : \"string\"\n    },\n    \"inventoryVisibility\" : {\n      \"type\" : \"string\"\n    },\n    \"orderNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"webCancelPathURL\" : {\n      \"type\" : \"string\"\n    },\n    \"infositeURL\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelPropertyInfo\" : {\n      \"$ref\" : \"#/definitions/hotelPropertyInfoDomain\"\n    },\n    \"averagePriceDetails\" : {\n      \"$ref\" : \"#/definitions/lodgingPriceDetailsDomain\"\n    },\n    \"totalPriceDetails\" : {\n      \"$ref\" : \"#/definitions/lodgingPriceDetailsDomain\"\n    },\n    \"rules\" : {\n      \"$ref\" : \"#/definitions/lodgingRulesDomain\"\n    },\n    \"appliedCoupons\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/couponDomain\"\n      }\n    },\n    \"rooms\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/roomDomain\"\n      }\n    },\n    \"sharableItemDetailURL\" : {\n      \"type\" : \"string\"\n    },\n    \"isFreeCancellationAvailable\" : {\n      \"type\" : \"boolean\"\n    },\n    \"paymentsAndCreditFees\" : {\n      \"$ref\" : \"#/definitions/paymentAndCreditFeesDomain\"\n    },\n    \"roomChangeLink\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "uniqueID",

        "getter" : "getUniqueID",
        "setter" : "setUniqueID",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "uniqueID",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelId",

        "getter" : "getHotelId",
        "setter" : "setHotelId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInDateTime",
        "complexType" : "timeDomain",
        "getter" : "getCheckInDateTime",
        "setter" : "setCheckInDateTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "checkInDateTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkOutDateTime",
        "complexType" : "timeDomain",
        "getter" : "getCheckOutDateTime",
        "setter" : "setCheckOutDateTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "checkOutDateTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "startTime",
        "complexType" : "timeDomain",
        "getter" : "getStartTime",
        "setter" : "setStartTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "startTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "endTime",
        "complexType" : "timeDomain",
        "getter" : "getEndTime",
        "setter" : "setEndTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "endTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInDate",

        "getter" : "getCheckInDate",
        "setter" : "setCheckInDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkInDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkOutDate",

        "getter" : "getCheckOutDate",
        "setter" : "setCheckOutDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkOutDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInDateLocalized",

        "getter" : "getCheckInDateLocalized",
        "setter" : "setCheckInDateLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkInDateLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkOutDateLocalized",

        "getter" : "getCheckOutDateLocalized",
        "setter" : "setCheckOutDateLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkOutDateLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "numberOfNights",

        "getter" : "getNumberOfNights",
        "setter" : "setNumberOfNights",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "numberOfNights",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "bookingStatus",

        "getter" : "getBookingStatus",
        "setter" : "setBookingStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatusText",

        "getter" : "getBookingStatusText",
        "setter" : "setBookingStatusText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatusText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatusMessage",

        "getter" : "getBookingStatusMessage",
        "setter" : "setBookingStatusMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatusMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "inventoryType",

        "getter" : "getInventoryType",
        "setter" : "setInventoryType",
        "description" : "Possible values: MERCHANT, PEGASUS, WORLDSPAN, VENERE, DIRECT_AGENCY, OPAQUE, ESCAPIA, WOTIF",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "inventoryType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Possible values: MERCHANT, PEGASUS, WORLDSPAN, VENERE, DIRECT_AGENCY, OPAQUE, ESCAPIA, WOTIF\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "inventorySource",

        "getter" : "getInventorySource",
        "setter" : "setInventorySource",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "inventorySource",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "paymentModel",

        "getter" : "getPaymentModel",
        "setter" : "setPaymentModel",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "paymentModel",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "inventoryVisibility",

        "getter" : "getInventoryVisibility",
        "setter" : "setInventoryVisibility",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "inventoryVisibility",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderNumber",

        "getter" : "getOrderNumber",
        "setter" : "setOrderNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "webCancelPathURL",

        "getter" : "getWebCancelPathURL",
        "setter" : "setWebCancelPathURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "webCancelPathURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "infositeURL",

        "getter" : "getInfositeURL",
        "setter" : "setInfositeURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "infositeURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelPropertyInfo",
        "complexType" : "hotelPropertyInfoDomain",
        "getter" : "getHotelPropertyInfo",
        "setter" : "setHotelPropertyInfo",
        "datatype" : "hotelPropertyInfoDomain",
        "datatypeWithEnum" : "hotelPropertyInfoDomain",
        "name" : "hotelPropertyInfo",
        "defaultValue" : "null",
        "baseType" : "hotelPropertyInfoDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/hotelPropertyInfoDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "averagePriceDetails",
        "complexType" : "lodgingPriceDetailsDomain",
        "getter" : "getAveragePriceDetails",
        "setter" : "setAveragePriceDetails",
        "datatype" : "lodgingPriceDetailsDomain",
        "datatypeWithEnum" : "lodgingPriceDetailsDomain",
        "name" : "averagePriceDetails",
        "defaultValue" : "null",
        "baseType" : "lodgingPriceDetailsDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/lodgingPriceDetailsDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalPriceDetails",
        "complexType" : "lodgingPriceDetailsDomain",
        "getter" : "getTotalPriceDetails",
        "setter" : "setTotalPriceDetails",
        "datatype" : "lodgingPriceDetailsDomain",
        "datatypeWithEnum" : "lodgingPriceDetailsDomain",
        "name" : "totalPriceDetails",
        "defaultValue" : "null",
        "baseType" : "lodgingPriceDetailsDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/lodgingPriceDetailsDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rules",
        "complexType" : "lodgingRulesDomain",
        "getter" : "getRules",
        "setter" : "setRules",
        "datatype" : "lodgingRulesDomain",
        "datatypeWithEnum" : "lodgingRulesDomain",
        "name" : "rules",
        "defaultValue" : "null",
        "baseType" : "lodgingRulesDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/lodgingRulesDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "appliedCoupons",
        "complexType" : "couponDomain",
        "getter" : "getAppliedCoupons",
        "setter" : "setAppliedCoupons",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "appliedCoupons",
        "defaultValue" : "new ArrayList<couponDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/couponDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rooms",
        "complexType" : "roomDomain",
        "getter" : "getRooms",
        "setter" : "setRooms",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "rooms",
        "defaultValue" : "new ArrayList<roomDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/roomDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "sharableItemDetailURL",

        "getter" : "getSharableItemDetailURL",
        "setter" : "setSharableItemDetailURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "sharableItemDetailURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isFreeCancellationAvailable",

        "getter" : "getIsFreeCancellationAvailable",
        "setter" : "setIsFreeCancellationAvailable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isFreeCancellationAvailable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "paymentsAndCreditFees",
        "complexType" : "paymentAndCreditFeesDomain",
        "getter" : "getPaymentsAndCreditFees",
        "setter" : "setPaymentsAndCreditFees",
        "datatype" : "paymentAndCreditFeesDomain",
        "datatypeWithEnum" : "paymentAndCreditFeesDomain",
        "name" : "paymentsAndCreditFees",
        "defaultValue" : "null",
        "baseType" : "paymentAndCreditFeesDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/paymentAndCreditFeesDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "roomChangeLink",

        "getter" : "getRoomChangeLink",
        "setter" : "setRoomChangeLink",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "roomChangeLink",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "couponDomain", "roomDomain", "integer", "string", "lodgingPriceDetailsDomain", "lodgingRulesDomain", "hotelPropertyInfoDomain", "paymentAndCreditFeesDomain", "List", "array", "timeDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "confirmationNumberDomain",
      "classname" : "ConfirmationNumberDomain",
      "classVarName" : "confirmationNumberDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"airlineName\" : {\n      \"type\" : \"string\"\n    },\n    \"number\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "airlineName",

        "getter" : "getAirlineName",
        "setter" : "setAirlineName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "number",

        "getter" : "getNumber",
        "setter" : "setNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "number",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "fareDomain",
      "classname" : "FareDomain",
      "classVarName" : "fareDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"airlineCardFee\" : {\n      \"type\" : \"string\"\n    },\n    \"airlineCardFeeFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"expediaServiceFee\" : {\n      \"type\" : \"string\"\n    },\n    \"expediaServiceFeeFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"insurance\" : {\n      \"type\" : \"string\"\n    },\n    \"insuranceFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"subTotal\" : {\n      \"type\" : \"string\"\n    },\n    \"subTotalFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"couponDiscount\" : {\n      \"type\" : \"string\"\n    },\n    \"couponDiscountFormatted\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "airlineCardFee",

        "getter" : "getAirlineCardFee",
        "setter" : "setAirlineCardFee",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineCardFee",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airlineCardFeeFormatted",

        "getter" : "getAirlineCardFeeFormatted",
        "setter" : "setAirlineCardFeeFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineCardFeeFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "expediaServiceFee",

        "getter" : "getExpediaServiceFee",
        "setter" : "setExpediaServiceFee",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "expediaServiceFee",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "expediaServiceFeeFormatted",

        "getter" : "getExpediaServiceFeeFormatted",
        "setter" : "setExpediaServiceFeeFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "expediaServiceFeeFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "insurance",

        "getter" : "getInsurance",
        "setter" : "setInsurance",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "insurance",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "insuranceFormatted",

        "getter" : "getInsuranceFormatted",
        "setter" : "setInsuranceFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "insuranceFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "subTotal",

        "getter" : "getSubTotal",
        "setter" : "setSubTotal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "subTotal",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "subTotalFormatted",

        "getter" : "getSubTotalFormatted",
        "setter" : "setSubTotalFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "subTotalFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "couponDiscount",

        "getter" : "getCouponDiscount",
        "setter" : "setCouponDiscount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "couponDiscount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "couponDiscountFormatted",

        "getter" : "getCouponDiscountFormatted",
        "setter" : "setCouponDiscountFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "couponDiscountFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "feeComponentDomain",
      "classname" : "FeeComponentDomain",
      "classVarName" : "feeComponentDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"localizedName\" : {\n      \"type\" : \"string\"\n    },\n    \"amount\" : {\n      \"type\" : \"string\"\n    },\n    \"amountFormatted\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "localizedName",

        "getter" : "getLocalizedName",
        "setter" : "setLocalizedName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localizedName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amount",

        "getter" : "getAmount",
        "setter" : "setAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "amount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amountFormatted",

        "getter" : "getAmountFormatted",
        "setter" : "setAmountFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "amountFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "weightDomain",
      "classname" : "WeightDomain",
      "classVarName" : "weightDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"unit\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Possible value: KILOGRAM(\\\"kgs\\\")\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "unit",

        "getter" : "getUnit",
        "setter" : "setUnit",
        "description" : "Possible value: KILOGRAM(\\\"kgs\\\")",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "unit",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Possible value: KILOGRAM(\\\"kgs\\\")\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "ancillaryFeeComponentDomain",
      "classname" : "AncillaryFeeComponentDomain",
      "classVarName" : "ancillaryFeeComponentDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"quantity\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"weight\" : {\n      \"$ref\" : \"#/definitions/weightDomain\"\n    },\n    \"addToTotal\" : {\n      \"type\" : \"boolean\"\n    },\n    \"listOfLegsAncillaryAppliedTo\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "quantity",

        "getter" : "getQuantity",
        "setter" : "setQuantity",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "quantity",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "weight",
        "complexType" : "weightDomain",
        "getter" : "getWeight",
        "setter" : "setWeight",
        "datatype" : "weightDomain",
        "datatypeWithEnum" : "weightDomain",
        "name" : "weight",
        "defaultValue" : "null",
        "baseType" : "weightDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/weightDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addToTotal",

        "getter" : "getAddToTotal",
        "setter" : "setAddToTotal",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "addToTotal",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "listOfLegsAncillaryAppliedTo",

        "getter" : "getListOfLegsAncillaryAppliedTo",
        "setter" : "setListOfLegsAncillaryAppliedTo",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "listOfLegsAncillaryAppliedTo",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "weightDomain", "integer", "string", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "phoneDomain",
      "classname" : "PhoneDomain",
      "classVarName" : "phoneDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"countryCode\" : {\n      \"type\" : \"string\"\n    },\n    \"phone\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "countryCode",

        "getter" : "getCountryCode",
        "setter" : "setCountryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "phone",

        "getter" : "getPhone",
        "setter" : "setPhone",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "phone",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "seatDomain",
      "classname" : "SeatDomain",
      "classVarName" : "seatDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"assigned\" : {\n      \"type\" : \"string\"\n    },\n    \"requested\" : {\n      \"type\" : \"string\"\n    },\n    \"seatPreference\" : {\n      \"type\" : \"string\"\n    },\n    \"seatPreferenceLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"ticketingStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"smokingAllowed\" : {\n      \"type\" : \"boolean\"\n    },\n    \"legIndex\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"segmentIndex\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "assigned",

        "getter" : "getAssigned",
        "setter" : "setAssigned",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "assigned",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "requested",

        "getter" : "getRequested",
        "setter" : "setRequested",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "requested",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "seatPreference",

        "getter" : "getSeatPreference",
        "setter" : "setSeatPreference",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "seatPreference",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "seatPreferenceLocalized",

        "getter" : "getSeatPreferenceLocalized",
        "setter" : "setSeatPreferenceLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "seatPreferenceLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "ticketingStatus",

        "getter" : "getTicketingStatus",
        "setter" : "setTicketingStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "ticketingStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "smokingAllowed",

        "getter" : "getSmokingAllowed",
        "setter" : "setSmokingAllowed",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "smokingAllowed",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "legIndex",

        "getter" : "getLegIndex",
        "setter" : "setLegIndex",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "legIndex",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "segmentIndex",

        "getter" : "getSegmentIndex",
        "setter" : "setSegmentIndex",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "segmentIndex",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      } ],
      "imports" : [ "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "frequentFlyerPlanDomain",
      "classname" : "FrequentFlyerPlanDomain",
      "classVarName" : "frequentFlyerPlanDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"airlineCode\" : {\n      \"type\" : \"string\"\n    },\n    \"programCode\" : {\n      \"type\" : \"string\"\n    },\n    \"programName\" : {\n      \"type\" : \"string\"\n    },\n    \"membershipNumber\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "airlineCode",

        "getter" : "getAirlineCode",
        "setter" : "setAirlineCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "programCode",

        "getter" : "getProgramCode",
        "setter" : "setProgramCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "programCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "programName",

        "getter" : "getProgramName",
        "setter" : "setProgramName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "programName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "membershipNumber",

        "getter" : "getMembershipNumber",
        "setter" : "setMembershipNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "membershipNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "passengerFlightDomain",
      "classname" : "PassengerFlightDomain",
      "classVarName" : "passengerFlightDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"typeCode\" : {\n      \"type\" : \"string\"\n    },\n    \"typeLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"title\" : {\n      \"type\" : \"string\"\n    },\n    \"firstName\" : {\n      \"type\" : \"string\"\n    },\n    \"middleName\" : {\n      \"type\" : \"string\"\n    },\n    \"lastName\" : {\n      \"type\" : \"string\"\n    },\n    \"fullName\" : {\n      \"type\" : \"string\"\n    },\n    \"gender\" : {\n      \"type\" : \"string\"\n    },\n    \"dateOfBirth\" : {\n      \"$ref\" : \"#/definitions/confirmationNumberDomain\"\n    },\n    \"TSARedressNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"passportAddress\" : {\n      \"type\" : \"string\"\n    },\n    \"passportCountryCode\" : {\n      \"type\" : \"string\"\n    },\n    \"phoneNumbers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/phoneDomain\"\n      }\n    },\n    \"specialAssistanceOptions\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"ticketNumbers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"cancelledTicketNumbers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"frequentFlyerPlans\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/frequentFlyerPlanDomain\"\n      }\n    },\n    \"seats\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/seatDomain\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "typeCode",

        "getter" : "getTypeCode",
        "setter" : "setTypeCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "typeCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "typeLocalized",

        "getter" : "getTypeLocalized",
        "setter" : "setTypeLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "typeLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "title",

        "getter" : "getTitle",
        "setter" : "setTitle",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "title",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "firstName",

        "getter" : "getFirstName",
        "setter" : "setFirstName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "middleName",

        "getter" : "getMiddleName",
        "setter" : "setMiddleName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "middleName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lastName",

        "getter" : "getLastName",
        "setter" : "setLastName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "lastName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fullName",

        "getter" : "getFullName",
        "setter" : "setFullName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fullName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "gender",

        "getter" : "getGender",
        "setter" : "setGender",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "gender",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dateOfBirth",
        "complexType" : "confirmationNumberDomain",
        "getter" : "getDateOfBirth",
        "setter" : "setDateOfBirth",
        "datatype" : "confirmationNumberDomain",
        "datatypeWithEnum" : "confirmationNumberDomain",
        "name" : "dateOfBirth",
        "defaultValue" : "null",
        "baseType" : "confirmationNumberDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/confirmationNumberDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "TSARedressNumber",

        "getter" : "getTSARedressNumber",
        "setter" : "setTSARedressNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "TSARedressNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "passportAddress",

        "getter" : "getPassportAddress",
        "setter" : "setPassportAddress",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "passportAddress",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "passportCountryCode",

        "getter" : "getPassportCountryCode",
        "setter" : "setPassportCountryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "passportCountryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "phoneNumbers",
        "complexType" : "phoneDomain",
        "getter" : "getPhoneNumbers",
        "setter" : "setPhoneNumbers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "phoneNumbers",
        "defaultValue" : "new ArrayList<phoneDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/phoneDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "specialAssistanceOptions",

        "getter" : "getSpecialAssistanceOptions",
        "setter" : "setSpecialAssistanceOptions",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "specialAssistanceOptions",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "ticketNumbers",

        "getter" : "getTicketNumbers",
        "setter" : "setTicketNumbers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "ticketNumbers",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancelledTicketNumbers",

        "getter" : "getCancelledTicketNumbers",
        "setter" : "setCancelledTicketNumbers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "cancelledTicketNumbers",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "frequentFlyerPlans",
        "complexType" : "frequentFlyerPlanDomain",
        "getter" : "getFrequentFlyerPlans",
        "setter" : "setFrequentFlyerPlans",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "frequentFlyerPlans",
        "defaultValue" : "new ArrayList<frequentFlyerPlanDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/frequentFlyerPlanDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "seats",
        "complexType" : "seatDomain",
        "getter" : "getSeats",
        "setter" : "setSeats",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "seats",
        "defaultValue" : "new ArrayList<seatDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/seatDomain\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "frequentFlyerPlanDomain", "confirmationNumberDomain", "seatDomain", "phoneDomain", "string", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "farePerPassengerDomain",
      "classname" : "FarePerPassengerDomain",
      "classVarName" : "farePerPassengerDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"passengerIndex\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"passengerTypeCode\" : {\n      \"type\" : \"string\"\n    },\n    \"passengerTypeCodeLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"currency\" : {\n      \"type\" : \"string\"\n    },\n    \"base\" : {\n      \"type\" : \"string\"\n    },\n    \"baseFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"taxes\" : {\n      \"type\" : \"string\"\n    },\n    \"taxesFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"fees\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/feeComponentDomain\"\n      }\n    },\n    \"ancillaryFees\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/ancillaryFeeComponentDomain\"\n      }\n    },\n    \"total\" : {\n      \"type\" : \"string\"\n    },\n    \"totalFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"fromToAirportCodes\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "passengerIndex",

        "getter" : "getPassengerIndex",
        "setter" : "setPassengerIndex",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "passengerIndex",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "passengerTypeCode",

        "getter" : "getPassengerTypeCode",
        "setter" : "setPassengerTypeCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "passengerTypeCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "passengerTypeCodeLocalized",

        "getter" : "getPassengerTypeCodeLocalized",
        "setter" : "setPassengerTypeCodeLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "passengerTypeCodeLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currency",

        "getter" : "getCurrency",
        "setter" : "setCurrency",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currency",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "base",

        "getter" : "getBase",
        "setter" : "setBase",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "base",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "baseFormatted",

        "getter" : "getBaseFormatted",
        "setter" : "setBaseFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "baseFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxes",

        "getter" : "getTaxes",
        "setter" : "setTaxes",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "taxes",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxesFormatted",

        "getter" : "getTaxesFormatted",
        "setter" : "setTaxesFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "taxesFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fees",
        "complexType" : "feeComponentDomain",
        "getter" : "getFees",
        "setter" : "setFees",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "fees",
        "defaultValue" : "new ArrayList<feeComponentDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/feeComponentDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "ancillaryFees",
        "complexType" : "ancillaryFeeComponentDomain",
        "getter" : "getAncillaryFees",
        "setter" : "setAncillaryFees",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "ancillaryFees",
        "defaultValue" : "new ArrayList<ancillaryFeeComponentDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/ancillaryFeeComponentDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "total",

        "getter" : "getTotal",
        "setter" : "setTotal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "total",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalFormatted",

        "getter" : "getTotalFormatted",
        "setter" : "setTotalFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fromToAirportCodes",

        "getter" : "getFromToAirportCodes",
        "setter" : "setFromToAirportCodes",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fromToAirportCodes",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "feeComponentDomain", "integer", "string", "List", "ancillaryFeeComponentDomain", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "locationDomain",
      "classname" : "LocationDomain",
      "classVarName" : "locationDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"longName\" : {\n      \"type\" : \"string\"\n    },\n    \"airportCode\" : {\n      \"type\" : \"string\"\n    },\n    \"airportMetroCode\" : {\n      \"type\" : \"string\"\n    },\n    \"city\" : {\n      \"type\" : \"string\"\n    },\n    \"countryCode\" : {\n      \"type\" : \"string\"\n    },\n    \"countrySubdivisionCode\" : {\n      \"type\" : \"string\"\n    },\n    \"fullAddress\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "longName",

        "getter" : "getLongName",
        "setter" : "setLongName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "longName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airportCode",

        "getter" : "getAirportCode",
        "setter" : "setAirportCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airportCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airportMetroCode",

        "getter" : "getAirportMetroCode",
        "setter" : "setAirportMetroCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airportMetroCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "city",

        "getter" : "getCity",
        "setter" : "setCity",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "city",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "countryCode",

        "getter" : "getCountryCode",
        "setter" : "setCountryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "countrySubdivisionCode",

        "getter" : "getCountrySubdivisionCode",
        "setter" : "setCountrySubdivisionCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countrySubdivisionCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fullAddress",

        "getter" : "getFullAddress",
        "setter" : "setFullAddress",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fullAddress",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "flightDelaysDomain",
      "classname" : "FlightDelaysDomain",
      "classVarName" : "flightDelaysDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"departureGateDelay\" : {\n      \"type\" : \"string\"\n    },\n    \"arrivalGateDelay\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "departureGateDelay",

        "getter" : "getDepartureGateDelay",
        "setter" : "setDepartureGateDelay",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "departureGateDelay",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "arrivalGateDelay",

        "getter" : "getArrivalGateDelay",
        "setter" : "setArrivalGateDelay",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "arrivalGateDelay",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "segmentDomain",
      "classname" : "SegmentDomain",
      "classVarName" : "segmentDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"transportationType\" : {\n      \"type\" : \"string\"\n    },\n    \"departureType\" : {\n      \"type\" : \"string\"\n    },\n    \"departureLocation\" : {\n      \"$ref\" : \"#/definitions/locationDomain\"\n    },\n    \"departureTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"arrivalType\" : {\n      \"type\" : \"string\"\n    },\n    \"arrivalLocation\" : {\n      \"$ref\" : \"#/definitions/locationDomain\"\n    },\n    \"arrivalTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"departureTerminal\" : {\n      \"type\" : \"string\"\n    },\n    \"departureGate\" : {\n      \"type\" : \"string\"\n    },\n    \"arrivalTerminal\" : {\n      \"type\" : \"string\"\n    },\n    \"arrivalGate\" : {\n      \"type\" : \"string\"\n    },\n    \"airlineCode\" : {\n      \"type\" : \"string\"\n    },\n    \"externalAirlineCode\" : {\n      \"type\" : \"string\"\n    },\n    \"airlineName\" : {\n      \"type\" : \"string\"\n    },\n    \"operatedByAirCarrierName\" : {\n      \"type\" : \"string\"\n    },\n    \"confirmationAirline\" : {\n      \"type\" : \"string\"\n    },\n    \"confirmationNUmber\" : {\n      \"type\" : \"string\"\n    },\n    \"flightNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"equipmentCode\" : {\n      \"type\" : \"string\"\n    },\n    \"equipmentDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"layoverDuration\" : {\n      \"type\" : \"string\"\n    },\n    \"distanceUnits\" : {\n      \"type\" : \"string\"\n    },\n    \"duration\" : {\n      \"type\" : \"string\"\n    },\n    \"formattedDuration\" : {\n      \"type\" : \"string\"\n    },\n    \"onTimePercentage\" : {\n      \"type\" : \"string\"\n    },\n    \"providerCode\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingCode\" : {\n      \"type\" : \"string\"\n    },\n    \"cabinCode\" : {\n      \"type\" : \"string\"\n    },\n    \"cabinCodeLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"checkinAirlineName\" : {\n      \"type\" : \"string\"\n    },\n    \"checkinAirlineCode\" : {\n      \"type\" : \"string\"\n    },\n    \"isSeatMapAvailable\" : {\n      \"type\" : \"boolean\"\n    },\n    \"flightIdForSeatMap\" : {\n      \"type\" : \"string\"\n    },\n    \"delays\" : {\n      \"$ref\" : \"#/definitions/flightDelaysDomain\"\n    },\n    \"status\" : {\n      \"type\" : \"string\"\n    },\n    \"airSegmentStatusCode\" : {\n      \"type\" : \"string\"\n    },\n    \"airOriginDestinationReferenceIndex\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"segmentChangeMessage\" : {\n      \"type\" : \"string\"\n    },\n    \"segmentChangeMessageLegacy\" : {\n      \"type\" : \"string\"\n    },\n    \"isHidden\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "transportationType",

        "getter" : "getTransportationType",
        "setter" : "setTransportationType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "transportationType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "departureType",

        "getter" : "getDepartureType",
        "setter" : "setDepartureType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "departureType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "departureLocation",
        "complexType" : "locationDomain",
        "getter" : "getDepartureLocation",
        "setter" : "setDepartureLocation",
        "datatype" : "locationDomain",
        "datatypeWithEnum" : "locationDomain",
        "name" : "departureLocation",
        "defaultValue" : "null",
        "baseType" : "locationDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/locationDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "departureTime",
        "complexType" : "timeDomain",
        "getter" : "getDepartureTime",
        "setter" : "setDepartureTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "departureTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "arrivalType",

        "getter" : "getArrivalType",
        "setter" : "setArrivalType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "arrivalType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "arrivalLocation",
        "complexType" : "locationDomain",
        "getter" : "getArrivalLocation",
        "setter" : "setArrivalLocation",
        "datatype" : "locationDomain",
        "datatypeWithEnum" : "locationDomain",
        "name" : "arrivalLocation",
        "defaultValue" : "null",
        "baseType" : "locationDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/locationDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "arrivalTime",
        "complexType" : "timeDomain",
        "getter" : "getArrivalTime",
        "setter" : "setArrivalTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "arrivalTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "departureTerminal",

        "getter" : "getDepartureTerminal",
        "setter" : "setDepartureTerminal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "departureTerminal",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "departureGate",

        "getter" : "getDepartureGate",
        "setter" : "setDepartureGate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "departureGate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "arrivalTerminal",

        "getter" : "getArrivalTerminal",
        "setter" : "setArrivalTerminal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "arrivalTerminal",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "arrivalGate",

        "getter" : "getArrivalGate",
        "setter" : "setArrivalGate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "arrivalGate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airlineCode",

        "getter" : "getAirlineCode",
        "setter" : "setAirlineCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "externalAirlineCode",

        "getter" : "getExternalAirlineCode",
        "setter" : "setExternalAirlineCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "externalAirlineCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airlineName",

        "getter" : "getAirlineName",
        "setter" : "setAirlineName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "operatedByAirCarrierName",

        "getter" : "getOperatedByAirCarrierName",
        "setter" : "setOperatedByAirCarrierName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "operatedByAirCarrierName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "confirmationAirline",

        "getter" : "getConfirmationAirline",
        "setter" : "setConfirmationAirline",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "confirmationAirline",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "confirmationNUmber",

        "getter" : "getConfirmationNUmber",
        "setter" : "setConfirmationNUmber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "confirmationNUmber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flightNumber",

        "getter" : "getFlightNumber",
        "setter" : "setFlightNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "flightNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "equipmentCode",

        "getter" : "getEquipmentCode",
        "setter" : "setEquipmentCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "equipmentCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "equipmentDescription",

        "getter" : "getEquipmentDescription",
        "setter" : "setEquipmentDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "equipmentDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "layoverDuration",

        "getter" : "getLayoverDuration",
        "setter" : "setLayoverDuration",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "layoverDuration",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "distanceUnits",

        "getter" : "getDistanceUnits",
        "setter" : "setDistanceUnits",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "distanceUnits",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "duration",

        "getter" : "getDuration",
        "setter" : "setDuration",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "duration",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "formattedDuration",

        "getter" : "getFormattedDuration",
        "setter" : "setFormattedDuration",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "formattedDuration",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "onTimePercentage",

        "getter" : "getOnTimePercentage",
        "setter" : "setOnTimePercentage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "onTimePercentage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "providerCode",

        "getter" : "getProviderCode",
        "setter" : "setProviderCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "providerCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingCode",

        "getter" : "getBookingCode",
        "setter" : "setBookingCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cabinCode",

        "getter" : "getCabinCode",
        "setter" : "setCabinCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cabinCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cabinCodeLocalized",

        "getter" : "getCabinCodeLocalized",
        "setter" : "setCabinCodeLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cabinCodeLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkinAirlineName",

        "getter" : "getCheckinAirlineName",
        "setter" : "setCheckinAirlineName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkinAirlineName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkinAirlineCode",

        "getter" : "getCheckinAirlineCode",
        "setter" : "setCheckinAirlineCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkinAirlineCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isSeatMapAvailable",

        "getter" : "getIsSeatMapAvailable",
        "setter" : "setIsSeatMapAvailable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isSeatMapAvailable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flightIdForSeatMap",

        "getter" : "getFlightIdForSeatMap",
        "setter" : "setFlightIdForSeatMap",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "flightIdForSeatMap",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "delays",
        "complexType" : "flightDelaysDomain",
        "getter" : "getDelays",
        "setter" : "setDelays",
        "datatype" : "flightDelaysDomain",
        "datatypeWithEnum" : "flightDelaysDomain",
        "name" : "delays",
        "defaultValue" : "null",
        "baseType" : "flightDelaysDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/flightDelaysDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "status",

        "getter" : "getStatus",
        "setter" : "setStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "status",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airSegmentStatusCode",

        "getter" : "getAirSegmentStatusCode",
        "setter" : "setAirSegmentStatusCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airSegmentStatusCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airOriginDestinationReferenceIndex",

        "getter" : "getAirOriginDestinationReferenceIndex",
        "setter" : "setAirOriginDestinationReferenceIndex",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "airOriginDestinationReferenceIndex",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "segmentChangeMessage",

        "getter" : "getSegmentChangeMessage",
        "setter" : "setSegmentChangeMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "segmentChangeMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "segmentChangeMessageLegacy",

        "getter" : "getSegmentChangeMessageLegacy",
        "setter" : "setSegmentChangeMessageLegacy",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "segmentChangeMessageLegacy",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isHidden",

        "getter" : "getIsHidden",
        "setter" : "setIsHidden",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isHidden",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "locationDomain", "integer", "string", "flightDelaysDomain", "timeDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "legDomain",
      "classname" : "LegDomain",
      "classVarName" : "legDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"type\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Possible values: NONSTOP, DIRECT, ONESTOP, MULTISTOP\"\n    },\n    \"state\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Possible values: PRE_START_4,PRE_START_3, PRE_START_2, PRE_START_1, PRE_START_0, POST_START, IN_PROGRESS, PRE_END, POST_END_0, POST_END_1, POST_END_2, POST_END_3\"\n    },\n    \"numberOfStops\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"airlineLogoURL\" : {\n      \"type\" : \"string\"\n    },\n    \"segments\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/segmentDomain\"\n      }\n    },\n    \"sharableFlightLegURL\" : {\n      \"type\" : \"string\"\n    },\n    \"duration\" : {\n      \"type\" : \"string\"\n    },\n    \"segmentChangeMessage\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "type",

        "getter" : "getType",
        "setter" : "setType",
        "description" : "Possible values: NONSTOP, DIRECT, ONESTOP, MULTISTOP",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "type",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Possible values: NONSTOP, DIRECT, ONESTOP, MULTISTOP\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "state",

        "getter" : "getState",
        "setter" : "setState",
        "description" : "Possible values: PRE_START_4,PRE_START_3, PRE_START_2, PRE_START_1, PRE_START_0, POST_START, IN_PROGRESS, PRE_END, POST_END_0, POST_END_1, POST_END_2, POST_END_3",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "state",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Possible values: PRE_START_4,PRE_START_3, PRE_START_2, PRE_START_1, PRE_START_0, POST_START, IN_PROGRESS, PRE_END, POST_END_0, POST_END_1, POST_END_2, POST_END_3\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "numberOfStops",

        "getter" : "getNumberOfStops",
        "setter" : "setNumberOfStops",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "numberOfStops",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "airlineLogoURL",

        "getter" : "getAirlineLogoURL",
        "setter" : "setAirlineLogoURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineLogoURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "segments",
        "complexType" : "segmentDomain",
        "getter" : "getSegments",
        "setter" : "setSegments",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "segments",
        "defaultValue" : "new ArrayList<segmentDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/segmentDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "sharableFlightLegURL",

        "getter" : "getSharableFlightLegURL",
        "setter" : "setSharableFlightLegURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "sharableFlightLegURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "duration",

        "getter" : "getDuration",
        "setter" : "setDuration",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "duration",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "segmentChangeMessage",

        "getter" : "getSegmentChangeMessage",
        "setter" : "setSegmentChangeMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "segmentChangeMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string", "List", "segmentDomain", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "textUrlTripleDomain",
      "classname" : "TextUrlTripleDomain",
      "classVarName" : "textUrlTripleDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"text\" : {\n      \"type\" : \"string\"\n    },\n    \"url\" : {\n      \"type\" : \"string\"\n    },\n    \"textAndURL\" : {\n      \"type\" : \"string\"\n    },\n    \"apiURL\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "text",

        "getter" : "getText",
        "setter" : "setText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "text",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "url",

        "getter" : "getUrl",
        "setter" : "setUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "url",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "textAndURL",

        "getter" : "getTextAndURL",
        "setter" : "setTextAndURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "textAndURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "apiURL",

        "getter" : "getApiURL",
        "setter" : "setApiURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "apiURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "rulesDomain",
      "classname" : "RulesDomain",
      "classVarName" : "rulesDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"bookingFeeText\" : {\n      \"type\" : \"string\"\n    },\n    \"cancellationFeeLegalText\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingFeeLegalText\" : {\n      \"type\" : \"string\"\n    },\n    \"faresNotGuaranteedText\" : {\n      \"type\" : \"string\"\n    },\n    \"cancelChangeIntroductionText\" : {\n      \"type\" : \"string\"\n    },\n    \"feeChangeRefundIntroductionText\" : {\n      \"type\" : \"string\"\n    },\n    \"refundabilityText\" : {\n      \"type\" : \"string\"\n    },\n    \"changePenaltyText\" : {\n      \"type\" : \"string\"\n    },\n    \"completePenaltyRules\" : {\n      \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n    },\n    \"bargainFairUpgradesText\" : {\n      \"type\" : \"string\"\n    },\n    \"bargainFareStandbyText\" : {\n      \"type\" : \"string\"\n    },\n    \"lccPartnerConfEmailsText\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"insuranceTerms\" : {\n      \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n    },\n    \"additionalAirlineFees\" : {\n      \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n    },\n    \"airlineLiabilityLimitations\" : {\n      \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n    },\n    \"airlineLiabilityLimitationsEnglishOnlyCaveatText\" : {\n      \"type\" : \"string\"\n    },\n    \"quebecResidentsIndemnityFundText\" : {\n      \"type\" : \"string\"\n    },\n    \"ticketingAgencyText\" : {\n      \"type\" : \"string\"\n    },\n    \"flightRulesLCCImportantMessage\" : {\n      \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n    },\n    \"manageMyFlightRulesLCCImportantMessage\" : {\n      \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n    },\n    \"flightRulesLCCPrecheckinAdvice\" : {\n      \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n    },\n    \"flightRulesLCCServiceLite\" : {\n      \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n    },\n    \"firstCharterImportantMessage\" : {\n      \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n    },\n    \"secondCharterImportantMessage\" : {\n      \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n    },\n    \"splitTicketingMessage\" : {\n      \"type\" : \"string\"\n    },\n    \"airlineCheckInInstructionText\" : {\n      \"type\" : \"string\"\n    },\n    \"travelingToUSText\" : {\n      \"type\" : \"string\"\n    },\n    \"internationalPassportNoteText\" : {\n      \"type\" : \"string\"\n    },\n    \"onlineCheckinReminderText\" : {\n      \"type\" : \"string\"\n    },\n    \"lccPartnerConfEmailsForSplitTicketText\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "bookingFeeText",

        "getter" : "getBookingFeeText",
        "setter" : "setBookingFeeText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingFeeText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancellationFeeLegalText",

        "getter" : "getCancellationFeeLegalText",
        "setter" : "setCancellationFeeLegalText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cancellationFeeLegalText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingFeeLegalText",

        "getter" : "getBookingFeeLegalText",
        "setter" : "setBookingFeeLegalText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingFeeLegalText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "faresNotGuaranteedText",

        "getter" : "getFaresNotGuaranteedText",
        "setter" : "setFaresNotGuaranteedText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "faresNotGuaranteedText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancelChangeIntroductionText",

        "getter" : "getCancelChangeIntroductionText",
        "setter" : "setCancelChangeIntroductionText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cancelChangeIntroductionText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "feeChangeRefundIntroductionText",

        "getter" : "getFeeChangeRefundIntroductionText",
        "setter" : "setFeeChangeRefundIntroductionText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "feeChangeRefundIntroductionText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "refundabilityText",

        "getter" : "getRefundabilityText",
        "setter" : "setRefundabilityText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "refundabilityText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "changePenaltyText",

        "getter" : "getChangePenaltyText",
        "setter" : "setChangePenaltyText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "changePenaltyText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "completePenaltyRules",
        "complexType" : "textUrlTripleDomain",
        "getter" : "getCompletePenaltyRules",
        "setter" : "setCompletePenaltyRules",
        "datatype" : "textUrlTripleDomain",
        "datatypeWithEnum" : "textUrlTripleDomain",
        "name" : "completePenaltyRules",
        "defaultValue" : "null",
        "baseType" : "textUrlTripleDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bargainFairUpgradesText",

        "getter" : "getBargainFairUpgradesText",
        "setter" : "setBargainFairUpgradesText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bargainFairUpgradesText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bargainFareStandbyText",

        "getter" : "getBargainFareStandbyText",
        "setter" : "setBargainFareStandbyText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bargainFareStandbyText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lccPartnerConfEmailsText",

        "getter" : "getLccPartnerConfEmailsText",
        "setter" : "setLccPartnerConfEmailsText",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "lccPartnerConfEmailsText",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "insuranceTerms",
        "complexType" : "textUrlTripleDomain",
        "getter" : "getInsuranceTerms",
        "setter" : "setInsuranceTerms",
        "datatype" : "textUrlTripleDomain",
        "datatypeWithEnum" : "textUrlTripleDomain",
        "name" : "insuranceTerms",
        "defaultValue" : "null",
        "baseType" : "textUrlTripleDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "additionalAirlineFees",
        "complexType" : "textUrlTripleDomain",
        "getter" : "getAdditionalAirlineFees",
        "setter" : "setAdditionalAirlineFees",
        "datatype" : "textUrlTripleDomain",
        "datatypeWithEnum" : "textUrlTripleDomain",
        "name" : "additionalAirlineFees",
        "defaultValue" : "null",
        "baseType" : "textUrlTripleDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airlineLiabilityLimitations",
        "complexType" : "textUrlTripleDomain",
        "getter" : "getAirlineLiabilityLimitations",
        "setter" : "setAirlineLiabilityLimitations",
        "datatype" : "textUrlTripleDomain",
        "datatypeWithEnum" : "textUrlTripleDomain",
        "name" : "airlineLiabilityLimitations",
        "defaultValue" : "null",
        "baseType" : "textUrlTripleDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airlineLiabilityLimitationsEnglishOnlyCaveatText",

        "getter" : "getAirlineLiabilityLimitationsEnglishOnlyCaveatText",
        "setter" : "setAirlineLiabilityLimitationsEnglishOnlyCaveatText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineLiabilityLimitationsEnglishOnlyCaveatText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "quebecResidentsIndemnityFundText",

        "getter" : "getQuebecResidentsIndemnityFundText",
        "setter" : "setQuebecResidentsIndemnityFundText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "quebecResidentsIndemnityFundText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "ticketingAgencyText",

        "getter" : "getTicketingAgencyText",
        "setter" : "setTicketingAgencyText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "ticketingAgencyText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flightRulesLCCImportantMessage",
        "complexType" : "textUrlTripleDomain",
        "getter" : "getFlightRulesLCCImportantMessage",
        "setter" : "setFlightRulesLCCImportantMessage",
        "datatype" : "textUrlTripleDomain",
        "datatypeWithEnum" : "textUrlTripleDomain",
        "name" : "flightRulesLCCImportantMessage",
        "defaultValue" : "null",
        "baseType" : "textUrlTripleDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "manageMyFlightRulesLCCImportantMessage",
        "complexType" : "textUrlTripleDomain",
        "getter" : "getManageMyFlightRulesLCCImportantMessage",
        "setter" : "setManageMyFlightRulesLCCImportantMessage",
        "datatype" : "textUrlTripleDomain",
        "datatypeWithEnum" : "textUrlTripleDomain",
        "name" : "manageMyFlightRulesLCCImportantMessage",
        "defaultValue" : "null",
        "baseType" : "textUrlTripleDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flightRulesLCCPrecheckinAdvice",
        "complexType" : "textUrlTripleDomain",
        "getter" : "getFlightRulesLCCPrecheckinAdvice",
        "setter" : "setFlightRulesLCCPrecheckinAdvice",
        "datatype" : "textUrlTripleDomain",
        "datatypeWithEnum" : "textUrlTripleDomain",
        "name" : "flightRulesLCCPrecheckinAdvice",
        "defaultValue" : "null",
        "baseType" : "textUrlTripleDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flightRulesLCCServiceLite",
        "complexType" : "textUrlTripleDomain",
        "getter" : "getFlightRulesLCCServiceLite",
        "setter" : "setFlightRulesLCCServiceLite",
        "datatype" : "textUrlTripleDomain",
        "datatypeWithEnum" : "textUrlTripleDomain",
        "name" : "flightRulesLCCServiceLite",
        "defaultValue" : "null",
        "baseType" : "textUrlTripleDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "firstCharterImportantMessage",
        "complexType" : "textUrlTripleDomain",
        "getter" : "getFirstCharterImportantMessage",
        "setter" : "setFirstCharterImportantMessage",
        "datatype" : "textUrlTripleDomain",
        "datatypeWithEnum" : "textUrlTripleDomain",
        "name" : "firstCharterImportantMessage",
        "defaultValue" : "null",
        "baseType" : "textUrlTripleDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "secondCharterImportantMessage",
        "complexType" : "textUrlTripleDomain",
        "getter" : "getSecondCharterImportantMessage",
        "setter" : "setSecondCharterImportantMessage",
        "datatype" : "textUrlTripleDomain",
        "datatypeWithEnum" : "textUrlTripleDomain",
        "name" : "secondCharterImportantMessage",
        "defaultValue" : "null",
        "baseType" : "textUrlTripleDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textUrlTripleDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "splitTicketingMessage",

        "getter" : "getSplitTicketingMessage",
        "setter" : "setSplitTicketingMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "splitTicketingMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airlineCheckInInstructionText",

        "getter" : "getAirlineCheckInInstructionText",
        "setter" : "setAirlineCheckInInstructionText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airlineCheckInInstructionText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "travelingToUSText",

        "getter" : "getTravelingToUSText",
        "setter" : "setTravelingToUSText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "travelingToUSText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "internationalPassportNoteText",

        "getter" : "getInternationalPassportNoteText",
        "setter" : "setInternationalPassportNoteText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "internationalPassportNoteText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "onlineCheckinReminderText",

        "getter" : "getOnlineCheckinReminderText",
        "setter" : "setOnlineCheckinReminderText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "onlineCheckinReminderText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lccPartnerConfEmailsForSplitTicketText",

        "getter" : "getLccPartnerConfEmailsForSplitTicketText",
        "setter" : "setLccPartnerConfEmailsForSplitTicketText",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "lccPartnerConfEmailsForSplitTicketText",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "textUrlTripleDomain", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "flightDomain",
      "classname" : "FlightDomain",
      "classVarName" : "flightDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"uniqueID\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatusText\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatusMessage\" : {\n      \"type\" : \"string\"\n    },\n    \"ticketingStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"orderNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"webCancelPathURL\" : {\n      \"type\" : \"string\"\n    },\n    \"updateFrequentFlyerPathURL\" : {\n      \"type\" : \"string\"\n    },\n    \"orderLineNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"confirmationNumbers\" : {\n      \"$ref\" : \"#/definitions/confirmationNumberDomain\"\n    },\n    \"expediaBookingId\" : {\n      \"type\" : \"string\"\n    },\n    \"paymentModel\" : {\n      \"type\" : \"string\"\n    },\n    \"fareType\" : {\n      \"type\" : \"string\"\n    },\n    \"flightType\" : {\n      \"type\" : \"string\"\n    },\n    \"isInternational\" : {\n      \"type\" : \"boolean\"\n    },\n    \"fareTotal\" : {\n      \"$ref\" : \"#/definitions/fareDomain\"\n    },\n    \"farePerPassenger\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/farePerPassengerDomain\"\n      }\n    },\n    \"isSplitTicket\" : {\n      \"type\" : \"boolean\"\n    },\n    \"fulfillmentMethod\" : {\n      \"type\" : \"string\"\n    },\n    \"passengers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/passengerFlightDomain\"\n      }\n    },\n    \"legs\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/legDomain\"\n      }\n    },\n    \"rules\" : {\n      \"$ref\" : \"#/definitions/rulesDomain\"\n    },\n    \"sharableItemDetailURL\" : {\n      \"type\" : \"string\"\n    },\n    \"airRecordLocator\" : {\n      \"type\" : \"string\"\n    },\n    \"startDate\" : {\n      \"type\" : \"string\"\n    },\n    \"endDate\" : {\n      \"type\" : \"string\"\n    },\n    \"isSeatMapAvailable\" : {\n      \"type\" : \"boolean\"\n    },\n    \"ticketingTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"webChangePathURL\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingProvider\" : {\n      \"type\" : \"string\"\n    },\n    \"hasTrainTransfer\" : {\n      \"type\" : \"boolean\"\n    },\n    \"ticketingAirCarrierNames\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"isLccOrCharter\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "uniqueID",

        "getter" : "getUniqueID",
        "setter" : "setUniqueID",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "uniqueID",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatus",

        "getter" : "getBookingStatus",
        "setter" : "setBookingStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatusText",

        "getter" : "getBookingStatusText",
        "setter" : "setBookingStatusText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatusText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatusMessage",

        "getter" : "getBookingStatusMessage",
        "setter" : "setBookingStatusMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatusMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "ticketingStatus",

        "getter" : "getTicketingStatus",
        "setter" : "setTicketingStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "ticketingStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderNumber",

        "getter" : "getOrderNumber",
        "setter" : "setOrderNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "webCancelPathURL",

        "getter" : "getWebCancelPathURL",
        "setter" : "setWebCancelPathURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "webCancelPathURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "updateFrequentFlyerPathURL",

        "getter" : "getUpdateFrequentFlyerPathURL",
        "setter" : "setUpdateFrequentFlyerPathURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "updateFrequentFlyerPathURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderLineNumber",

        "getter" : "getOrderLineNumber",
        "setter" : "setOrderLineNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderLineNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "confirmationNumbers",
        "complexType" : "confirmationNumberDomain",
        "getter" : "getConfirmationNumbers",
        "setter" : "setConfirmationNumbers",
        "datatype" : "confirmationNumberDomain",
        "datatypeWithEnum" : "confirmationNumberDomain",
        "name" : "confirmationNumbers",
        "defaultValue" : "null",
        "baseType" : "confirmationNumberDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/confirmationNumberDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "expediaBookingId",

        "getter" : "getExpediaBookingId",
        "setter" : "setExpediaBookingId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "expediaBookingId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "paymentModel",

        "getter" : "getPaymentModel",
        "setter" : "setPaymentModel",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "paymentModel",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fareType",

        "getter" : "getFareType",
        "setter" : "setFareType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fareType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flightType",

        "getter" : "getFlightType",
        "setter" : "setFlightType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "flightType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isInternational",

        "getter" : "getIsInternational",
        "setter" : "setIsInternational",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isInternational",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fareTotal",
        "complexType" : "fareDomain",
        "getter" : "getFareTotal",
        "setter" : "setFareTotal",
        "datatype" : "fareDomain",
        "datatypeWithEnum" : "fareDomain",
        "name" : "fareTotal",
        "defaultValue" : "null",
        "baseType" : "fareDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/fareDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "farePerPassenger",
        "complexType" : "farePerPassengerDomain",
        "getter" : "getFarePerPassenger",
        "setter" : "setFarePerPassenger",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "farePerPassenger",
        "defaultValue" : "new ArrayList<farePerPassengerDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/farePerPassengerDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isSplitTicket",

        "getter" : "getIsSplitTicket",
        "setter" : "setIsSplitTicket",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isSplitTicket",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fulfillmentMethod",

        "getter" : "getFulfillmentMethod",
        "setter" : "setFulfillmentMethod",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fulfillmentMethod",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "passengers",
        "complexType" : "passengerFlightDomain",
        "getter" : "getPassengers",
        "setter" : "setPassengers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "passengers",
        "defaultValue" : "new ArrayList<passengerFlightDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/passengerFlightDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "legs",
        "complexType" : "legDomain",
        "getter" : "getLegs",
        "setter" : "setLegs",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "legs",
        "defaultValue" : "new ArrayList<legDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/legDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rules",
        "complexType" : "rulesDomain",
        "getter" : "getRules",
        "setter" : "setRules",
        "datatype" : "rulesDomain",
        "datatypeWithEnum" : "rulesDomain",
        "name" : "rules",
        "defaultValue" : "null",
        "baseType" : "rulesDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/rulesDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "sharableItemDetailURL",

        "getter" : "getSharableItemDetailURL",
        "setter" : "setSharableItemDetailURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "sharableItemDetailURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airRecordLocator",

        "getter" : "getAirRecordLocator",
        "setter" : "setAirRecordLocator",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airRecordLocator",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "startDate",

        "getter" : "getStartDate",
        "setter" : "setStartDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "startDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "endDate",

        "getter" : "getEndDate",
        "setter" : "setEndDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "endDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isSeatMapAvailable",

        "getter" : "getIsSeatMapAvailable",
        "setter" : "setIsSeatMapAvailable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isSeatMapAvailable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "ticketingTime",
        "complexType" : "timeDomain",
        "getter" : "getTicketingTime",
        "setter" : "setTicketingTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "ticketingTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "webChangePathURL",

        "getter" : "getWebChangePathURL",
        "setter" : "setWebChangePathURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "webChangePathURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingProvider",

        "getter" : "getBookingProvider",
        "setter" : "setBookingProvider",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingProvider",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasTrainTransfer",

        "getter" : "getHasTrainTransfer",
        "setter" : "setHasTrainTransfer",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasTrainTransfer",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "ticketingAirCarrierNames",

        "getter" : "getTicketingAirCarrierNames",
        "setter" : "setTicketingAirCarrierNames",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "ticketingAirCarrierNames",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isLccOrCharter",

        "getter" : "getIsLccOrCharter",
        "setter" : "setIsLccOrCharter",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isLccOrCharter",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "confirmationNumberDomain", "fareDomain", "passengerFlightDomain", "rulesDomain", "string", "legDomain", "farePerPassengerDomain", "List", "timeDomain", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carTravelerDomain",
      "classname" : "CarTravelerDomain",
      "classVarName" : "carTravelerDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"firstName\" : {\n      \"type\" : \"string\"\n    },\n    \"middleName\" : {\n      \"type\" : \"string\"\n    },\n    \"lastName\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "firstName",

        "getter" : "getFirstName",
        "setter" : "setFirstName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "middleName",

        "getter" : "getMiddleName",
        "setter" : "setMiddleName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "middleName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lastName",

        "getter" : "getLastName",
        "setter" : "setLastName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "lastName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carLocationDomain",
      "classname" : "CarLocationDomain",
      "classVarName" : "carLocationDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"locationType\" : {\n      \"type\" : \"string\"\n    },\n    \"locationDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"airportInstructions\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine1\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine2\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine3\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine4\" : {\n      \"type\" : \"string\"\n    },\n    \"addressLine5\" : {\n      \"type\" : \"string\"\n    },\n    \"cityName\" : {\n      \"type\" : \"string\"\n    },\n    \"provinceStateName\" : {\n      \"type\" : \"string\"\n    },\n    \"postalCode\" : {\n      \"type\" : \"string\"\n    },\n    \"countryCode\" : {\n      \"type\" : \"string\"\n    },\n    \"locationCode\" : {\n      \"type\" : \"boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "locationType",

        "getter" : "getLocationType",
        "setter" : "setLocationType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locationType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "locationDescription",

        "getter" : "getLocationDescription",
        "setter" : "setLocationDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locationDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airportInstructions",

        "getter" : "getAirportInstructions",
        "setter" : "setAirportInstructions",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airportInstructions",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine1",

        "getter" : "getAddressLine1",
        "setter" : "setAddressLine1",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine1",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine2",

        "getter" : "getAddressLine2",
        "setter" : "setAddressLine2",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine2",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine3",

        "getter" : "getAddressLine3",
        "setter" : "setAddressLine3",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine3",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine4",

        "getter" : "getAddressLine4",
        "setter" : "setAddressLine4",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine4",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "addressLine5",

        "getter" : "getAddressLine5",
        "setter" : "setAddressLine5",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "addressLine5",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cityName",

        "getter" : "getCityName",
        "setter" : "setCityName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cityName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "provinceStateName",

        "getter" : "getProvinceStateName",
        "setter" : "setProvinceStateName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "provinceStateName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "postalCode",

        "getter" : "getPostalCode",
        "setter" : "setPostalCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "postalCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "countryCode",

        "getter" : "getCountryCode",
        "setter" : "setCountryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "countryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "locationCode",

        "getter" : "getLocationCode",
        "setter" : "setLocationCode",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "locationCode",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carOpenHoursDomain",
      "classname" : "CarOpenHoursDomain",
      "classVarName" : "carOpenHoursDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"openingDateTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"closingDateTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "openingDateTime",
        "complexType" : "timeDomain",
        "getter" : "getOpeningDateTime",
        "setter" : "setOpeningDateTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "openingDateTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "closingDateTime",
        "complexType" : "timeDomain",
        "getter" : "getClosingDateTime",
        "setter" : "setClosingDateTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "closingDateTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "timeDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carVendorDomain",
      "classname" : "CarVendorDomain",
      "classVarName" : "carVendorDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"longName\" : {\n      \"type\" : \"string\"\n    },\n    \"code\" : {\n      \"type\" : \"string\"\n    },\n    \"shortName\" : {\n      \"type\" : \"string\"\n    },\n    \"localPhoneNumber\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "longName",

        "getter" : "getLongName",
        "setter" : "setLongName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "longName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "code",

        "getter" : "getCode",
        "setter" : "setCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "code",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "shortName",

        "getter" : "getShortName",
        "setter" : "setShortName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "shortName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localPhoneNumber",

        "getter" : "getLocalPhoneNumber",
        "setter" : "setLocalPhoneNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localPhoneNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carDomainRulesDomain",
      "classname" : "CarDomainRulesDomain",
      "classVarName" : "carDomainRulesDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"ruleType\" : {\n      \"type\" : \"string\"\n    },\n    \"ruleName\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "ruleType",

        "getter" : "getRuleType",
        "setter" : "setRuleType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "ruleType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "ruleName",

        "getter" : "getRuleName",
        "setter" : "setRuleName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "ruleName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carTypeAttributesDomain",
      "classname" : "CarTypeAttributesDomain",
      "classVarName" : "carTypeAttributesDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"vehicleTypeLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"fuelType\" : {\n      \"type\" : \"string\"\n    },\n    \"fuelTypeLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"airConditioningType\" : {\n      \"type\" : \"string\"\n    },\n    \"airConditioningTypeLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"transmissionType\" : {\n      \"type\" : \"string\"\n    },\n    \"transmissionTypeLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"wheelDriveType\" : {\n      \"type\" : \"string\"\n    },\n    \"wheelDriveTypeLocalized\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "vehicleTypeLocalized",

        "getter" : "getVehicleTypeLocalized",
        "setter" : "setVehicleTypeLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "vehicleTypeLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fuelType",

        "getter" : "getFuelType",
        "setter" : "setFuelType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fuelType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fuelTypeLocalized",

        "getter" : "getFuelTypeLocalized",
        "setter" : "setFuelTypeLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fuelTypeLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airConditioningType",

        "getter" : "getAirConditioningType",
        "setter" : "setAirConditioningType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airConditioningType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airConditioningTypeLocalized",

        "getter" : "getAirConditioningTypeLocalized",
        "setter" : "setAirConditioningTypeLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airConditioningTypeLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "transmissionType",

        "getter" : "getTransmissionType",
        "setter" : "setTransmissionType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "transmissionType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "transmissionTypeLocalized",

        "getter" : "getTransmissionTypeLocalized",
        "setter" : "setTransmissionTypeLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "transmissionTypeLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "wheelDriveType",

        "getter" : "getWheelDriveType",
        "setter" : "setWheelDriveType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "wheelDriveType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "wheelDriveTypeLocalized",

        "getter" : "getWheelDriveTypeLocalized",
        "setter" : "setWheelDriveTypeLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "wheelDriveTypeLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carDomain",
      "classname" : "CarDomain",
      "classVarName" : "carDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"uniqueID\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatusText\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatusMessage\" : {\n      \"type\" : \"string\"\n    },\n    \"orderLineNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"paymentModel\" : {\n      \"type\" : \"string\"\n    },\n    \"reservationGuaranteePolicy\" : {\n      \"type\" : \"string\"\n    },\n    \"price\" : {\n      \"$ref\" : \"#/definitions/priceDomain\"\n    },\n    \"confirmationNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"webCancelPathURL\" : {\n      \"type\" : \"string\"\n    },\n    \"webGetCarCancelDetailPathURL\" : {\n      \"type\" : \"string\"\n    },\n    \"webCarRulesPageURL\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingId\" : {\n      \"type\" : \"string\"\n    },\n    \"travelers\" : {\n      \"$ref\" : \"#/definitions/carTravelerDomain\"\n    },\n    \"pickupTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"dropOffTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"pickupLocation\" : {\n      \"$ref\" : \"#/definitions/carLocationDomain\"\n    },\n    \"dropOffLocation\" : {\n      \"$ref\" : \"#/definitions/carLocationDomain\"\n    },\n    \"pickupDateOpenHoursSummaryString\" : {\n      \"type\" : \"string\"\n    },\n    \"passengers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/carOpenHoursDomain\"\n      }\n    },\n    \"dropOffDateOpenHoursSummaryString\" : {\n      \"type\" : \"string\"\n    },\n    \"dropOffDateOpenHours\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/carOpenHoursDomain\"\n      }\n    },\n    \"carVendor\" : {\n      \"$ref\" : \"#/definitions/carVendorDomain\"\n    },\n    \"carCategoryImageURL\" : {\n      \"type\" : \"string\"\n    },\n    \"carCategory\" : {\n      \"type\" : \"string\"\n    },\n    \"carCategoryLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"carType\" : {\n      \"type\" : \"string\"\n    },\n    \"carTypeLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"carTypeAttributes\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/carTypeAttributesDomain\"\n      }\n    },\n    \"specialEquipmentRequests\" : {\n      \"type\" : \"string\"\n    },\n    \"specialEquipmentRequestCaveatText\" : {\n      \"type\" : \"string\"\n    },\n    \"rules\" : {\n      \"$ref\" : \"#/definitions/carDomainRulesDomain\"\n    },\n    \"sharableItemDetailURL\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "uniqueID",

        "getter" : "getUniqueID",
        "setter" : "setUniqueID",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "uniqueID",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatus",

        "getter" : "getBookingStatus",
        "setter" : "setBookingStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatusText",

        "getter" : "getBookingStatusText",
        "setter" : "setBookingStatusText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatusText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatusMessage",

        "getter" : "getBookingStatusMessage",
        "setter" : "setBookingStatusMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatusMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderLineNumber",

        "getter" : "getOrderLineNumber",
        "setter" : "setOrderLineNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderLineNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "paymentModel",

        "getter" : "getPaymentModel",
        "setter" : "setPaymentModel",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "paymentModel",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "reservationGuaranteePolicy",

        "getter" : "getReservationGuaranteePolicy",
        "setter" : "setReservationGuaranteePolicy",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "reservationGuaranteePolicy",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "price",
        "complexType" : "priceDomain",
        "getter" : "getPrice",
        "setter" : "setPrice",
        "datatype" : "priceDomain",
        "datatypeWithEnum" : "priceDomain",
        "name" : "price",
        "defaultValue" : "null",
        "baseType" : "priceDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/priceDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "confirmationNumber",

        "getter" : "getConfirmationNumber",
        "setter" : "setConfirmationNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "confirmationNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "webCancelPathURL",

        "getter" : "getWebCancelPathURL",
        "setter" : "setWebCancelPathURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "webCancelPathURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "webGetCarCancelDetailPathURL",

        "getter" : "getWebGetCarCancelDetailPathURL",
        "setter" : "setWebGetCarCancelDetailPathURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "webGetCarCancelDetailPathURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "webCarRulesPageURL",

        "getter" : "getWebCarRulesPageURL",
        "setter" : "setWebCarRulesPageURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "webCarRulesPageURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingId",

        "getter" : "getBookingId",
        "setter" : "setBookingId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "travelers",
        "complexType" : "carTravelerDomain",
        "getter" : "getTravelers",
        "setter" : "setTravelers",
        "datatype" : "carTravelerDomain",
        "datatypeWithEnum" : "carTravelerDomain",
        "name" : "travelers",
        "defaultValue" : "null",
        "baseType" : "carTravelerDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carTravelerDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "pickupTime",
        "complexType" : "timeDomain",
        "getter" : "getPickupTime",
        "setter" : "setPickupTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "pickupTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dropOffTime",
        "complexType" : "timeDomain",
        "getter" : "getDropOffTime",
        "setter" : "setDropOffTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "dropOffTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "pickupLocation",
        "complexType" : "carLocationDomain",
        "getter" : "getPickupLocation",
        "setter" : "setPickupLocation",
        "datatype" : "carLocationDomain",
        "datatypeWithEnum" : "carLocationDomain",
        "name" : "pickupLocation",
        "defaultValue" : "null",
        "baseType" : "carLocationDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carLocationDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dropOffLocation",
        "complexType" : "carLocationDomain",
        "getter" : "getDropOffLocation",
        "setter" : "setDropOffLocation",
        "datatype" : "carLocationDomain",
        "datatypeWithEnum" : "carLocationDomain",
        "name" : "dropOffLocation",
        "defaultValue" : "null",
        "baseType" : "carLocationDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carLocationDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "pickupDateOpenHoursSummaryString",

        "getter" : "getPickupDateOpenHoursSummaryString",
        "setter" : "setPickupDateOpenHoursSummaryString",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "pickupDateOpenHoursSummaryString",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "passengers",
        "complexType" : "carOpenHoursDomain",
        "getter" : "getPassengers",
        "setter" : "setPassengers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "passengers",
        "defaultValue" : "new ArrayList<carOpenHoursDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/carOpenHoursDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dropOffDateOpenHoursSummaryString",

        "getter" : "getDropOffDateOpenHoursSummaryString",
        "setter" : "setDropOffDateOpenHoursSummaryString",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "dropOffDateOpenHoursSummaryString",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dropOffDateOpenHours",
        "complexType" : "carOpenHoursDomain",
        "getter" : "getDropOffDateOpenHours",
        "setter" : "setDropOffDateOpenHours",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "dropOffDateOpenHours",
        "defaultValue" : "new ArrayList<carOpenHoursDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/carOpenHoursDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "carVendor",
        "complexType" : "carVendorDomain",
        "getter" : "getCarVendor",
        "setter" : "setCarVendor",
        "datatype" : "carVendorDomain",
        "datatypeWithEnum" : "carVendorDomain",
        "name" : "carVendor",
        "defaultValue" : "null",
        "baseType" : "carVendorDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carVendorDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "carCategoryImageURL",

        "getter" : "getCarCategoryImageURL",
        "setter" : "setCarCategoryImageURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "carCategoryImageURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "carCategory",

        "getter" : "getCarCategory",
        "setter" : "setCarCategory",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "carCategory",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "carCategoryLocalized",

        "getter" : "getCarCategoryLocalized",
        "setter" : "setCarCategoryLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "carCategoryLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "carType",

        "getter" : "getCarType",
        "setter" : "setCarType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "carType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "carTypeLocalized",

        "getter" : "getCarTypeLocalized",
        "setter" : "setCarTypeLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "carTypeLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "carTypeAttributes",
        "complexType" : "carTypeAttributesDomain",
        "getter" : "getCarTypeAttributes",
        "setter" : "setCarTypeAttributes",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "carTypeAttributes",
        "defaultValue" : "new ArrayList<carTypeAttributesDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/carTypeAttributesDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "specialEquipmentRequests",

        "getter" : "getSpecialEquipmentRequests",
        "setter" : "setSpecialEquipmentRequests",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "specialEquipmentRequests",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "specialEquipmentRequestCaveatText",

        "getter" : "getSpecialEquipmentRequestCaveatText",
        "setter" : "setSpecialEquipmentRequestCaveatText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "specialEquipmentRequestCaveatText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rules",
        "complexType" : "carDomainRulesDomain",
        "getter" : "getRules",
        "setter" : "setRules",
        "datatype" : "carDomainRulesDomain",
        "datatypeWithEnum" : "carDomainRulesDomain",
        "name" : "rules",
        "defaultValue" : "null",
        "baseType" : "carDomainRulesDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carDomainRulesDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "sharableItemDetailURL",

        "getter" : "getSharableItemDetailURL",
        "setter" : "setSharableItemDetailURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "sharableItemDetailURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "carVendorDomain", "carTravelerDomain", "priceDomain", "carLocationDomain", "carDomainRulesDomain", "carOpenHoursDomain", "string", "carTypeAttributesDomain", "List", "array", "timeDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "vendorLocationDomain",
      "classname" : "VendorLocationDomain",
      "classVarName" : "vendorLocationDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"name1\" : {\n      \"type\" : \"string\"\n    },\n    \"name2\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "name1",

        "getter" : "getName1",
        "setter" : "setName1",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name1",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "name2",

        "getter" : "getName2",
        "setter" : "setName2",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name2",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "activityTravelerFieldsDomain",
      "classname" : "ActivityTravelerFieldsDomain",
      "classVarName" : "activityTravelerFieldsDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"isRedeemer\" : {\n      \"type\" : \"boolean\"\n    },\n    \"firstName\" : {\n      \"type\" : \"string\"\n    },\n    \"middleName\" : {\n      \"type\" : \"string\"\n    },\n    \"lastName\" : {\n      \"type\" : \"string\"\n    },\n    \"gender\" : {\n      \"type\" : \"string\"\n    },\n    \"nationalityCountry\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "isRedeemer",

        "getter" : "getIsRedeemer",
        "setter" : "setIsRedeemer",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isRedeemer",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "firstName",

        "getter" : "getFirstName",
        "setter" : "setFirstName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "middleName",

        "getter" : "getMiddleName",
        "setter" : "setMiddleName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "middleName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lastName",

        "getter" : "getLastName",
        "setter" : "setLastName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "lastName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "gender",

        "getter" : "getGender",
        "setter" : "setGender",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "gender",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nationalityCountry",

        "getter" : "getNationalityCountry",
        "setter" : "setNationalityCountry",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nationalityCountry",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "phoneNumberDomain",
      "classname" : "PhoneNumberDomain",
      "classVarName" : "phoneNumberDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"formatted\" : {\n      \"type\" : \"string\"\n    },\n    \"costText\" : {\n      \"type\" : \"string\"\n    },\n    \"useText\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "formatted",

        "getter" : "getFormatted",
        "setter" : "setFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "formatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "costText",

        "getter" : "getCostText",
        "setter" : "setCostText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "costText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "useText",

        "getter" : "getUseText",
        "setter" : "setUseText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "useText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "hoursOfOperationDomain",
      "classname" : "HoursOfOperationDomain",
      "classVarName" : "hoursOfOperationDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"day\" : {\n      \"type\" : \"string\"\n    },\n    \"startTime\" : {\n      \"type\" : \"string\"\n    },\n    \"endTime\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "day",

        "getter" : "getDay",
        "setter" : "setDay",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "day",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "startTime",

        "getter" : "getStartTime",
        "setter" : "setStartTime",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "startTime",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "endTime",

        "getter" : "getEndTime",
        "setter" : "setEndTime",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "endTime",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "vendorCustomerServiceOfficeDomain",
      "classname" : "VendorCustomerServiceOfficeDomain",
      "classVarName" : "vendorCustomerServiceOfficeDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"emailAddress\" : {\n      \"type\" : \"string\"\n    },\n    \"phoneCountryCode\" : {\n      \"type\" : \"string\"\n    },\n    \"phoneNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"phoneNumbers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/phoneNumberDomain\"\n      }\n    },\n    \"hoursOfOperationText\" : {\n      \"type\" : \"string\"\n    },\n    \"hoursOfOperation\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/hoursOfOperationDomain\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "emailAddress",

        "getter" : "getEmailAddress",
        "setter" : "setEmailAddress",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "emailAddress",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "phoneCountryCode",

        "getter" : "getPhoneCountryCode",
        "setter" : "setPhoneCountryCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "phoneCountryCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "phoneNumber",

        "getter" : "getPhoneNumber",
        "setter" : "setPhoneNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "phoneNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "phoneNumbers",
        "complexType" : "phoneNumberDomain",
        "getter" : "getPhoneNumbers",
        "setter" : "setPhoneNumbers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "phoneNumbers",
        "defaultValue" : "new ArrayList<phoneNumberDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/phoneNumberDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hoursOfOperationText",

        "getter" : "getHoursOfOperationText",
        "setter" : "setHoursOfOperationText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hoursOfOperationText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hoursOfOperation",
        "complexType" : "hoursOfOperationDomain",
        "getter" : "getHoursOfOperation",
        "setter" : "setHoursOfOperation",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "hoursOfOperation",
        "defaultValue" : "new ArrayList<hoursOfOperationDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/hoursOfOperationDomain\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "phoneNumberDomain", "hoursOfOperationDomain", "string", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "termsAndConditionsDomain",
      "classname" : "TermsAndConditionsDomain",
      "classVarName" : "termsAndConditionsDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"instructions\" : {\n      \"type\" : \"string\"\n    },\n    \"knowBeforeYouGo\" : {\n      \"type\" : \"string\"\n    },\n    \"howToRedeem\" : {\n      \"type\" : \"string\"\n    },\n    \"terms\" : {\n      \"type\" : \"string\"\n    },\n    \"cancellationAddendum\" : {\n      \"type\" : \"string\"\n    },\n    \"generalDisclaimer\" : {\n      \"type\" : \"string\"\n    },\n    \"quebecResidentsIndemnityFund\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "instructions",

        "getter" : "getInstructions",
        "setter" : "setInstructions",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "instructions",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "knowBeforeYouGo",

        "getter" : "getKnowBeforeYouGo",
        "setter" : "setKnowBeforeYouGo",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "knowBeforeYouGo",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "howToRedeem",

        "getter" : "getHowToRedeem",
        "setter" : "setHowToRedeem",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "howToRedeem",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "terms",

        "getter" : "getTerms",
        "setter" : "setTerms",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "terms",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancellationAddendum",

        "getter" : "getCancellationAddendum",
        "setter" : "setCancellationAddendum",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cancellationAddendum",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "generalDisclaimer",

        "getter" : "getGeneralDisclaimer",
        "setter" : "setGeneralDisclaimer",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "generalDisclaimer",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "quebecResidentsIndemnityFund",

        "getter" : "getQuebecResidentsIndemnityFund",
        "setter" : "setQuebecResidentsIndemnityFund",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "quebecResidentsIndemnityFund",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "activityVoucherDomain",
      "classname" : "ActivityVoucherDomain",
      "classVarName" : "activityVoucherDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\"\n    },\n    \"barcodeNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"securityCode\" : {\n      \"type\" : \"string\"\n    },\n    \"barcodeImageURL\" : {\n      \"type\" : \"string\"\n    },\n    \"validForRedemerTypeLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"validForRedemerTypeEnglish\" : {\n      \"type\" : \"string\"\n    },\n    \"supplierReferenceCode\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "id",

        "getter" : "getId",
        "setter" : "setId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "id",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "barcodeNumber",

        "getter" : "getBarcodeNumber",
        "setter" : "setBarcodeNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "barcodeNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "securityCode",

        "getter" : "getSecurityCode",
        "setter" : "setSecurityCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "securityCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "barcodeImageURL",

        "getter" : "getBarcodeImageURL",
        "setter" : "setBarcodeImageURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "barcodeImageURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "validForRedemerTypeLocalized",

        "getter" : "getValidForRedemerTypeLocalized",
        "setter" : "setValidForRedemerTypeLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "validForRedemerTypeLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "validForRedemerTypeEnglish",

        "getter" : "getValidForRedemerTypeEnglish",
        "setter" : "setValidForRedemerTypeEnglish",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "validForRedemerTypeEnglish",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "supplierReferenceCode",

        "getter" : "getSupplierReferenceCode",
        "setter" : "setSupplierReferenceCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "supplierReferenceCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "pricePerPassengerDomain",
      "classname" : "PricePerPassengerDomain",
      "classVarName" : "pricePerPassengerDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"keyForCategory\" : {\n      \"type\" : \"string\"\n    },\n    \"numberOfPassengers\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"totalBasePrice\" : {\n      \"$ref\" : \"#/definitions/priceDomain\"\n    },\n    \"perPassengerBasePrice\" : {\n      \"$ref\" : \"#/definitions/priceDomain\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "keyForCategory",

        "getter" : "getKeyForCategory",
        "setter" : "setKeyForCategory",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "keyForCategory",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "numberOfPassengers",

        "getter" : "getNumberOfPassengers",
        "setter" : "setNumberOfPassengers",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "numberOfPassengers",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "totalBasePrice",
        "complexType" : "priceDomain",
        "getter" : "getTotalBasePrice",
        "setter" : "setTotalBasePrice",
        "datatype" : "priceDomain",
        "datatypeWithEnum" : "priceDomain",
        "name" : "totalBasePrice",
        "defaultValue" : "null",
        "baseType" : "priceDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/priceDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "perPassengerBasePrice",
        "complexType" : "priceDomain",
        "getter" : "getPerPassengerBasePrice",
        "setter" : "setPerPassengerBasePrice",
        "datatype" : "priceDomain",
        "datatypeWithEnum" : "priceDomain",
        "name" : "perPassengerBasePrice",
        "defaultValue" : "null",
        "baseType" : "priceDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/priceDomain\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "priceDomain", "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "localisePriceAndPassengerCountDomain",
      "classname" : "LocalisePriceAndPassengerCountDomain",
      "classVarName" : "localisePriceAndPassengerCountDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"totalBasePriceForSorting\" : {\n      \"$ref\" : \"#/definitions/priceDomain\"\n    },\n    \"localisedPassengerTypeAndCount\" : {\n      \"type\" : \"string\"\n    },\n    \"localisedPrice\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "totalBasePriceForSorting",
        "complexType" : "priceDomain",
        "getter" : "getTotalBasePriceForSorting",
        "setter" : "setTotalBasePriceForSorting",
        "datatype" : "priceDomain",
        "datatypeWithEnum" : "priceDomain",
        "name" : "totalBasePriceForSorting",
        "defaultValue" : "null",
        "baseType" : "priceDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/priceDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localisedPassengerTypeAndCount",

        "getter" : "getLocalisedPassengerTypeAndCount",
        "setter" : "setLocalisedPassengerTypeAndCount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localisedPassengerTypeAndCount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localisedPrice",

        "getter" : "getLocalisedPrice",
        "setter" : "setLocalisedPrice",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localisedPrice",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "priceDomain", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "activityFareDomain",
      "classname" : "ActivityFareDomain",
      "classVarName" : "activityFareDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"pricePerCategory\" : {\n      \"type\" : \"string\"\n    },\n    \"localisedPriceAndPassengerCount\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/localisePriceAndPassengerCountDomain\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "pricePerCategory",

        "getter" : "getPricePerCategory",
        "setter" : "setPricePerCategory",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "pricePerCategory",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localisedPriceAndPassengerCount",
        "complexType" : "localisePriceAndPassengerCountDomain",
        "getter" : "getLocalisedPriceAndPassengerCount",
        "setter" : "setLocalisedPriceAndPassengerCount",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "localisedPriceAndPassengerCount",
        "defaultValue" : "new ArrayList<localisePriceAndPassengerCountDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/localisePriceAndPassengerCountDomain\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "localisePriceAndPassengerCountDomain", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "activityDomain",
      "classname" : "ActivityDomain",
      "classVarName" : "activityDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"uniqueID\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatusText\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatusMessage\" : {\n      \"type\" : \"string\"\n    },\n    \"supplierReferenceNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingDate\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"startTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"endTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"paymentModel\" : {\n      \"type\" : \"string\"\n    },\n    \"price\" : {\n      \"$ref\" : \"#/definitions/activityFareDomain\"\n    },\n    \"activityTitle\" : {\n      \"type\" : \"string\"\n    },\n    \"activityDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"activityItemTitle\" : {\n      \"type\" : \"string\"\n    },\n    \"activityItemDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"activityItemTitleEnglish\" : {\n      \"type\" : \"string\"\n    },\n    \"activityDetailsURL\" : {\n      \"type\" : \"string\"\n    },\n    \"activityLocation\" : {\n      \"$ref\" : \"#/definitions/vendorLocationDomain\"\n    },\n    \"redemptionLocations\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/vendorLocationDomain\"\n      }\n    },\n    \"travelerCountDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"travelers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/activityTravelerFieldsDomain\"\n      }\n    },\n    \"vendorName\" : {\n      \"type\" : \"string\"\n    },\n    \"vendorCustomerServiceEmail\" : {\n      \"type\" : \"string\"\n    },\n    \"vendorCustomerServiceOffices\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/vendorCustomerServiceOfficeDomain\"\n      }\n    },\n    \"termsAndConditions\" : {\n      \"$ref\" : \"#/definitions/termsAndConditionsDomain\"\n    },\n    \"voucherPrintURL\" : {\n      \"type\" : \"string\"\n    },\n    \"vouchers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/activityVoucherDomain\"\n      }\n    },\n    \"sharableItemDetailURL\" : {\n      \"type\" : \"string\"\n    },\n    \"webGetLXCancelDetailPathURL\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "uniqueID",

        "getter" : "getUniqueID",
        "setter" : "setUniqueID",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "uniqueID",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatus",

        "getter" : "getBookingStatus",
        "setter" : "setBookingStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatusText",

        "getter" : "getBookingStatusText",
        "setter" : "setBookingStatusText",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatusText",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatusMessage",

        "getter" : "getBookingStatusMessage",
        "setter" : "setBookingStatusMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatusMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "supplierReferenceNumber",

        "getter" : "getSupplierReferenceNumber",
        "setter" : "setSupplierReferenceNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "supplierReferenceNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingDate",
        "complexType" : "timeDomain",
        "getter" : "getBookingDate",
        "setter" : "setBookingDate",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "bookingDate",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "startTime",
        "complexType" : "timeDomain",
        "getter" : "getStartTime",
        "setter" : "setStartTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "startTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "endTime",
        "complexType" : "timeDomain",
        "getter" : "getEndTime",
        "setter" : "setEndTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "endTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "paymentModel",

        "getter" : "getPaymentModel",
        "setter" : "setPaymentModel",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "paymentModel",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "price",
        "complexType" : "activityFareDomain",
        "getter" : "getPrice",
        "setter" : "setPrice",
        "datatype" : "activityFareDomain",
        "datatypeWithEnum" : "activityFareDomain",
        "name" : "price",
        "defaultValue" : "null",
        "baseType" : "activityFareDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/activityFareDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityTitle",

        "getter" : "getActivityTitle",
        "setter" : "setActivityTitle",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityTitle",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityDescription",

        "getter" : "getActivityDescription",
        "setter" : "setActivityDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityItemTitle",

        "getter" : "getActivityItemTitle",
        "setter" : "setActivityItemTitle",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityItemTitle",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityItemDescription",

        "getter" : "getActivityItemDescription",
        "setter" : "setActivityItemDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityItemDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityItemTitleEnglish",

        "getter" : "getActivityItemTitleEnglish",
        "setter" : "setActivityItemTitleEnglish",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityItemTitleEnglish",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityDetailsURL",

        "getter" : "getActivityDetailsURL",
        "setter" : "setActivityDetailsURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityDetailsURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityLocation",
        "complexType" : "vendorLocationDomain",
        "getter" : "getActivityLocation",
        "setter" : "setActivityLocation",
        "datatype" : "vendorLocationDomain",
        "datatypeWithEnum" : "vendorLocationDomain",
        "name" : "activityLocation",
        "defaultValue" : "null",
        "baseType" : "vendorLocationDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/vendorLocationDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "redemptionLocations",
        "complexType" : "vendorLocationDomain",
        "getter" : "getRedemptionLocations",
        "setter" : "setRedemptionLocations",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "redemptionLocations",
        "defaultValue" : "new ArrayList<vendorLocationDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/vendorLocationDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "travelerCountDescription",

        "getter" : "getTravelerCountDescription",
        "setter" : "setTravelerCountDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "travelerCountDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "travelers",
        "complexType" : "activityTravelerFieldsDomain",
        "getter" : "getTravelers",
        "setter" : "setTravelers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "travelers",
        "defaultValue" : "new ArrayList<activityTravelerFieldsDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/activityTravelerFieldsDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "vendorName",

        "getter" : "getVendorName",
        "setter" : "setVendorName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "vendorName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "vendorCustomerServiceEmail",

        "getter" : "getVendorCustomerServiceEmail",
        "setter" : "setVendorCustomerServiceEmail",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "vendorCustomerServiceEmail",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "vendorCustomerServiceOffices",
        "complexType" : "vendorCustomerServiceOfficeDomain",
        "getter" : "getVendorCustomerServiceOffices",
        "setter" : "setVendorCustomerServiceOffices",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "vendorCustomerServiceOffices",
        "defaultValue" : "new ArrayList<vendorCustomerServiceOfficeDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/vendorCustomerServiceOfficeDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "termsAndConditions",
        "complexType" : "termsAndConditionsDomain",
        "getter" : "getTermsAndConditions",
        "setter" : "setTermsAndConditions",
        "datatype" : "termsAndConditionsDomain",
        "datatypeWithEnum" : "termsAndConditionsDomain",
        "name" : "termsAndConditions",
        "defaultValue" : "null",
        "baseType" : "termsAndConditionsDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/termsAndConditionsDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "voucherPrintURL",

        "getter" : "getVoucherPrintURL",
        "setter" : "setVoucherPrintURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "voucherPrintURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "vouchers",
        "complexType" : "activityVoucherDomain",
        "getter" : "getVouchers",
        "setter" : "setVouchers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "vouchers",
        "defaultValue" : "new ArrayList<activityVoucherDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/activityVoucherDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "sharableItemDetailURL",

        "getter" : "getSharableItemDetailURL",
        "setter" : "setSharableItemDetailURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "sharableItemDetailURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "webGetLXCancelDetailPathURL",

        "getter" : "getWebGetLXCancelDetailPathURL",
        "setter" : "setWebGetLXCancelDetailPathURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "webGetLXCancelDetailPathURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "activityFareDomain", "vendorLocationDomain", "string", "vendorCustomerServiceOfficeDomain", "termsAndConditionsDomain", "activityVoucherDomain", "activityTravelerFieldsDomain", "List", "array", "timeDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "packagePriceDomain",
      "classname" : "PackagePriceDomain",
      "classVarName" : "packagePriceDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"currency\" : {\n      \"type\" : \"string\"\n    },\n    \"subTotal\" : {\n      \"type\" : \"string\"\n    },\n    \"subTotalFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"taxesAndFees\" : {\n      \"type\" : \"string\"\n    },\n    \"taxesAndFeesFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"insurance\" : {\n      \"type\" : \"string\"\n    },\n    \"insuranceFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"coupon\" : {\n      \"type\" : \"string\"\n    },\n    \"couponFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"obfee\" : {\n      \"type\" : \"string\"\n    },\n    \"obfeeFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"total\" : {\n      \"type\" : \"string\"\n    },\n    \"totalFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"savings\" : {\n      \"type\" : \"string\"\n    },\n    \"savingsFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingFee\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingFeeFormatted\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "currency",

        "getter" : "getCurrency",
        "setter" : "setCurrency",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currency",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "subTotal",

        "getter" : "getSubTotal",
        "setter" : "setSubTotal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "subTotal",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "subTotalFormatted",

        "getter" : "getSubTotalFormatted",
        "setter" : "setSubTotalFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "subTotalFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxesAndFees",

        "getter" : "getTaxesAndFees",
        "setter" : "setTaxesAndFees",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "taxesAndFees",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "taxesAndFeesFormatted",

        "getter" : "getTaxesAndFeesFormatted",
        "setter" : "setTaxesAndFeesFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "taxesAndFeesFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "insurance",

        "getter" : "getInsurance",
        "setter" : "setInsurance",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "insurance",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "insuranceFormatted",

        "getter" : "getInsuranceFormatted",
        "setter" : "setInsuranceFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "insuranceFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "coupon",

        "getter" : "getCoupon",
        "setter" : "setCoupon",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "coupon",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "couponFormatted",

        "getter" : "getCouponFormatted",
        "setter" : "setCouponFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "couponFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "obfee",

        "getter" : "getObfee",
        "setter" : "setObfee",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "obfee",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "obfeeFormatted",

        "getter" : "getObfeeFormatted",
        "setter" : "setObfeeFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "obfeeFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "total",

        "getter" : "getTotal",
        "setter" : "setTotal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "total",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalFormatted",

        "getter" : "getTotalFormatted",
        "setter" : "setTotalFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "savings",

        "getter" : "getSavings",
        "setter" : "setSavings",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "savings",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "savingsFormatted",

        "getter" : "getSavingsFormatted",
        "setter" : "setSavingsFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "savingsFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingFee",

        "getter" : "getBookingFee",
        "setter" : "setBookingFee",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingFee",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingFeeFormatted",

        "getter" : "getBookingFeeFormatted",
        "setter" : "setBookingFeeFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingFeeFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "packageDomain",
      "classname" : "PackageDomain",
      "classVarName" : "packageDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"uniqueID\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"orderNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"orderLineNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"isChangeable\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isLegacy\" : {\n      \"type\" : \"boolean\"\n    },\n    \"price\" : {\n      \"$ref\" : \"#/definitions/packagePriceDomain\"\n    },\n    \"flights\" : {\n      \"$ref\" : \"#/definitions/flightDomain\"\n    },\n    \"hotels\" : {\n      \"$ref\" : \"#/definitions/hotelDomain\"\n    },\n    \"activities\" : {\n      \"$ref\" : \"#/definitions/activityDomain\"\n    },\n    \"cars\" : {\n      \"$ref\" : \"#/definitions/carDomain\"\n    },\n    \"startDate\" : {\n      \"type\" : \"string\"\n    },\n    \"endDate\" : {\n      \"type\" : \"string\"\n    },\n    \"startTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"endTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "uniqueID",

        "getter" : "getUniqueID",
        "setter" : "setUniqueID",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "uniqueID",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatus",

        "getter" : "getBookingStatus",
        "setter" : "setBookingStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderNumber",

        "getter" : "getOrderNumber",
        "setter" : "setOrderNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderLineNumber",

        "getter" : "getOrderLineNumber",
        "setter" : "setOrderLineNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderLineNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isChangeable",

        "getter" : "getIsChangeable",
        "setter" : "setIsChangeable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isChangeable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isLegacy",

        "getter" : "getIsLegacy",
        "setter" : "setIsLegacy",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isLegacy",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "price",
        "complexType" : "packagePriceDomain",
        "getter" : "getPrice",
        "setter" : "setPrice",
        "datatype" : "packagePriceDomain",
        "datatypeWithEnum" : "packagePriceDomain",
        "name" : "price",
        "defaultValue" : "null",
        "baseType" : "packagePriceDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/packagePriceDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flights",
        "complexType" : "flightDomain",
        "getter" : "getFlights",
        "setter" : "setFlights",
        "datatype" : "flightDomain",
        "datatypeWithEnum" : "flightDomain",
        "name" : "flights",
        "defaultValue" : "null",
        "baseType" : "flightDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/flightDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotels",
        "complexType" : "hotelDomain",
        "getter" : "getHotels",
        "setter" : "setHotels",
        "datatype" : "hotelDomain",
        "datatypeWithEnum" : "hotelDomain",
        "name" : "hotels",
        "defaultValue" : "null",
        "baseType" : "hotelDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/hotelDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activities",
        "complexType" : "activityDomain",
        "getter" : "getActivities",
        "setter" : "setActivities",
        "datatype" : "activityDomain",
        "datatypeWithEnum" : "activityDomain",
        "name" : "activities",
        "defaultValue" : "null",
        "baseType" : "activityDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/activityDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cars",
        "complexType" : "carDomain",
        "getter" : "getCars",
        "setter" : "setCars",
        "datatype" : "carDomain",
        "datatypeWithEnum" : "carDomain",
        "name" : "cars",
        "defaultValue" : "null",
        "baseType" : "carDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/carDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "startDate",

        "getter" : "getStartDate",
        "setter" : "setStartDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "startDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "endDate",

        "getter" : "getEndDate",
        "setter" : "setEndDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "endDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "startTime",
        "complexType" : "timeDomain",
        "getter" : "getStartTime",
        "setter" : "setStartTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "startTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "endTime",
        "complexType" : "timeDomain",
        "getter" : "getEndTime",
        "setter" : "setEndTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "endTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "hotelDomain", "packagePriceDomain", "string", "carDomain", "timeDomain", "activityDomain", "flightDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "generalComponentDomain",
      "classname" : "GeneralComponentDomain",
      "classVarName" : "generalComponentDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"comment\" : {\n      \"type\" : \"string\"\n    },\n    \"startDate\" : {\n      \"type\" : \"string\",\n      \"format\" : \"date\"\n    },\n    \"endDate\" : {\n      \"type\" : \"string\",\n      \"format\" : \"date\"\n    },\n    \"bookingStatus\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "comment",

        "getter" : "getComment",
        "setter" : "setComment",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "comment",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "startDate",
        "complexType" : "date",
        "getter" : "getStartDate",
        "setter" : "setStartDate",
        "datatype" : "date",
        "datatypeWithEnum" : "date",
        "name" : "startDate",
        "defaultValue" : "null",
        "baseType" : "date",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"date\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "endDate",
        "complexType" : "date",
        "getter" : "getEndDate",
        "setter" : "setEndDate",
        "datatype" : "date",
        "datatypeWithEnum" : "date",
        "name" : "endDate",
        "defaultValue" : "null",
        "baseType" : "date",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"date\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatus",

        "getter" : "getBookingStatus",
        "setter" : "setBookingStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "date" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "promotionDomain",
      "classname" : "PromotionDomain",
      "classVarName" : "promotionDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"promotionId\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"promotionCode\" : {\n      \"type\" : \"string\"\n    },\n    \"campaignId\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"name\" : {\n      \"type\" : \"string\"\n    },\n    \"cruiseCardName\" : {\n      \"type\" : \"string\"\n    },\n    \"fullDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"shortDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"termsAndConditions\" : {\n      \"type\" : \"string\"\n    },\n    \"rank\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "promotionId",

        "getter" : "getPromotionId",
        "setter" : "setPromotionId",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "promotionId",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "promotionCode",

        "getter" : "getPromotionCode",
        "setter" : "setPromotionCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "promotionCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "campaignId",

        "getter" : "getCampaignId",
        "setter" : "setCampaignId",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "campaignId",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "name",

        "getter" : "getName",
        "setter" : "setName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "name",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cruiseCardName",

        "getter" : "getCruiseCardName",
        "setter" : "setCruiseCardName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cruiseCardName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fullDescription",

        "getter" : "getFullDescription",
        "setter" : "setFullDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "fullDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "shortDescription",

        "getter" : "getShortDescription",
        "setter" : "setShortDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "shortDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "termsAndConditions",

        "getter" : "getTermsAndConditions",
        "setter" : "setTermsAndConditions",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "termsAndConditions",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rank",

        "getter" : "getRank",
        "setter" : "setRank",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "rank",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      } ],
      "imports" : [ "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "passengerCruiseDomain",
      "classname" : "PassengerCruiseDomain",
      "classVarName" : "passengerCruiseDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"passengerNumber\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"titleCode\" : {\n      \"type\" : \"string\"\n    },\n    \"firstName\" : {\n      \"type\" : \"string\"\n    },\n    \"middleName\" : {\n      \"type\" : \"string\"\n    },\n    \"lastName\" : {\n      \"type\" : \"string\"\n    },\n    \"birthDate\" : {\n      \"type\" : \"string\"\n    },\n    \"gender\" : {\n      \"type\" : \"string\"\n    },\n    \"citizenship\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "passengerNumber",

        "getter" : "getPassengerNumber",
        "setter" : "setPassengerNumber",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "passengerNumber",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "titleCode",

        "getter" : "getTitleCode",
        "setter" : "setTitleCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "titleCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "firstName",

        "getter" : "getFirstName",
        "setter" : "setFirstName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "middleName",

        "getter" : "getMiddleName",
        "setter" : "setMiddleName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "middleName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lastName",

        "getter" : "getLastName",
        "setter" : "setLastName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "lastName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "birthDate",

        "getter" : "getBirthDate",
        "setter" : "setBirthDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "birthDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "gender",

        "getter" : "getGender",
        "setter" : "setGender",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "gender",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "citizenship",

        "getter" : "getCitizenship",
        "setter" : "setCitizenship",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "citizenship",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "pricingSummaryDomain",
      "classname" : "PricingSummaryDomain",
      "classVarName" : "pricingSummaryDomain",
      "modelJson" : "{ }",
      "vars" : [ ],
      "imports" : [ ],
      "emptyVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "paymentHistoryDomain",
      "classname" : "PaymentHistoryDomain",
      "classVarName" : "paymentHistoryDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"totalAmountReceivedInd\" : {\n      \"type\" : \"string\"\n    },\n    \"currency\" : {\n      \"type\" : \"string\"\n    },\n    \"finalPaymentDueDate\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "totalAmountReceivedInd",

        "getter" : "getTotalAmountReceivedInd",
        "setter" : "setTotalAmountReceivedInd",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalAmountReceivedInd",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currency",

        "getter" : "getCurrency",
        "setter" : "setCurrency",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currency",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "finalPaymentDueDate",

        "getter" : "getFinalPaymentDueDate",
        "setter" : "setFinalPaymentDueDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "finalPaymentDueDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "cruiseDomain",
      "classname" : "CruiseDomain",
      "classVarName" : "cruiseDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"bookingStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"invoiceNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"cruiseLineName\" : {\n      \"type\" : \"string\"\n    },\n    \"shipName\" : {\n      \"type\" : \"string\"\n    },\n    \"departureDate\" : {\n      \"type\" : \"string\"\n    },\n    \"returnDate\" : {\n      \"type\" : \"string\"\n    },\n    \"promotions\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/promotionDomain\"\n      }\n    },\n    \"pricingSummary\" : {\n      \"$ref\" : \"#/definitions/pricingSummaryDomain\"\n    },\n    \"cruiseLineBkgConfNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"adultPassengers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/passengerCruiseDomain\"\n      }\n    },\n    \"childPassengers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/passengerCruiseDomain\"\n      }\n    },\n    \"cabinDetails\" : {\n      \"type\" : \"string\"\n    },\n    \"email\" : {\n      \"type\" : \"string\"\n    },\n    \"customerCareNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"rulesAndRestrictionsLink\" : {\n      \"type\" : \"string\"\n    },\n    \"cruiseLineWebsiteLink\" : {\n      \"type\" : \"string\"\n    },\n    \"paymentHistory\" : {\n      \"$ref\" : \"#/definitions/paymentHistoryDomain\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "bookingStatus",

        "getter" : "getBookingStatus",
        "setter" : "setBookingStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "invoiceNumber",

        "getter" : "getInvoiceNumber",
        "setter" : "setInvoiceNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "invoiceNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cruiseLineName",

        "getter" : "getCruiseLineName",
        "setter" : "setCruiseLineName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cruiseLineName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "shipName",

        "getter" : "getShipName",
        "setter" : "setShipName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "shipName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "departureDate",

        "getter" : "getDepartureDate",
        "setter" : "setDepartureDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "departureDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "returnDate",

        "getter" : "getReturnDate",
        "setter" : "setReturnDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "returnDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "promotions",
        "complexType" : "promotionDomain",
        "getter" : "getPromotions",
        "setter" : "setPromotions",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "promotions",
        "defaultValue" : "new ArrayList<promotionDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/promotionDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "pricingSummary",
        "complexType" : "pricingSummaryDomain",
        "getter" : "getPricingSummary",
        "setter" : "setPricingSummary",
        "datatype" : "pricingSummaryDomain",
        "datatypeWithEnum" : "pricingSummaryDomain",
        "name" : "pricingSummary",
        "defaultValue" : "null",
        "baseType" : "pricingSummaryDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/pricingSummaryDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cruiseLineBkgConfNumber",

        "getter" : "getCruiseLineBkgConfNumber",
        "setter" : "setCruiseLineBkgConfNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cruiseLineBkgConfNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adultPassengers",
        "complexType" : "passengerCruiseDomain",
        "getter" : "getAdultPassengers",
        "setter" : "setAdultPassengers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "adultPassengers",
        "defaultValue" : "new ArrayList<passengerCruiseDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/passengerCruiseDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "childPassengers",
        "complexType" : "passengerCruiseDomain",
        "getter" : "getChildPassengers",
        "setter" : "setChildPassengers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "childPassengers",
        "defaultValue" : "new ArrayList<passengerCruiseDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/passengerCruiseDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cabinDetails",

        "getter" : "getCabinDetails",
        "setter" : "setCabinDetails",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cabinDetails",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "email",

        "getter" : "getEmail",
        "setter" : "setEmail",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "email",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "customerCareNumber",

        "getter" : "getCustomerCareNumber",
        "setter" : "setCustomerCareNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "customerCareNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rulesAndRestrictionsLink",

        "getter" : "getRulesAndRestrictionsLink",
        "setter" : "setRulesAndRestrictionsLink",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "rulesAndRestrictionsLink",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cruiseLineWebsiteLink",

        "getter" : "getCruiseLineWebsiteLink",
        "setter" : "setCruiseLineWebsiteLink",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cruiseLineWebsiteLink",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "paymentHistory",
        "complexType" : "paymentHistoryDomain",
        "getter" : "getPaymentHistory",
        "setter" : "setPaymentHistory",
        "datatype" : "paymentHistoryDomain",
        "datatypeWithEnum" : "paymentHistoryDomain",
        "name" : "paymentHistory",
        "defaultValue" : "null",
        "baseType" : "paymentHistoryDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/paymentHistoryDomain\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "paymentHistoryDomain", "string", "pricingSummaryDomain", "List", "promotionDomain", "passengerCruiseDomain", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "simplifiedTripDomain",
      "classname" : "SimplifiedTripDomain",
      "classVarName" : "simplifiedTripDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"levelOfDetail\" : {\n      \"type\" : \"string\"\n    },\n    \"tripId\" : {\n      \"type\" : \"string\"\n    },\n    \"apiDetailsURL\" : {\n      \"type\" : \"string\"\n    },\n    \"webDetailsURL\" : {\n      \"type\" : \"string\"\n    },\n    \"title\" : {\n      \"type\" : \"string\"\n    },\n    \"description\" : {\n      \"type\" : \"string\"\n    },\n    \"updateTripNameDescPathURL\" : {\n      \"type\" : \"string\"\n    },\n    \"startTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"endTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"tripCreatedTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"tripUpdatedTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"tripCacheUpdatedTime\" : {\n      \"$ref\" : \"#/definitions/timeDomain\"\n    },\n    \"startDate\" : {\n      \"type\" : \"string\"\n    },\n    \"endDate\" : {\n      \"type\" : \"string\"\n    },\n    \"startDateLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"endDateLocalized\" : {\n      \"type\" : \"string\"\n    },\n    \"bookingStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"timePeriod\" : {\n      \"type\" : \"string\"\n    },\n    \"rewards\" : {\n      \"$ref\" : \"#/definitions/rewardsDomain\"\n    },\n    \"sharableDetailsURL\" : {\n      \"type\" : \"string\"\n    },\n    \"customerSupport\" : {\n      \"$ref\" : \"#/definitions/customerSupportDomain\"\n    },\n    \"isBookedUsingForeignCurrency\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hotels\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/hotelDomain\"\n      }\n    },\n    \"flights\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/flightDomain\"\n      }\n    },\n    \"cars\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/carDomain\"\n      }\n    },\n    \"activities\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/activityDomain\"\n      }\n    },\n    \"packages\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/packageDomain\"\n      }\n    },\n    \"insurance\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/generalComponentDomain\"\n      }\n    },\n    \"cruises\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/cruiseDomain\"\n      }\n    },\n    \"externalCruises\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/cruiseDomain\"\n      }\n    },\n    \"trains\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/generalComponentDomain\"\n      }\n    },\n    \"readTripError\" : {\n      \"$ref\" : \"#/definitions/boolean\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "levelOfDetail",

        "getter" : "getLevelOfDetail",
        "setter" : "setLevelOfDetail",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "levelOfDetail",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tripId",

        "getter" : "getTripId",
        "setter" : "setTripId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tripId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "apiDetailsURL",

        "getter" : "getApiDetailsURL",
        "setter" : "setApiDetailsURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "apiDetailsURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "webDetailsURL",

        "getter" : "getWebDetailsURL",
        "setter" : "setWebDetailsURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "webDetailsURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "title",

        "getter" : "getTitle",
        "setter" : "setTitle",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "title",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "description",

        "getter" : "getDescription",
        "setter" : "setDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "description",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "updateTripNameDescPathURL",

        "getter" : "getUpdateTripNameDescPathURL",
        "setter" : "setUpdateTripNameDescPathURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "updateTripNameDescPathURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "startTime",
        "complexType" : "timeDomain",
        "getter" : "getStartTime",
        "setter" : "setStartTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "startTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "endTime",
        "complexType" : "timeDomain",
        "getter" : "getEndTime",
        "setter" : "setEndTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "endTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tripCreatedTime",
        "complexType" : "timeDomain",
        "getter" : "getTripCreatedTime",
        "setter" : "setTripCreatedTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "tripCreatedTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tripUpdatedTime",
        "complexType" : "timeDomain",
        "getter" : "getTripUpdatedTime",
        "setter" : "setTripUpdatedTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "tripUpdatedTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tripCacheUpdatedTime",
        "complexType" : "timeDomain",
        "getter" : "getTripCacheUpdatedTime",
        "setter" : "setTripCacheUpdatedTime",
        "datatype" : "timeDomain",
        "datatypeWithEnum" : "timeDomain",
        "name" : "tripCacheUpdatedTime",
        "defaultValue" : "null",
        "baseType" : "timeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/timeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "startDate",

        "getter" : "getStartDate",
        "setter" : "setStartDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "startDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "endDate",

        "getter" : "getEndDate",
        "setter" : "setEndDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "endDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "startDateLocalized",

        "getter" : "getStartDateLocalized",
        "setter" : "setStartDateLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "startDateLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "endDateLocalized",

        "getter" : "getEndDateLocalized",
        "setter" : "setEndDateLocalized",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "endDateLocalized",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bookingStatus",

        "getter" : "getBookingStatus",
        "setter" : "setBookingStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bookingStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "timePeriod",

        "getter" : "getTimePeriod",
        "setter" : "setTimePeriod",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "timePeriod",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rewards",
        "complexType" : "rewardsDomain",
        "getter" : "getRewards",
        "setter" : "setRewards",
        "datatype" : "rewardsDomain",
        "datatypeWithEnum" : "rewardsDomain",
        "name" : "rewards",
        "defaultValue" : "null",
        "baseType" : "rewardsDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/rewardsDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "sharableDetailsURL",

        "getter" : "getSharableDetailsURL",
        "setter" : "setSharableDetailsURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "sharableDetailsURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "customerSupport",
        "complexType" : "customerSupportDomain",
        "getter" : "getCustomerSupport",
        "setter" : "setCustomerSupport",
        "datatype" : "customerSupportDomain",
        "datatypeWithEnum" : "customerSupportDomain",
        "name" : "customerSupport",
        "defaultValue" : "null",
        "baseType" : "customerSupportDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/customerSupportDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isBookedUsingForeignCurrency",

        "getter" : "getIsBookedUsingForeignCurrency",
        "setter" : "setIsBookedUsingForeignCurrency",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isBookedUsingForeignCurrency",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotels",
        "complexType" : "hotelDomain",
        "getter" : "getHotels",
        "setter" : "setHotels",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "hotels",
        "defaultValue" : "new ArrayList<hotelDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/hotelDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flights",
        "complexType" : "flightDomain",
        "getter" : "getFlights",
        "setter" : "setFlights",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "flights",
        "defaultValue" : "new ArrayList<flightDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/flightDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cars",
        "complexType" : "carDomain",
        "getter" : "getCars",
        "setter" : "setCars",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "cars",
        "defaultValue" : "new ArrayList<carDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/carDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activities",
        "complexType" : "activityDomain",
        "getter" : "getActivities",
        "setter" : "setActivities",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "activities",
        "defaultValue" : "new ArrayList<activityDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/activityDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "packages",
        "complexType" : "packageDomain",
        "getter" : "getPackages",
        "setter" : "setPackages",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "packages",
        "defaultValue" : "new ArrayList<packageDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/packageDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "insurance",
        "complexType" : "generalComponentDomain",
        "getter" : "getInsurance",
        "setter" : "setInsurance",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "insurance",
        "defaultValue" : "new ArrayList<generalComponentDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/generalComponentDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cruises",
        "complexType" : "cruiseDomain",
        "getter" : "getCruises",
        "setter" : "setCruises",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "cruises",
        "defaultValue" : "new ArrayList<cruiseDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/cruiseDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "externalCruises",
        "complexType" : "cruiseDomain",
        "getter" : "getExternalCruises",
        "setter" : "setExternalCruises",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "externalCruises",
        "defaultValue" : "new ArrayList<cruiseDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/cruiseDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "trains",
        "complexType" : "generalComponentDomain",
        "getter" : "getTrains",
        "setter" : "setTrains",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "trains",
        "defaultValue" : "new ArrayList<generalComponentDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/generalComponentDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "readTripError",

        "getter" : "getReadTripError",
        "setter" : "setReadTripError",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "readTripError",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/boolean\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "rewardsDomain", "generalComponentDomain", "hotelDomain", "cruiseDomain", "string", "carDomain", "customerSupportDomain", "List", "packageDomain", "activityDomain", "flightDomain", "array", "timeDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "productTypeDomain",
      "classname" : "ProductTypeDomain",
      "classVarName" : "productTypeDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"m_productType\" : {\n      \"type\" : \"string\"\n    },\n    \"travelocityType\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "m_productType",

        "getter" : "getM_productType",
        "setter" : "setM_productType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "m_productType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "travelocityType",

        "getter" : "getTravelocityType",
        "setter" : "setTravelocityType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "travelocityType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "userErrorMessageDomain",
      "classname" : "UserErrorMessageDomain",
      "classVarName" : "userErrorMessageDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"hasPageLevelError\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hasModuleLevelError\" : {\n      \"type\" : \"boolean\"\n    },\n    \"pageLevelErrorMessage\" : {\n      \"type\" : \"string\"\n    },\n    \"moduleLevelErrorMessage\" : {\n      \"type\" : \"string\"\n    },\n    \"moduleName\" : {\n      \"type\" : \"string\"\n    },\n    \"errorKey\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "hasPageLevelError",

        "getter" : "getHasPageLevelError",
        "setter" : "setHasPageLevelError",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasPageLevelError",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hasModuleLevelError",

        "getter" : "getHasModuleLevelError",
        "setter" : "setHasModuleLevelError",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "hasModuleLevelError",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "pageLevelErrorMessage",

        "getter" : "getPageLevelErrorMessage",
        "setter" : "setPageLevelErrorMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "pageLevelErrorMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "moduleLevelErrorMessage",

        "getter" : "getModuleLevelErrorMessage",
        "setter" : "setModuleLevelErrorMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "moduleLevelErrorMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "moduleName",

        "getter" : "getModuleName",
        "setter" : "setModuleName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "moduleName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errorKey",

        "getter" : "getErrorKey",
        "setter" : "setErrorKey",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "errorKey",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "priceChangeResponseDomain",
      "classname" : "PriceChangeResponseDomain",
      "classVarName" : "priceChangeResponseDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"priceIncreased\" : {\n      \"type\" : \"boolean\"\n    },\n    \"previousTotalPrice\" : {\n      \"$ref\" : \"#/definitions/priceDomain\"\n    },\n    \"previousTotal\" : {\n      \"type\" : \"string\"\n    },\n    \"previousTotalFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"newTotalPrice\" : {\n      \"$ref\" : \"#/definitions/priceDomain\"\n    },\n    \"newTotal\" : {\n      \"type\" : \"string\"\n    },\n    \"newTotalFormatted\" : {\n      \"type\" : \"string\"\n    },\n    \"productType\" : {\n      \"$ref\" : \"#/definitions/productTypeDomain\"\n    },\n    \"rateInfo\" : {\n      \"$ref\" : \"#/definitions/lodgingPriceDetailsDomain\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "priceIncreased",

        "getter" : "getPriceIncreased",
        "setter" : "setPriceIncreased",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "priceIncreased",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "previousTotalPrice",
        "complexType" : "priceDomain",
        "getter" : "getPreviousTotalPrice",
        "setter" : "setPreviousTotalPrice",
        "datatype" : "priceDomain",
        "datatypeWithEnum" : "priceDomain",
        "name" : "previousTotalPrice",
        "defaultValue" : "null",
        "baseType" : "priceDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/priceDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "previousTotal",

        "getter" : "getPreviousTotal",
        "setter" : "setPreviousTotal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "previousTotal",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "previousTotalFormatted",

        "getter" : "getPreviousTotalFormatted",
        "setter" : "setPreviousTotalFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "previousTotalFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "newTotalPrice",
        "complexType" : "priceDomain",
        "getter" : "getNewTotalPrice",
        "setter" : "setNewTotalPrice",
        "datatype" : "priceDomain",
        "datatypeWithEnum" : "priceDomain",
        "name" : "newTotalPrice",
        "defaultValue" : "null",
        "baseType" : "priceDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/priceDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "newTotal",

        "getter" : "getNewTotal",
        "setter" : "setNewTotal",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "newTotal",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "newTotalFormatted",

        "getter" : "getNewTotalFormatted",
        "setter" : "setNewTotalFormatted",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "newTotalFormatted",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "productType",
        "complexType" : "productTypeDomain",
        "getter" : "getProductType",
        "setter" : "setProductType",
        "datatype" : "productTypeDomain",
        "datatypeWithEnum" : "productTypeDomain",
        "name" : "productType",
        "defaultValue" : "null",
        "baseType" : "productTypeDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/productTypeDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rateInfo",
        "complexType" : "lodgingPriceDetailsDomain",
        "getter" : "getRateInfo",
        "setter" : "setRateInfo",
        "datatype" : "lodgingPriceDetailsDomain",
        "datatypeWithEnum" : "lodgingPriceDetailsDomain",
        "name" : "rateInfo",
        "defaultValue" : "null",
        "baseType" : "lodgingPriceDetailsDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/lodgingPriceDetailsDomain\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "priceDomain", "productTypeDomain", "string", "lodgingPriceDetailsDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "changeErrorResponseDomain",
      "classname" : "ChangeErrorResponseDomain",
      "classVarName" : "changeErrorResponseDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"serviceErrorCode\" : {\n      \"type\" : \"string\"\n    },\n    \"userErrorMessage\" : {\n      \"$ref\" : \"#/definitions/userErrorMessageDomain\"\n    },\n    \"priceChangeResponse\" : {\n      \"$ref\" : \"#/definitions/priceChangeResponseDomain\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "serviceErrorCode",

        "getter" : "getServiceErrorCode",
        "setter" : "setServiceErrorCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "serviceErrorCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "userErrorMessage",
        "complexType" : "userErrorMessageDomain",
        "getter" : "getUserErrorMessage",
        "setter" : "setUserErrorMessage",
        "datatype" : "userErrorMessageDomain",
        "datatypeWithEnum" : "userErrorMessageDomain",
        "name" : "userErrorMessage",
        "defaultValue" : "null",
        "baseType" : "userErrorMessageDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/userErrorMessageDomain\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "priceChangeResponse",
        "complexType" : "priceChangeResponseDomain",
        "getter" : "getPriceChangeResponse",
        "setter" : "setPriceChangeResponse",
        "datatype" : "priceChangeResponseDomain",
        "datatypeWithEnum" : "priceChangeResponseDomain",
        "name" : "priceChangeResponse",
        "defaultValue" : "null",
        "baseType" : "priceChangeResponseDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/priceChangeResponseDomain\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "priceChangeResponseDomain", "string", "userErrorMessageDomain" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "errorDomain",
      "classname" : "ErrorDomain",
      "classVarName" : "errorDomain",
      "modelJson" : "{\n  \"properties\" : {\n    \"errorCode\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"message\" : {\n      \"type\" : \"string\"\n    },\n    \"stackTrace\" : {\n      \"type\" : \"string\"\n    },\n    \"errorCategory\" : {\n      \"type\" : \"string\"\n    },\n    \"errorType\" : {\n      \"type\" : \"string\"\n    },\n    \"fields\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"changeErrorResponse\" : {\n      \"$ref\" : \"#/definitions/changeErrorResponseDomain\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "errorCode",

        "getter" : "getErrorCode",
        "setter" : "setErrorCode",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "errorCode",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "message",

        "getter" : "getMessage",
        "setter" : "setMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "message",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "stackTrace",

        "getter" : "getStackTrace",
        "setter" : "setStackTrace",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "stackTrace",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errorCategory",

        "getter" : "getErrorCategory",
        "setter" : "setErrorCategory",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "errorCategory",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errorType",

        "getter" : "getErrorType",
        "setter" : "setErrorType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "errorType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "fields",

        "getter" : "getFields",
        "setter" : "setFields",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "fields",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "changeErrorResponse",
        "complexType" : "changeErrorResponseDomain",
        "getter" : "getChangeErrorResponse",
        "setter" : "setChangeErrorResponse",
        "datatype" : "changeErrorResponseDomain",
        "datatypeWithEnum" : "changeErrorResponseDomain",
        "name" : "changeErrorResponse",
        "defaultValue" : "null",
        "baseType" : "changeErrorResponseDomain",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/changeErrorResponseDomain\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "string", "changeErrorResponseDomain", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "flightSearchResponse",
      "classname" : "FlightSearchResponse",
      "classVarName" : "flightSearchResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"legs\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/flightLegJson\"\n      }\n    },\n    \"offers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/flightOfferJson\"\n      }\n    },\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"searchCities\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/searchCityJson\"\n      }\n    },\n    \"obFeesDetails\" : {\n      \"type\" : \"string\"\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    },\n    \"percentDelaysCancellationsURL\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "legs",
        "complexType" : "flightLegJson",
        "getter" : "getLegs",
        "setter" : "setLegs",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "legs",
        "defaultValue" : "new ArrayList<flightLegJson>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/flightLegJson\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "offers",
        "complexType" : "flightOfferJson",
        "getter" : "getOffers",
        "setter" : "setOffers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "offers",
        "defaultValue" : "new ArrayList<flightOfferJson>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/flightOfferJson\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "searchCities",
        "complexType" : "searchCityJson",
        "getter" : "getSearchCities",
        "setter" : "setSearchCities",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "searchCities",
        "defaultValue" : "new ArrayList<searchCityJson>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/searchCityJson\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "obFeesDetails",

        "getter" : "getObFeesDetails",
        "setter" : "setObFeesDetails",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "obFeesDetails",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "percentDelaysCancellationsURL",

        "getter" : "getPercentDelaysCancellationsURL",
        "setter" : "setPercentDelaysCancellationsURL",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "percentDelaysCancellationsURL",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "searchCityJson", "flightOfferJson", "string", "flightLegJson", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "apiCreateTripResponse",
      "classname" : "ApiCreateTripResponse",
      "classVarName" : "apiCreateTripResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"newTrip\" : {\n      \"$ref\" : \"#/definitions/apiNewTrip\"\n    },\n    \"passengerCategories\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"totalPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"couponDiscount\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"details\" : {\n      \"$ref\" : \"#/definitions/flightDetailJsonResponse\"\n    },\n    \"rules\" : {\n      \"$ref\" : \"#/definitions/flightDetailedRulesJson\"\n    },\n    \"validFormsOfPayment\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/apiPaymentOptionJson\"\n      }\n    },\n    \"rewardsPoints\" : {\n      \"type\" : \"boolean\"\n    },\n    \"isCustomerTitleRequired\" : {\n      \"type\" : \"string\"\n    },\n    \"expediaRewards\" : {\n      \"$ref\" : \"#/definitions/expediaRewardsForTripJson\"\n    },\n    \"availableInsuranceProducts\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/insurance\"\n      }\n    },\n    \"selectedInsuranceProduct\" : {\n      \"$ref\" : \"#/definitions/insurance\"\n    },\n    \"coupon\" : {\n      \"$ref\" : \"#/definitions/mobileCoupon\"\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    },\n    \"tealeafTransactionId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "newTrip",
        "complexType" : "apiNewTrip",
        "getter" : "getNewTrip",
        "setter" : "setNewTrip",
        "datatype" : "apiNewTrip",
        "datatypeWithEnum" : "apiNewTrip",
        "name" : "newTrip",
        "defaultValue" : "null",
        "baseType" : "apiNewTrip",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/apiNewTrip\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "passengerCategories",

        "getter" : "getPassengerCategories",
        "setter" : "setPassengerCategories",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "passengerCategories",
        "defaultValue" : "new ArrayList<string>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalPrice",
        "complexType" : "mobilePrice",
        "getter" : "getTotalPrice",
        "setter" : "setTotalPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "couponDiscount",
        "complexType" : "mobilePrice",
        "getter" : "getCouponDiscount",
        "setter" : "setCouponDiscount",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "couponDiscount",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "details",
        "complexType" : "flightDetailJsonResponse",
        "getter" : "getDetails",
        "setter" : "setDetails",
        "datatype" : "flightDetailJsonResponse",
        "datatypeWithEnum" : "flightDetailJsonResponse",
        "name" : "details",
        "defaultValue" : "null",
        "baseType" : "flightDetailJsonResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/flightDetailJsonResponse\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rules",
        "complexType" : "flightDetailedRulesJson",
        "getter" : "getRules",
        "setter" : "setRules",
        "datatype" : "flightDetailedRulesJson",
        "datatypeWithEnum" : "flightDetailedRulesJson",
        "name" : "rules",
        "defaultValue" : "null",
        "baseType" : "flightDetailedRulesJson",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/flightDetailedRulesJson\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "validFormsOfPayment",
        "complexType" : "apiPaymentOptionJson",
        "getter" : "getValidFormsOfPayment",
        "setter" : "setValidFormsOfPayment",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "validFormsOfPayment",
        "defaultValue" : "new ArrayList<apiPaymentOptionJson>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/apiPaymentOptionJson\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rewardsPoints",

        "getter" : "getRewardsPoints",
        "setter" : "setRewardsPoints",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "rewardsPoints",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isCustomerTitleRequired",

        "getter" : "getIsCustomerTitleRequired",
        "setter" : "setIsCustomerTitleRequired",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "isCustomerTitleRequired",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "expediaRewards",
        "complexType" : "expediaRewardsForTripJson",
        "getter" : "getExpediaRewards",
        "setter" : "setExpediaRewards",
        "datatype" : "expediaRewardsForTripJson",
        "datatypeWithEnum" : "expediaRewardsForTripJson",
        "name" : "expediaRewards",
        "defaultValue" : "null",
        "baseType" : "expediaRewardsForTripJson",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/expediaRewardsForTripJson\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "availableInsuranceProducts",
        "complexType" : "insurance",
        "getter" : "getAvailableInsuranceProducts",
        "setter" : "setAvailableInsuranceProducts",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "availableInsuranceProducts",
        "defaultValue" : "new ArrayList<insurance>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/insurance\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "selectedInsuranceProduct",
        "complexType" : "insurance",
        "getter" : "getSelectedInsuranceProduct",
        "setter" : "setSelectedInsuranceProduct",
        "datatype" : "insurance",
        "datatypeWithEnum" : "insurance",
        "name" : "selectedInsuranceProduct",
        "defaultValue" : "null",
        "baseType" : "insurance",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/insurance\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "coupon",
        "complexType" : "mobileCoupon",
        "getter" : "getCoupon",
        "setter" : "setCoupon",
        "datatype" : "mobileCoupon",
        "datatypeWithEnum" : "mobileCoupon",
        "name" : "coupon",
        "defaultValue" : "null",
        "baseType" : "mobileCoupon",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobileCoupon\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tealeafTransactionId",

        "getter" : "getTealeafTransactionId",
        "setter" : "setTealeafTransactionId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tealeafTransactionId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "insurance", "expediaRewardsForTripJson", "flightDetailJsonResponse", "mobileCoupon", "flightDetailedRulesJson", "string", "mobilePrice", "apiNewTrip", "List", "apiPaymentOptionJson", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "flightDetailJsonResponse",
      "classname" : "FlightDetailJsonResponse",
      "classVarName" : "flightDetailJsonResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"offer\" : {\n      \"$ref\" : \"#/definitions/flightOfferJson\"\n    },\n    \"productKey\" : {\n      \"type\" : \"string\"\n    },\n    \"flightRules\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/flightRulesJson\"\n      }\n    },\n    \"oldOffer\" : {\n      \"$ref\" : \"#/definitions/flightOfferJson\"\n    },\n    \"priceChangeAmount\" : {\n      \"type\" : \"string\"\n    },\n    \"changedPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"obFeeTotalAmount\" : {\n      \"type\" : \"string\"\n    },\n    \"obFeePrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"legs\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/flightLegJson\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "offer",
        "complexType" : "flightOfferJson",
        "getter" : "getOffer",
        "setter" : "setOffer",
        "datatype" : "flightOfferJson",
        "datatypeWithEnum" : "flightOfferJson",
        "name" : "offer",
        "defaultValue" : "null",
        "baseType" : "flightOfferJson",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/flightOfferJson\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "productKey",

        "getter" : "getProductKey",
        "setter" : "setProductKey",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "productKey",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flightRules",
        "complexType" : "flightRulesJson",
        "getter" : "getFlightRules",
        "setter" : "setFlightRules",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "flightRules",
        "defaultValue" : "new ArrayList<flightRulesJson>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/flightRulesJson\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "oldOffer",
        "complexType" : "flightOfferJson",
        "getter" : "getOldOffer",
        "setter" : "setOldOffer",
        "datatype" : "flightOfferJson",
        "datatypeWithEnum" : "flightOfferJson",
        "name" : "oldOffer",
        "defaultValue" : "null",
        "baseType" : "flightOfferJson",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/flightOfferJson\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "priceChangeAmount",

        "getter" : "getPriceChangeAmount",
        "setter" : "setPriceChangeAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "priceChangeAmount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "changedPrice",
        "complexType" : "mobilePrice",
        "getter" : "getChangedPrice",
        "setter" : "setChangedPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "changedPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "obFeeTotalAmount",

        "getter" : "getObFeeTotalAmount",
        "setter" : "setObFeeTotalAmount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "obFeeTotalAmount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "obFeePrice",
        "complexType" : "mobilePrice",
        "getter" : "getObFeePrice",
        "setter" : "setObFeePrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "obFeePrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "legs",
        "complexType" : "flightLegJson",
        "getter" : "getLegs",
        "setter" : "setLegs",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "legs",
        "defaultValue" : "new ArrayList<flightLegJson>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/flightLegJson\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "flightRulesJson", "flightOfferJson", "string", "flightLegJson", "mobilePrice", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "imageJsonResponse",
      "classname" : "ImageJsonResponse",
      "classVarName" : "imageJsonResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"imageUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"cacheKey\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "imageUrl",

        "getter" : "getImageUrl",
        "setter" : "setImageUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "imageUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cacheKey",

        "getter" : "getCacheKey",
        "setter" : "setCacheKey",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "cacheKey",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "airportDropDownDataResponse",
      "classname" : "AirportDropDownDataResponse",
      "classVarName" : "airportDropDownDataResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"airport\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/airport\"\n      }\n    },\n    \"routes\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/route\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "airport",
        "complexType" : "airport",
        "getter" : "getAirport",
        "setter" : "setAirport",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "airport",
        "defaultValue" : "new ArrayList<airport>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/airport\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "routes",
        "complexType" : "route",
        "getter" : "getRoutes",
        "setter" : "setRoutes",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "routes",
        "defaultValue" : "new ArrayList<route>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/route\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "airport", "route", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "apiCheckoutResponseFlightOkResponse",
      "classname" : "ApiCheckoutResponseFlightOkResponse",
      "classVarName" : "apiCheckoutResponseFlightOkResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"newTrip\" : {\n      \"$ref\" : \"#/definitions/apiNewTripJson\"\n    },\n    \"orderId\" : {\n      \"type\" : \"string\"\n    },\n    \"currencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"totalCharges\" : {\n      \"type\" : \"string\"\n    },\n    \"totalChargesPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    },\n    \"debugTealeafInfo\" : {\n      \"type\" : \"string\"\n    },\n    \"mobileAirAttachQualifier\" : {\n      \"$ref\" : \"#/definitions/mobileAirAttachQualifier\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "newTrip",
        "complexType" : "apiNewTripJson",
        "getter" : "getNewTrip",
        "setter" : "setNewTrip",
        "datatype" : "apiNewTripJson",
        "datatypeWithEnum" : "apiNewTripJson",
        "name" : "newTrip",
        "defaultValue" : "null",
        "baseType" : "apiNewTripJson",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/apiNewTripJson\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderId",

        "getter" : "getOrderId",
        "setter" : "setOrderId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencyCode",

        "getter" : "getCurrencyCode",
        "setter" : "setCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalCharges",

        "getter" : "getTotalCharges",
        "setter" : "setTotalCharges",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalCharges",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalChargesPrice",
        "complexType" : "mobilePrice",
        "getter" : "getTotalChargesPrice",
        "setter" : "setTotalChargesPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalChargesPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "debugTealeafInfo",

        "getter" : "getDebugTealeafInfo",
        "setter" : "setDebugTealeafInfo",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "debugTealeafInfo",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "mobileAirAttachQualifier",
        "complexType" : "mobileAirAttachQualifier",
        "getter" : "getMobileAirAttachQualifier",
        "setter" : "setMobileAirAttachQualifier",
        "datatype" : "mobileAirAttachQualifier",
        "datatypeWithEnum" : "mobileAirAttachQualifier",
        "name" : "mobileAirAttachQualifier",
        "defaultValue" : "null",
        "baseType" : "mobileAirAttachQualifier",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobileAirAttachQualifier\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "mobileAirAttachQualifier", "string", "mobilePrice", "apiNewTripJson" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "apiCheckoutResponseFlightPriceChangeResponse",
      "classname" : "ApiCheckoutResponseFlightPriceChangeResponse",
      "classVarName" : "apiCheckoutResponseFlightPriceChangeResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"flightDetailResponse\" : {\n      \"$ref\" : \"#/definitions/flightDetailJsonResponse\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "flightDetailResponse",
        "complexType" : "flightDetailJsonResponse",
        "getter" : "getFlightDetailResponse",
        "setter" : "setFlightDetailResponse",
        "datatype" : "flightDetailJsonResponse",
        "datatypeWithEnum" : "flightDetailJsonResponse",
        "name" : "flightDetailResponse",
        "defaultValue" : "null",
        "baseType" : "flightDetailJsonResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/flightDetailJsonResponse\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "flightDetailJsonResponse", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonOpaqueHotelSearchResponse",
      "classname" : "JsonOpaqueHotelSearchResponse",
      "classVarName" : "jsonOpaqueHotelSearchResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"totalHotelCount\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"opaqueHotelList\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonOpaqueHotel\"\n      }\n    },\n    \"opaqueNeighborhoodList\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonOpaqueNeighborhood\"\n      }\n    },\n    \"errorMessage\" : {\n      \"$ref\" : \"#/definitions/mobileError\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "totalHotelCount",

        "getter" : "getTotalHotelCount",
        "setter" : "setTotalHotelCount",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "totalHotelCount",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "opaqueHotelList",
        "complexType" : "jsonOpaqueHotel",
        "getter" : "getOpaqueHotelList",
        "setter" : "setOpaqueHotelList",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "opaqueHotelList",
        "defaultValue" : "new ArrayList<jsonOpaqueHotel>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonOpaqueHotel\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "opaqueNeighborhoodList",
        "complexType" : "jsonOpaqueNeighborhood",
        "getter" : "getOpaqueNeighborhoodList",
        "setter" : "setOpaqueNeighborhoodList",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "opaqueNeighborhoodList",
        "defaultValue" : "new ArrayList<jsonOpaqueNeighborhood>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonOpaqueNeighborhood\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errorMessage",
        "complexType" : "mobileError",
        "getter" : "getErrorMessage",
        "setter" : "setErrorMessage",
        "datatype" : "mobileError",
        "datatypeWithEnum" : "mobileError",
        "name" : "errorMessage",
        "defaultValue" : "null",
        "baseType" : "mobileError",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobileError\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "jsonOpaqueHotel", "List", "mobileError", "jsonOpaqueNeighborhood", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "hotelSearchResponse",
      "classname" : "HotelSearchResponse",
      "classVarName" : "hotelSearchResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"numberOfRoomsRequested\" : {\n      \"type\" : \"string\"\n    },\n    \"filterUnavailableHotelsRequested\" : {\n      \"type\" : \"string\"\n    },\n    \"totalHotelCount\" : {\n      \"type\" : \"string\"\n    },\n    \"availableHotelCount\" : {\n      \"type\" : \"string\"\n    },\n    \"searchRegionId\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelList\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonHotel\"\n      }\n    },\n    \"opaqueHotelResponse\" : {\n      \"$ref\" : \"#/definitions/jsonOpaqueHotelSearchResponse\"\n    },\n    \"allNeighborhoodsInSearchRegion\" : {\n      \"type\" : \"string\"\n    },\n    \"filteredSearchMatchedNoHotels\" : {\n      \"type\" : \"string\"\n    },\n    \"amenityFilterOptions\" : {\n      \"type\" : \"string\"\n    },\n    \"starOptions\" : {\n      \"type\" : \"string\"\n    },\n    \"priceOptions\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "numberOfRoomsRequested",

        "getter" : "getNumberOfRoomsRequested",
        "setter" : "setNumberOfRoomsRequested",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "numberOfRoomsRequested",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "filterUnavailableHotelsRequested",

        "getter" : "getFilterUnavailableHotelsRequested",
        "setter" : "setFilterUnavailableHotelsRequested",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "filterUnavailableHotelsRequested",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalHotelCount",

        "getter" : "getTotalHotelCount",
        "setter" : "setTotalHotelCount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalHotelCount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "availableHotelCount",

        "getter" : "getAvailableHotelCount",
        "setter" : "setAvailableHotelCount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "availableHotelCount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "searchRegionId",

        "getter" : "getSearchRegionId",
        "setter" : "setSearchRegionId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "searchRegionId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelList",
        "complexType" : "jsonHotel",
        "getter" : "getHotelList",
        "setter" : "setHotelList",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "hotelList",
        "defaultValue" : "new ArrayList<jsonHotel>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonHotel\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "opaqueHotelResponse",
        "complexType" : "jsonOpaqueHotelSearchResponse",
        "getter" : "getOpaqueHotelResponse",
        "setter" : "setOpaqueHotelResponse",
        "datatype" : "jsonOpaqueHotelSearchResponse",
        "datatypeWithEnum" : "jsonOpaqueHotelSearchResponse",
        "name" : "opaqueHotelResponse",
        "defaultValue" : "null",
        "baseType" : "jsonOpaqueHotelSearchResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonOpaqueHotelSearchResponse\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "allNeighborhoodsInSearchRegion",

        "getter" : "getAllNeighborhoodsInSearchRegion",
        "setter" : "setAllNeighborhoodsInSearchRegion",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "allNeighborhoodsInSearchRegion",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "filteredSearchMatchedNoHotels",

        "getter" : "getFilteredSearchMatchedNoHotels",
        "setter" : "setFilteredSearchMatchedNoHotels",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "filteredSearchMatchedNoHotels",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amenityFilterOptions",

        "getter" : "getAmenityFilterOptions",
        "setter" : "setAmenityFilterOptions",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "amenityFilterOptions",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "starOptions",

        "getter" : "getStarOptions",
        "setter" : "setStarOptions",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "starOptions",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "priceOptions",

        "getter" : "getPriceOptions",
        "setter" : "setPriceOptions",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "priceOptions",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonOpaqueHotelSearchResponse", "string", "jsonHotel", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "hotelAmbiguousResponse",
      "classname" : "HotelAmbiguousResponse",
      "classVarName" : "hotelAmbiguousResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"numberOfMatches\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"cityList\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonAmbiguousCityMatch\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "numberOfMatches",

        "getter" : "getNumberOfMatches",
        "setter" : "setNumberOfMatches",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "numberOfMatches",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "cityList",
        "complexType" : "jsonAmbiguousCityMatch",
        "getter" : "getCityList",
        "setter" : "setCityList",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "cityList",
        "defaultValue" : "new ArrayList<jsonAmbiguousCityMatch>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonAmbiguousCityMatch\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "jsonAmbiguousCityMatch", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonGetOfferResponse",
      "classname" : "JsonGetOfferResponse",
      "classVarName" : "jsonGetOfferResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"hotelTagline\" : {\n      \"type\" : \"string\"\n    },\n    \"checkInDate\" : {\n      \"type\" : \"string\"\n    },\n    \"checkOutDate\" : {\n      \"type\" : \"string\"\n    },\n    \"numberOfRoomsRequested\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"numberOfNights\" : {\n      \"type\" : \"string\"\n    },\n    \"tripAdvisorRating\" : {\n      \"type\" : \"string\"\n    },\n    \"checkInInstructions\" : {\n      \"type\" : \"string\"\n    },\n    \"shortDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelRoomResponse\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonHotelOffer\"\n      }\n    },\n    \"signedMapUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"airAttachExpirationTimeSeconds\" : {\n      \"type\" : \"string\"\n    },\n    \"errors\" : {\n      \"$ref\" : \"#/definitions/mobileError\"\n    },\n    \"hotelId\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"localizedHotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"nonLocalizedHotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelAddress\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelCity\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelStateProvince\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelCountry\" : {\n      \"type\" : \"string\"\n    },\n    \"latitude\" : {\n      \"type\" : \"string\"\n    },\n    \"longitude\" : {\n      \"type\" : \"string\"\n    },\n    \"longDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"photos\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonPhoto\"\n      }\n    },\n    \"hotelAmenities\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonValueAdd\"\n      }\n    },\n    \"hotelStarRating\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelStarRatingCssClassName\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelGuestRating\" : {\n      \"type\" : \"string\"\n    },\n    \"totalRecommendations\" : {\n      \"type\" : \"string\"\n    },\n    \"totalReviews\" : {\n      \"type\" : \"string\"\n    },\n    \"percentRecommended\" : {\n      \"type\" : \"string\"\n    },\n    \"telesalesNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"deskTopOverrideNumber\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hotelRenovationText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"hotelMandatoryFeesText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"hotelOverviewText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"firstHotelOverview\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelAmenitiesText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"hotelPoliciesText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"hotelFeesText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"isVipAccess\" : {\n      \"type\" : \"boolean\"\n    },\n    \"locationDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"locationId\" : {\n      \"type\" : \"string\"\n    },\n    \"regions\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/region\"\n      }\n    },\n    \"allowedToDisplayRatingAsStars\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "hotelTagline",

        "getter" : "getHotelTagline",
        "setter" : "setHotelTagline",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelTagline",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInDate",

        "getter" : "getCheckInDate",
        "setter" : "setCheckInDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkInDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkOutDate",

        "getter" : "getCheckOutDate",
        "setter" : "setCheckOutDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkOutDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "numberOfRoomsRequested",

        "getter" : "getNumberOfRoomsRequested",
        "setter" : "setNumberOfRoomsRequested",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "numberOfRoomsRequested",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "numberOfNights",

        "getter" : "getNumberOfNights",
        "setter" : "setNumberOfNights",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "numberOfNights",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tripAdvisorRating",

        "getter" : "getTripAdvisorRating",
        "setter" : "setTripAdvisorRating",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tripAdvisorRating",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInInstructions",

        "getter" : "getCheckInInstructions",
        "setter" : "setCheckInInstructions",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkInInstructions",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "shortDescription",

        "getter" : "getShortDescription",
        "setter" : "setShortDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "shortDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelRoomResponse",
        "complexType" : "jsonHotelOffer",
        "getter" : "getHotelRoomResponse",
        "setter" : "setHotelRoomResponse",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "hotelRoomResponse",
        "defaultValue" : "new ArrayList<jsonHotelOffer>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonHotelOffer\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "signedMapUrl",

        "getter" : "getSignedMapUrl",
        "setter" : "setSignedMapUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "signedMapUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airAttachExpirationTimeSeconds",

        "getter" : "getAirAttachExpirationTimeSeconds",
        "setter" : "setAirAttachExpirationTimeSeconds",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "airAttachExpirationTimeSeconds",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "mobileError",
        "datatypeWithEnum" : "mobileError",
        "name" : "errors",
        "defaultValue" : "null",
        "baseType" : "mobileError",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobileError\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelId",

        "getter" : "getHotelId",
        "setter" : "setHotelId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelName",

        "getter" : "getHotelName",
        "setter" : "setHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localizedHotelName",

        "getter" : "getLocalizedHotelName",
        "setter" : "setLocalizedHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localizedHotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nonLocalizedHotelName",

        "getter" : "getNonLocalizedHotelName",
        "setter" : "setNonLocalizedHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nonLocalizedHotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelAddress",

        "getter" : "getHotelAddress",
        "setter" : "setHotelAddress",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelAddress",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelCity",

        "getter" : "getHotelCity",
        "setter" : "setHotelCity",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelCity",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStateProvince",

        "getter" : "getHotelStateProvince",
        "setter" : "setHotelStateProvince",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStateProvince",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelCountry",

        "getter" : "getHotelCountry",
        "setter" : "setHotelCountry",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelCountry",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "latitude",

        "getter" : "getLatitude",
        "setter" : "setLatitude",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "latitude",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "longitude",

        "getter" : "getLongitude",
        "setter" : "setLongitude",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "longitude",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "longDescription",

        "getter" : "getLongDescription",
        "setter" : "setLongDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "longDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "photos",
        "complexType" : "jsonPhoto",
        "getter" : "getPhotos",
        "setter" : "setPhotos",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "photos",
        "defaultValue" : "new ArrayList<jsonPhoto>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonPhoto\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelAmenities",
        "complexType" : "jsonValueAdd",
        "getter" : "getHotelAmenities",
        "setter" : "setHotelAmenities",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "hotelAmenities",
        "defaultValue" : "new ArrayList<jsonValueAdd>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonValueAdd\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStarRating",

        "getter" : "getHotelStarRating",
        "setter" : "setHotelStarRating",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStarRating",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStarRatingCssClassName",

        "getter" : "getHotelStarRatingCssClassName",
        "setter" : "setHotelStarRatingCssClassName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStarRatingCssClassName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelGuestRating",

        "getter" : "getHotelGuestRating",
        "setter" : "setHotelGuestRating",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelGuestRating",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalRecommendations",

        "getter" : "getTotalRecommendations",
        "setter" : "setTotalRecommendations",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalRecommendations",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalReviews",

        "getter" : "getTotalReviews",
        "setter" : "setTotalReviews",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalReviews",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "percentRecommended",

        "getter" : "getPercentRecommended",
        "setter" : "setPercentRecommended",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "percentRecommended",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "telesalesNumber",

        "getter" : "getTelesalesNumber",
        "setter" : "setTelesalesNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "telesalesNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "deskTopOverrideNumber",

        "getter" : "getDeskTopOverrideNumber",
        "setter" : "setDeskTopOverrideNumber",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "deskTopOverrideNumber",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelRenovationText",
        "complexType" : "textSection",
        "getter" : "getHotelRenovationText",
        "setter" : "setHotelRenovationText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelRenovationText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelMandatoryFeesText",
        "complexType" : "textSection",
        "getter" : "getHotelMandatoryFeesText",
        "setter" : "setHotelMandatoryFeesText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelMandatoryFeesText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelOverviewText",
        "complexType" : "textSection",
        "getter" : "getHotelOverviewText",
        "setter" : "setHotelOverviewText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelOverviewText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "firstHotelOverview",

        "getter" : "getFirstHotelOverview",
        "setter" : "setFirstHotelOverview",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstHotelOverview",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelAmenitiesText",
        "complexType" : "textSection",
        "getter" : "getHotelAmenitiesText",
        "setter" : "setHotelAmenitiesText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelAmenitiesText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelPoliciesText",
        "complexType" : "textSection",
        "getter" : "getHotelPoliciesText",
        "setter" : "setHotelPoliciesText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelPoliciesText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelFeesText",
        "complexType" : "textSection",
        "getter" : "getHotelFeesText",
        "setter" : "setHotelFeesText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelFeesText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isVipAccess",

        "getter" : "getIsVipAccess",
        "setter" : "setIsVipAccess",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isVipAccess",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "locationDescription",

        "getter" : "getLocationDescription",
        "setter" : "setLocationDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locationDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "locationId",

        "getter" : "getLocationId",
        "setter" : "setLocationId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locationId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "regions",
        "complexType" : "region",
        "getter" : "getRegions",
        "setter" : "setRegions",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "regions",
        "defaultValue" : "new ArrayList<region>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/region\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "allowedToDisplayRatingAsStars",

        "getter" : "getAllowedToDisplayRatingAsStars",
        "setter" : "setAllowedToDisplayRatingAsStars",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "allowedToDisplayRatingAsStars",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "region", "jsonPhoto", "jsonHotelOffer", "textSection", "jsonValueAdd", "integer", "string", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonCreateTripResponse",
      "classname" : "JsonCreateTripResponse",
      "classVarName" : "jsonCreateTripResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"error\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"warnings\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"tripId\" : {\n      \"type\" : \"string\"\n    },\n    \"userId\" : {\n      \"type\" : \"string\"\n    },\n    \"originalHotelProductResponse\" : {\n      \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n    },\n    \"newHotelProductResponse\" : {\n      \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n    },\n    \"airAttachedProductResponse\" : {\n      \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n    },\n    \"loyaltyPoints\" : {\n      \"$ref\" : \"#/definitions/jsonLoyaltyPoints\"\n    },\n    \"expediaRewards\" : {\n      \"$ref\" : \"#/definitions/expediaRewardsForTripJson\"\n    },\n    \"coupon\" : {\n      \"$ref\" : \"#/definitions/mobileCoupon\"\n    },\n    \"userCoupons\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileCoupon\"\n      }\n    },\n    \"tealeafTransactionId\" : {\n      \"type\" : \"string\"\n    },\n    \"validFormsOfPayment\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/apiPaymentOptionJson\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "error",
        "complexType" : "mobileError",
        "getter" : "getError",
        "setter" : "setError",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "error",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "warnings",
        "complexType" : "mobileError",
        "getter" : "getWarnings",
        "setter" : "setWarnings",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "warnings",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tripId",

        "getter" : "getTripId",
        "setter" : "setTripId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tripId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "userId",

        "getter" : "getUserId",
        "setter" : "setUserId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "userId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "originalHotelProductResponse",
        "complexType" : "jsonGetProductResponse",
        "getter" : "getOriginalHotelProductResponse",
        "setter" : "setOriginalHotelProductResponse",
        "datatype" : "jsonGetProductResponse",
        "datatypeWithEnum" : "jsonGetProductResponse",
        "name" : "originalHotelProductResponse",
        "defaultValue" : "null",
        "baseType" : "jsonGetProductResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "newHotelProductResponse",
        "complexType" : "jsonGetProductResponse",
        "getter" : "getNewHotelProductResponse",
        "setter" : "setNewHotelProductResponse",
        "datatype" : "jsonGetProductResponse",
        "datatypeWithEnum" : "jsonGetProductResponse",
        "name" : "newHotelProductResponse",
        "defaultValue" : "null",
        "baseType" : "jsonGetProductResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "airAttachedProductResponse",
        "complexType" : "jsonGetProductResponse",
        "getter" : "getAirAttachedProductResponse",
        "setter" : "setAirAttachedProductResponse",
        "datatype" : "jsonGetProductResponse",
        "datatypeWithEnum" : "jsonGetProductResponse",
        "name" : "airAttachedProductResponse",
        "defaultValue" : "null",
        "baseType" : "jsonGetProductResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "loyaltyPoints",
        "complexType" : "jsonLoyaltyPoints",
        "getter" : "getLoyaltyPoints",
        "setter" : "setLoyaltyPoints",
        "datatype" : "jsonLoyaltyPoints",
        "datatypeWithEnum" : "jsonLoyaltyPoints",
        "name" : "loyaltyPoints",
        "defaultValue" : "null",
        "baseType" : "jsonLoyaltyPoints",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonLoyaltyPoints\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "expediaRewards",
        "complexType" : "expediaRewardsForTripJson",
        "getter" : "getExpediaRewards",
        "setter" : "setExpediaRewards",
        "datatype" : "expediaRewardsForTripJson",
        "datatypeWithEnum" : "expediaRewardsForTripJson",
        "name" : "expediaRewards",
        "defaultValue" : "null",
        "baseType" : "expediaRewardsForTripJson",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/expediaRewardsForTripJson\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "coupon",
        "complexType" : "mobileCoupon",
        "getter" : "getCoupon",
        "setter" : "setCoupon",
        "datatype" : "mobileCoupon",
        "datatypeWithEnum" : "mobileCoupon",
        "name" : "coupon",
        "defaultValue" : "null",
        "baseType" : "mobileCoupon",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobileCoupon\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "userCoupons",
        "complexType" : "mobileCoupon",
        "getter" : "getUserCoupons",
        "setter" : "setUserCoupons",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "userCoupons",
        "defaultValue" : "new ArrayList<mobileCoupon>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileCoupon\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tealeafTransactionId",

        "getter" : "getTealeafTransactionId",
        "setter" : "setTealeafTransactionId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tealeafTransactionId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "validFormsOfPayment",
        "complexType" : "apiPaymentOptionJson",
        "getter" : "getValidFormsOfPayment",
        "setter" : "setValidFormsOfPayment",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "validFormsOfPayment",
        "defaultValue" : "new ArrayList<apiPaymentOptionJson>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/apiPaymentOptionJson\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "expediaRewardsForTripJson", "mobileCoupon", "string", "List", "mobileError", "apiPaymentOptionJson", "jsonLoyaltyPoints", "jsonGetProductResponse", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "apiCheckoutResponseHotelResponse",
      "classname" : "ApiCheckoutResponseHotelResponse",
      "classVarName" : "apiCheckoutResponseHotelResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"newTrip\" : {\n      \"$ref\" : \"#/definitions/apiNewTripJson\"\n    },\n    \"orderId\" : {\n      \"type\" : \"string\"\n    },\n    \"currencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"totalCharges\" : {\n      \"type\" : \"string\"\n    },\n    \"totalChargesPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    },\n    \"checkoutResponse\" : {\n      \"$ref\" : \"#/definitions/checkout\"\n    },\n    \"debugTealeafInfo\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "newTrip",
        "complexType" : "apiNewTripJson",
        "getter" : "getNewTrip",
        "setter" : "setNewTrip",
        "datatype" : "apiNewTripJson",
        "datatypeWithEnum" : "apiNewTripJson",
        "name" : "newTrip",
        "defaultValue" : "null",
        "baseType" : "apiNewTripJson",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/apiNewTripJson\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderId",

        "getter" : "getOrderId",
        "setter" : "setOrderId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencyCode",

        "getter" : "getCurrencyCode",
        "setter" : "setCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalCharges",

        "getter" : "getTotalCharges",
        "setter" : "setTotalCharges",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalCharges",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalChargesPrice",
        "complexType" : "mobilePrice",
        "getter" : "getTotalChargesPrice",
        "setter" : "setTotalChargesPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalChargesPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkoutResponse",
        "complexType" : "checkout",
        "getter" : "getCheckoutResponse",
        "setter" : "setCheckoutResponse",
        "datatype" : "checkout",
        "datatypeWithEnum" : "checkout",
        "name" : "checkoutResponse",
        "defaultValue" : "null",
        "baseType" : "checkout",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/checkout\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "debugTealeafInfo",

        "getter" : "getDebugTealeafInfo",
        "setter" : "setDebugTealeafInfo",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "debugTealeafInfo",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "mobilePrice", "apiNewTripJson", "List", "checkout", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "apiFieldsResponse",
      "classname" : "ApiFieldsResponse",
      "classVarName" : "apiFieldsResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"paymentFields\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "paymentFields",

        "getter" : "getPaymentFields",
        "setter" : "setPaymentFields",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "paymentFields",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "hotelCancelEnquiryResponse",
      "classname" : "HotelCancelEnquiryResponse",
      "classVarName" : "hotelCancelEnquiryResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"amountPaid\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"amountRefund\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"hotelRules\" : {\n      \"$ref\" : \"#/definitions/hotelCancelRules\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "amountPaid",

        "getter" : "getAmountPaid",
        "setter" : "setAmountPaid",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "amountPaid",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "amountRefund",

        "getter" : "getAmountRefund",
        "setter" : "setAmountRefund",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "amountRefund",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "hotelRules",
        "complexType" : "hotelCancelRules",
        "getter" : "getHotelRules",
        "setter" : "setHotelRules",
        "datatype" : "hotelCancelRules",
        "datatypeWithEnum" : "hotelCancelRules",
        "name" : "hotelRules",
        "defaultValue" : "null",
        "baseType" : "hotelCancelRules",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/hotelCancelRules\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "integer", "hotelCancelRules", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "hotelCancelEnquiryV2Response",
      "classname" : "HotelCancelEnquiryV2Response",
      "classVarName" : "hotelCancelEnquiryV2Response",
      "modelJson" : "{\n  \"properties\" : {\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"cancelEnquiryInfoList\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/hotelCancelEnquiryInfo\"\n      }\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "cancelEnquiryInfoList",
        "complexType" : "hotelCancelEnquiryInfo",
        "getter" : "getCancelEnquiryInfoList",
        "setter" : "setCancelEnquiryInfoList",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "cancelEnquiryInfoList",
        "defaultValue" : "new ArrayList<hotelCancelEnquiryInfo>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/hotelCancelEnquiryInfo\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "hotelCancelEnquiryInfo", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonGetProductResponse",
      "classname" : "JsonGetProductResponse",
      "classVarName" : "jsonGetProductResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"checkInDate\" : {\n      \"type\" : \"string\"\n    },\n    \"checkOutDate\" : {\n      \"type\" : \"string\"\n    },\n    \"adultCount\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"numberOfNights\" : {\n      \"type\" : \"string\"\n    },\n    \"numberOfRooms\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelId\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"localizedHotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"nonLocalizedHotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"largeThumbnailUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"thumbnailUrl\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelAddress\" : {\n      \"type\" : \"string\"\n    },\n    \"latitude\" : {\n      \"type\" : \"string\"\n    },\n    \"longitude\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelCity\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelStateProvince\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelCountry\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelStarRating\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelRoomResponse\" : {\n      \"$ref\" : \"#/definitions/jsonHotelOffer\"\n    },\n    \"supplierType\" : {\n      \"type\" : \"string\"\n    },\n    \"accessibilityAmenities\" : {\n      \"type\" : \"array\"\n    },\n    \"isVipAccess\" : {\n      \"type\" : \"boolean\"\n    },\n    \"tealeafTransactionId\" : {\n      \"type\" : \"string\"\n    },\n    \"bigImageUrl\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkInDate",

        "getter" : "getCheckInDate",
        "setter" : "setCheckInDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkInDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkOutDate",

        "getter" : "getCheckOutDate",
        "setter" : "setCheckOutDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkOutDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adultCount",

        "getter" : "getAdultCount",
        "setter" : "setAdultCount",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "adultCount",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "numberOfNights",

        "getter" : "getNumberOfNights",
        "setter" : "setNumberOfNights",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "numberOfNights",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "numberOfRooms",

        "getter" : "getNumberOfRooms",
        "setter" : "setNumberOfRooms",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "numberOfRooms",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelId",

        "getter" : "getHotelId",
        "setter" : "setHotelId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelName",

        "getter" : "getHotelName",
        "setter" : "setHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localizedHotelName",

        "getter" : "getLocalizedHotelName",
        "setter" : "setLocalizedHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localizedHotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nonLocalizedHotelName",

        "getter" : "getNonLocalizedHotelName",
        "setter" : "setNonLocalizedHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nonLocalizedHotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "largeThumbnailUrl",

        "getter" : "getLargeThumbnailUrl",
        "setter" : "setLargeThumbnailUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "largeThumbnailUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "thumbnailUrl",

        "getter" : "getThumbnailUrl",
        "setter" : "setThumbnailUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "thumbnailUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelAddress",

        "getter" : "getHotelAddress",
        "setter" : "setHotelAddress",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelAddress",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "latitude",

        "getter" : "getLatitude",
        "setter" : "setLatitude",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "latitude",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "longitude",

        "getter" : "getLongitude",
        "setter" : "setLongitude",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "longitude",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelCity",

        "getter" : "getHotelCity",
        "setter" : "setHotelCity",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelCity",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStateProvince",

        "getter" : "getHotelStateProvince",
        "setter" : "setHotelStateProvince",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStateProvince",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelCountry",

        "getter" : "getHotelCountry",
        "setter" : "setHotelCountry",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelCountry",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStarRating",

        "getter" : "getHotelStarRating",
        "setter" : "setHotelStarRating",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStarRating",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelRoomResponse",
        "complexType" : "jsonHotelOffer",
        "getter" : "getHotelRoomResponse",
        "setter" : "setHotelRoomResponse",
        "datatype" : "jsonHotelOffer",
        "datatypeWithEnum" : "jsonHotelOffer",
        "name" : "hotelRoomResponse",
        "defaultValue" : "null",
        "baseType" : "jsonHotelOffer",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonHotelOffer\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "supplierType",

        "getter" : "getSupplierType",
        "setter" : "setSupplierType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "supplierType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "accessibilityAmenities",
        "getter" : "getAccessibilityAmenities",
        "setter" : "setAccessibilityAmenities",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "accessibilityAmenities",
        "defaultValue" : "new ArrayList<null>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\"\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isVipAccess",

        "getter" : "getIsVipAccess",
        "setter" : "setIsVipAccess",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isVipAccess",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tealeafTransactionId",

        "getter" : "getTealeafTransactionId",
        "setter" : "setTealeafTransactionId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tealeafTransactionId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "bigImageUrl",

        "getter" : "getBigImageUrl",
        "setter" : "setBigImageUrl",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "bigImageUrl",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonHotelOffer", "integer", "string", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonOpaqueGetProductResponse",
      "classname" : "JsonOpaqueGetProductResponse",
      "classVarName" : "jsonOpaqueGetProductResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"checkInDate\" : {\n      \"type\" : \"string\"\n    },\n    \"checkOutDate\" : {\n      \"type\" : \"string\"\n    },\n    \"adultCount\" : {\n      \"type\" : \"string\"\n    },\n    \"numberOfNights\" : {\n      \"type\" : \"string\"\n    },\n    \"numberOfRoomsRequested\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"hotelRoomResponse\" : {\n      \"$ref\" : \"#/definitions/jsonOpaqueHotelSearchResponse\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "checkInDate",

        "getter" : "getCheckInDate",
        "setter" : "setCheckInDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkInDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "checkOutDate",

        "getter" : "getCheckOutDate",
        "setter" : "setCheckOutDate",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "checkOutDate",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "adultCount",

        "getter" : "getAdultCount",
        "setter" : "setAdultCount",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "adultCount",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "numberOfNights",

        "getter" : "getNumberOfNights",
        "setter" : "setNumberOfNights",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "numberOfNights",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "numberOfRoomsRequested",

        "getter" : "getNumberOfRoomsRequested",
        "setter" : "setNumberOfRoomsRequested",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "numberOfRoomsRequested",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelRoomResponse",
        "complexType" : "jsonOpaqueHotelSearchResponse",
        "getter" : "getHotelRoomResponse",
        "setter" : "setHotelRoomResponse",
        "datatype" : "jsonOpaqueHotelSearchResponse",
        "datatypeWithEnum" : "jsonOpaqueHotelSearchResponse",
        "name" : "hotelRoomResponse",
        "defaultValue" : "null",
        "baseType" : "jsonOpaqueHotelSearchResponse",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonOpaqueHotelSearchResponse\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonOpaqueHotelSearchResponse", "integer", "string", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonHotelInformationResponse",
      "classname" : "JsonHotelInformationResponse",
      "classVarName" : "jsonHotelInformationResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"hotelId\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"localizedHotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"nonLocalizedHotelName\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelAddress\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelCity\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelStateProvince\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelCountry\" : {\n      \"type\" : \"string\"\n    },\n    \"latitude\" : {\n      \"type\" : \"string\"\n    },\n    \"longitude\" : {\n      \"type\" : \"string\"\n    },\n    \"longDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"photos\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonPhoto\"\n      }\n    },\n    \"hotelAmenities\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonValueAdd\"\n      }\n    },\n    \"hotelStarRating\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelStarRatingCssClassName\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelGuestRating\" : {\n      \"type\" : \"string\"\n    },\n    \"totalRecommendations\" : {\n      \"type\" : \"string\"\n    },\n    \"totalReviews\" : {\n      \"type\" : \"string\"\n    },\n    \"percentRecommended\" : {\n      \"type\" : \"string\"\n    },\n    \"telesalesNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"deskTopOverrideNumber\" : {\n      \"type\" : \"boolean\"\n    },\n    \"hotelRenovationText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"hotelMandatoryFeesText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"hotelOverviewText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"firstHotelOverview\" : {\n      \"type\" : \"string\"\n    },\n    \"hotelAmenitiesText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"hotelPoliciesText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"hotelFeesText\" : {\n      \"$ref\" : \"#/definitions/textSection\"\n    },\n    \"isVipAccess\" : {\n      \"type\" : \"boolean\"\n    },\n    \"locationDescription\" : {\n      \"type\" : \"string\"\n    },\n    \"locationId\" : {\n      \"type\" : \"string\"\n    },\n    \"regions\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/region\"\n      }\n    },\n    \"allowedToDisplayRatingAsStars\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelId",

        "getter" : "getHotelId",
        "setter" : "setHotelId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelName",

        "getter" : "getHotelName",
        "setter" : "setHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "localizedHotelName",

        "getter" : "getLocalizedHotelName",
        "setter" : "setLocalizedHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "localizedHotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "nonLocalizedHotelName",

        "getter" : "getNonLocalizedHotelName",
        "setter" : "setNonLocalizedHotelName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "nonLocalizedHotelName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelAddress",

        "getter" : "getHotelAddress",
        "setter" : "setHotelAddress",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelAddress",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelCity",

        "getter" : "getHotelCity",
        "setter" : "setHotelCity",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelCity",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStateProvince",

        "getter" : "getHotelStateProvince",
        "setter" : "setHotelStateProvince",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStateProvince",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelCountry",

        "getter" : "getHotelCountry",
        "setter" : "setHotelCountry",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelCountry",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "latitude",

        "getter" : "getLatitude",
        "setter" : "setLatitude",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "latitude",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "longitude",

        "getter" : "getLongitude",
        "setter" : "setLongitude",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "longitude",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "longDescription",

        "getter" : "getLongDescription",
        "setter" : "setLongDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "longDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "photos",
        "complexType" : "jsonPhoto",
        "getter" : "getPhotos",
        "setter" : "setPhotos",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "photos",
        "defaultValue" : "new ArrayList<jsonPhoto>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonPhoto\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelAmenities",
        "complexType" : "jsonValueAdd",
        "getter" : "getHotelAmenities",
        "setter" : "setHotelAmenities",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "hotelAmenities",
        "defaultValue" : "new ArrayList<jsonValueAdd>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonValueAdd\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStarRating",

        "getter" : "getHotelStarRating",
        "setter" : "setHotelStarRating",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStarRating",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelStarRatingCssClassName",

        "getter" : "getHotelStarRatingCssClassName",
        "setter" : "setHotelStarRatingCssClassName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelStarRatingCssClassName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelGuestRating",

        "getter" : "getHotelGuestRating",
        "setter" : "setHotelGuestRating",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "hotelGuestRating",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalRecommendations",

        "getter" : "getTotalRecommendations",
        "setter" : "setTotalRecommendations",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalRecommendations",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalReviews",

        "getter" : "getTotalReviews",
        "setter" : "setTotalReviews",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalReviews",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "percentRecommended",

        "getter" : "getPercentRecommended",
        "setter" : "setPercentRecommended",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "percentRecommended",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "telesalesNumber",

        "getter" : "getTelesalesNumber",
        "setter" : "setTelesalesNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "telesalesNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "deskTopOverrideNumber",

        "getter" : "getDeskTopOverrideNumber",
        "setter" : "setDeskTopOverrideNumber",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "deskTopOverrideNumber",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelRenovationText",
        "complexType" : "textSection",
        "getter" : "getHotelRenovationText",
        "setter" : "setHotelRenovationText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelRenovationText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelMandatoryFeesText",
        "complexType" : "textSection",
        "getter" : "getHotelMandatoryFeesText",
        "setter" : "setHotelMandatoryFeesText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelMandatoryFeesText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelOverviewText",
        "complexType" : "textSection",
        "getter" : "getHotelOverviewText",
        "setter" : "setHotelOverviewText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelOverviewText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "firstHotelOverview",

        "getter" : "getFirstHotelOverview",
        "setter" : "setFirstHotelOverview",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstHotelOverview",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelAmenitiesText",
        "complexType" : "textSection",
        "getter" : "getHotelAmenitiesText",
        "setter" : "setHotelAmenitiesText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelAmenitiesText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelPoliciesText",
        "complexType" : "textSection",
        "getter" : "getHotelPoliciesText",
        "setter" : "setHotelPoliciesText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelPoliciesText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "hotelFeesText",
        "complexType" : "textSection",
        "getter" : "getHotelFeesText",
        "setter" : "setHotelFeesText",
        "datatype" : "textSection",
        "datatypeWithEnum" : "textSection",
        "name" : "hotelFeesText",
        "defaultValue" : "null",
        "baseType" : "textSection",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/textSection\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isVipAccess",

        "getter" : "getIsVipAccess",
        "setter" : "setIsVipAccess",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isVipAccess",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "locationDescription",

        "getter" : "getLocationDescription",
        "setter" : "setLocationDescription",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locationDescription",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "locationId",

        "getter" : "getLocationId",
        "setter" : "setLocationId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "locationId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "regions",
        "complexType" : "region",
        "getter" : "getRegions",
        "setter" : "setRegions",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "regions",
        "defaultValue" : "new ArrayList<region>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/region\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "allowedToDisplayRatingAsStars",

        "getter" : "getAllowedToDisplayRatingAsStars",
        "setter" : "setAllowedToDisplayRatingAsStars",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "allowedToDisplayRatingAsStars",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "region", "jsonPhoto", "textSection", "jsonValueAdd", "string", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "hotelConfirmCancelResponse",
      "classname" : "HotelConfirmCancelResponse",
      "classVarName" : "hotelConfirmCancelResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"statusResponse\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "statusResponse",

        "getter" : "getStatusResponse",
        "setter" : "setStatusResponse",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "statusResponse",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonCancellationRoomResponse",
      "classname" : "JsonCancellationRoomResponse",
      "classVarName" : "jsonCancellationRoomResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"refundPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"penaltyPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"error\" : {\n      \"$ref\" : \"#/definitions/mobileError\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "refundPrice",
        "complexType" : "mobilePrice",
        "getter" : "getRefundPrice",
        "setter" : "setRefundPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "refundPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "penaltyPrice",
        "complexType" : "mobilePrice",
        "getter" : "getPenaltyPrice",
        "setter" : "setPenaltyPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "penaltyPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "error",
        "complexType" : "mobileError",
        "getter" : "getError",
        "setter" : "setError",
        "datatype" : "mobileError",
        "datatypeWithEnum" : "mobileError",
        "name" : "error",
        "defaultValue" : "null",
        "baseType" : "mobileError",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobileError\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "mobilePrice", "mobileError" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "jsonCancellationResponse",
      "classname" : "JsonCancellationResponse",
      "classVarName" : "jsonCancellationResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"guidToResponseMap\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/jsonCancellationRoomResponse\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "guidToResponseMap",
        "complexType" : "jsonCancellationRoomResponse",
        "getter" : "getGuidToResponseMap",
        "setter" : "setGuidToResponseMap",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "guidToResponseMap",
        "defaultValue" : "new ArrayList<jsonCancellationRoomResponse>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/jsonCancellationRoomResponse\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "jsonCancellationRoomResponse", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "packageHotelOfferResponse",
      "classname" : "PackageHotelOfferResponse",
      "classVarName" : "packageHotelOfferResponse",
      "modelJson" : "{ }",
      "vars" : [ ],
      "imports" : [ ],
      "emptyVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "packageFlightJsonResponse",
      "classname" : "PackageFlightJsonResponse",
      "classVarName" : "packageFlightJsonResponse",
      "modelJson" : "{ }",
      "vars" : [ ],
      "imports" : [ ],
      "emptyVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "packageCreateTripResponse",
      "classname" : "PackageCreateTripResponse",
      "classVarName" : "packageCreateTripResponse",
      "modelJson" : "{ }",
      "vars" : [ ],
      "imports" : [ ],
      "emptyVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "apiCheckoutResponsePackageResponse",
      "classname" : "ApiCheckoutResponsePackageResponse",
      "classVarName" : "apiCheckoutResponsePackageResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"newTrip\" : {\n      \"$ref\" : \"#/definitions/apiNewTripJson\"\n    },\n    \"orderId\" : {\n      \"type\" : \"string\"\n    },\n    \"currencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"totalCharges\" : {\n      \"type\" : \"string\"\n    },\n    \"totalChargesPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"packagePricing\" : {\n      \"$ref\" : \"#/definitions/packageTripPricing\"\n    },\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    },\n    \"debugTealeafInfo\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "newTrip",
        "complexType" : "apiNewTripJson",
        "getter" : "getNewTrip",
        "setter" : "setNewTrip",
        "datatype" : "apiNewTripJson",
        "datatypeWithEnum" : "apiNewTripJson",
        "name" : "newTrip",
        "defaultValue" : "null",
        "baseType" : "apiNewTripJson",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/apiNewTripJson\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderId",

        "getter" : "getOrderId",
        "setter" : "setOrderId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencyCode",

        "getter" : "getCurrencyCode",
        "setter" : "setCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalCharges",

        "getter" : "getTotalCharges",
        "setter" : "setTotalCharges",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalCharges",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalChargesPrice",
        "complexType" : "mobilePrice",
        "getter" : "getTotalChargesPrice",
        "setter" : "setTotalChargesPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalChargesPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "packagePricing",
        "complexType" : "packageTripPricing",
        "getter" : "getPackagePricing",
        "setter" : "setPackagePricing",
        "datatype" : "packageTripPricing",
        "datatypeWithEnum" : "packageTripPricing",
        "name" : "packagePricing",
        "defaultValue" : "null",
        "baseType" : "packageTripPricing",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/packageTripPricing\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "debugTealeafInfo",

        "getter" : "getDebugTealeafInfo",
        "setter" : "setDebugTealeafInfo",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "debugTealeafInfo",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "packageTripPricing", "string", "mobilePrice", "apiNewTripJson", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "tripResponse",
      "classname" : "TripResponse",
      "classVarName" : "tripResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"apiVersion\" : {\n      \"type\" : \"string\"\n    },\n    \"responseType\" : {\n      \"type\" : \"string\"\n    },\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/errorDomain\"\n      }\n    },\n    \"responseData\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/simplifiedTripDomain\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "apiVersion",

        "getter" : "getApiVersion",
        "setter" : "setApiVersion",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "apiVersion",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "responseType",

        "getter" : "getResponseType",
        "setter" : "setResponseType",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "responseType",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errors",
        "complexType" : "errorDomain",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<errorDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/errorDomain\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "responseData",
        "complexType" : "simplifiedTripDomain",
        "getter" : "getResponseData",
        "setter" : "setResponseData",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "responseData",
        "defaultValue" : "new ArrayList<simplifiedTripDomain>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/simplifiedTripDomain\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "simplifiedTripDomain", "string", "errorDomain", "List", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "tripTitleDescriptionUpdateResponse",
      "classname" : "TripTitleDescriptionUpdateResponse",
      "classVarName" : "tripTitleDescriptionUpdateResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"string\"\n    },\n    \"errorMessage\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "status",

        "getter" : "getStatus",
        "setter" : "setStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "status",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errorMessage",

        "getter" : "getErrorMessage",
        "setter" : "setErrorMessage",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "errorMessage",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "signInResponse",
      "classname" : "SignInResponse",
      "classVarName" : "signInResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"tuid\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"expUserId\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"email\" : {\n      \"type\" : \"string\"\n    },\n    \"firstName\" : {\n      \"type\" : \"string\"\n    },\n    \"middleName\" : {\n      \"type\" : \"string\"\n    },\n    \"lastName\" : {\n      \"type\" : \"string\"\n    },\n    \"success\" : {\n      \"type\" : \"boolean\"\n    },\n    \"errors\" : {\n      \"$ref\" : \"#/definitions/mobileError\"\n    },\n    \"detailedStatus\" : {\n      \"type\" : \"string\"\n    },\n    \"detailedStatusMsg\" : {\n      \"type\" : \"string\"\n    },\n    \"phoneNumbers\" : {\n      \"$ref\" : \"#/definitions/jsonPhone\"\n    },\n    \"storedCreditCards\" : {\n      \"$ref\" : \"#/definitions/jsonUserCreditCardInformation\"\n    },\n    \"homeAddress\" : {\n      \"$ref\" : \"#/definitions/jsonAddress\"\n    },\n    \"loyaltyMembershipNumber\" : {\n      \"type\" : \"string\"\n    },\n    \"loyaltyMembershipActive\" : {\n      \"type\" : \"boolean\"\n    },\n    \"loyaltyPointsAvailable\" : {\n      \"type\" : \"boolean\"\n    },\n    \"loyaltyPointsPending\" : {\n      \"type\" : \"boolean\"\n    },\n    \"loyaltyMembershipName\" : {\n      \"type\" : \"string\"\n    },\n    \"membershipTierName\" : {\n      \"type\" : \"string\"\n    },\n    \"loyaltyTierCredits\" : {\n      \"type\" : \"string\"\n    },\n    \"frequentGuestMembership\" : {\n      \"$ref\" : \"#/definitions/jsonFrequentGuestMembership\"\n    },\n    \"isSmokingPreferred\" : {\n      \"type\" : \"boolean\"\n    },\n    \"passports\" : {\n      \"$ref\" : \"#/definitions/jsonPassport\"\n    },\n    \"tsaDetails\" : {\n      \"$ref\" : \"#/definitions/jsonTsaDetails\"\n    },\n    \"seatPreference\" : {\n      \"type\" : \"string\"\n    },\n    \"specialAssistance\" : {\n      \"type\" : \"string\"\n    },\n    \"emergencyContact\" : {\n      \"$ref\" : \"#/definitions/jsonEmergencyContact\"\n    },\n    \"frequentFlyerMemberships\" : {\n      \"$ref\" : \"#/definitions/jsonFrequentFlyerMembership\"\n    },\n    \"associatedTravelers\" : {\n      \"$ref\" : \"#/definitions/jsonAssociatedTraveler\"\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    },\n    \"travelocityItinPath\" : {\n      \"type\" : \"string\"\n    },\n    \"userCoupons\" : {\n      \"type\" : \"string\"\n    },\n    \"loyaltyBonusPoints\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "tuid",

        "getter" : "getTuid",
        "setter" : "setTuid",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "tuid",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "expUserId",

        "getter" : "getExpUserId",
        "setter" : "setExpUserId",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "expUserId",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "email",

        "getter" : "getEmail",
        "setter" : "setEmail",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "email",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "firstName",

        "getter" : "getFirstName",
        "setter" : "setFirstName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "middleName",

        "getter" : "getMiddleName",
        "setter" : "setMiddleName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "middleName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lastName",

        "getter" : "getLastName",
        "setter" : "setLastName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "lastName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "success",

        "getter" : "getSuccess",
        "setter" : "setSuccess",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "success",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "mobileError",
        "datatypeWithEnum" : "mobileError",
        "name" : "errors",
        "defaultValue" : "null",
        "baseType" : "mobileError",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobileError\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "detailedStatus",

        "getter" : "getDetailedStatus",
        "setter" : "setDetailedStatus",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "detailedStatus",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "detailedStatusMsg",

        "getter" : "getDetailedStatusMsg",
        "setter" : "setDetailedStatusMsg",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "detailedStatusMsg",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "phoneNumbers",
        "complexType" : "jsonPhone",
        "getter" : "getPhoneNumbers",
        "setter" : "setPhoneNumbers",
        "datatype" : "jsonPhone",
        "datatypeWithEnum" : "jsonPhone",
        "name" : "phoneNumbers",
        "defaultValue" : "null",
        "baseType" : "jsonPhone",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonPhone\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "storedCreditCards",
        "complexType" : "jsonUserCreditCardInformation",
        "getter" : "getStoredCreditCards",
        "setter" : "setStoredCreditCards",
        "datatype" : "jsonUserCreditCardInformation",
        "datatypeWithEnum" : "jsonUserCreditCardInformation",
        "name" : "storedCreditCards",
        "defaultValue" : "null",
        "baseType" : "jsonUserCreditCardInformation",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonUserCreditCardInformation\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "homeAddress",
        "complexType" : "jsonAddress",
        "getter" : "getHomeAddress",
        "setter" : "setHomeAddress",
        "datatype" : "jsonAddress",
        "datatypeWithEnum" : "jsonAddress",
        "name" : "homeAddress",
        "defaultValue" : "null",
        "baseType" : "jsonAddress",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonAddress\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "loyaltyMembershipNumber",

        "getter" : "getLoyaltyMembershipNumber",
        "setter" : "setLoyaltyMembershipNumber",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "loyaltyMembershipNumber",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "loyaltyMembershipActive",

        "getter" : "getLoyaltyMembershipActive",
        "setter" : "setLoyaltyMembershipActive",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "loyaltyMembershipActive",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "loyaltyPointsAvailable",

        "getter" : "getLoyaltyPointsAvailable",
        "setter" : "setLoyaltyPointsAvailable",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "loyaltyPointsAvailable",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "loyaltyPointsPending",

        "getter" : "getLoyaltyPointsPending",
        "setter" : "setLoyaltyPointsPending",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "loyaltyPointsPending",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "loyaltyMembershipName",

        "getter" : "getLoyaltyMembershipName",
        "setter" : "setLoyaltyMembershipName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "loyaltyMembershipName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "membershipTierName",

        "getter" : "getMembershipTierName",
        "setter" : "setMembershipTierName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "membershipTierName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "loyaltyTierCredits",

        "getter" : "getLoyaltyTierCredits",
        "setter" : "setLoyaltyTierCredits",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "loyaltyTierCredits",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "frequentGuestMembership",
        "complexType" : "jsonFrequentGuestMembership",
        "getter" : "getFrequentGuestMembership",
        "setter" : "setFrequentGuestMembership",
        "datatype" : "jsonFrequentGuestMembership",
        "datatypeWithEnum" : "jsonFrequentGuestMembership",
        "name" : "frequentGuestMembership",
        "defaultValue" : "null",
        "baseType" : "jsonFrequentGuestMembership",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonFrequentGuestMembership\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "isSmokingPreferred",

        "getter" : "getIsSmokingPreferred",
        "setter" : "setIsSmokingPreferred",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "isSmokingPreferred",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "passports",
        "complexType" : "jsonPassport",
        "getter" : "getPassports",
        "setter" : "setPassports",
        "datatype" : "jsonPassport",
        "datatypeWithEnum" : "jsonPassport",
        "name" : "passports",
        "defaultValue" : "null",
        "baseType" : "jsonPassport",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonPassport\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tsaDetails",
        "complexType" : "jsonTsaDetails",
        "getter" : "getTsaDetails",
        "setter" : "setTsaDetails",
        "datatype" : "jsonTsaDetails",
        "datatypeWithEnum" : "jsonTsaDetails",
        "name" : "tsaDetails",
        "defaultValue" : "null",
        "baseType" : "jsonTsaDetails",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonTsaDetails\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "seatPreference",

        "getter" : "getSeatPreference",
        "setter" : "setSeatPreference",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "seatPreference",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "specialAssistance",

        "getter" : "getSpecialAssistance",
        "setter" : "setSpecialAssistance",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "specialAssistance",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "emergencyContact",
        "complexType" : "jsonEmergencyContact",
        "getter" : "getEmergencyContact",
        "setter" : "setEmergencyContact",
        "datatype" : "jsonEmergencyContact",
        "datatypeWithEnum" : "jsonEmergencyContact",
        "name" : "emergencyContact",
        "defaultValue" : "null",
        "baseType" : "jsonEmergencyContact",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonEmergencyContact\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "frequentFlyerMemberships",
        "complexType" : "jsonFrequentFlyerMembership",
        "getter" : "getFrequentFlyerMemberships",
        "setter" : "setFrequentFlyerMemberships",
        "datatype" : "jsonFrequentFlyerMembership",
        "datatypeWithEnum" : "jsonFrequentFlyerMembership",
        "name" : "frequentFlyerMemberships",
        "defaultValue" : "null",
        "baseType" : "jsonFrequentFlyerMembership",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonFrequentFlyerMembership\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "associatedTravelers",
        "complexType" : "jsonAssociatedTraveler",
        "getter" : "getAssociatedTravelers",
        "setter" : "setAssociatedTravelers",
        "datatype" : "jsonAssociatedTraveler",
        "datatypeWithEnum" : "jsonAssociatedTraveler",
        "name" : "associatedTravelers",
        "defaultValue" : "null",
        "baseType" : "jsonAssociatedTraveler",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/jsonAssociatedTraveler\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "travelocityItinPath",

        "getter" : "getTravelocityItinPath",
        "setter" : "setTravelocityItinPath",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "travelocityItinPath",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "userCoupons",

        "getter" : "getUserCoupons",
        "setter" : "setUserCoupons",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "userCoupons",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "loyaltyBonusPoints",

        "getter" : "getLoyaltyBonusPoints",
        "setter" : "setLoyaltyBonusPoints",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "loyaltyBonusPoints",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      } ],
      "imports" : [ "jsonEmergencyContact", "integer", "jsonUserCreditCardInformation", "jsonFrequentGuestMembership", "string", "jsonAddress", "jsonTsaDetails", "jsonPhone", "mobileError", "jsonAssociatedTraveler", "jsonPassport", "jsonFrequentFlyerMembership" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "createUserResponse",
      "classname" : "CreateUserResponse",
      "classVarName" : "createUserResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"tuid\" : {\n      \"type\" : \"string\"\n    },\n    \"email\" : {\n      \"type\" : \"string\"\n    },\n    \"firstName\" : {\n      \"type\" : \"string\"\n    },\n    \"middleName\" : {\n      \"type\" : \"string\"\n    },\n    \"lastName\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "tuid",

        "getter" : "getTuid",
        "setter" : "setTuid",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tuid",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "email",

        "getter" : "getEmail",
        "setter" : "setEmail",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "email",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "firstName",

        "getter" : "getFirstName",
        "setter" : "setFirstName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "firstName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "middleName",

        "getter" : "getMiddleName",
        "setter" : "setMiddleName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "middleName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "lastName",

        "getter" : "getLastName",
        "setter" : "setLastName",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "lastName",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "updateTravelerResponse",
      "classname" : "UpdateTravelerResponse",
      "classVarName" : "updateTravelerResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"succeeded\" : {\n      \"type\" : \"boolean\"\n    },\n    \"tuid\" : {\n      \"type\" : \"string\"\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "succeeded",

        "getter" : "getSucceeded",
        "setter" : "setSucceeded",
        "datatype" : "Boolean",
        "datatypeWithEnum" : "Boolean",
        "name" : "succeeded",
        "defaultValue" : "null",
        "baseType" : "boolean",
        "jsonSchema" : "{\n  \"type\" : \"boolean\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tuid",

        "getter" : "getTuid",
        "setter" : "setTuid",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tuid",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "associateUserToTripResponse",
      "classname" : "AssociateUserToTripResponse",
      "classVarName" : "associateUserToTripResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"newTrip\" : {\n      \"$ref\" : \"#/definitions/apiNewTripJson\"\n    },\n    \"rewardsPoints\" : {\n      \"type\" : \"string\"\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "newTrip",
        "complexType" : "apiNewTripJson",
        "getter" : "getNewTrip",
        "setter" : "setNewTrip",
        "datatype" : "apiNewTripJson",
        "datatypeWithEnum" : "apiNewTripJson",
        "name" : "newTrip",
        "defaultValue" : "null",
        "baseType" : "apiNewTripJson",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/apiNewTripJson\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "rewardsPoints",

        "getter" : "getRewardsPoints",
        "setter" : "setRewardsPoints",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "rewardsPoints",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "apiNewTripJson" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carSearchResponse",
      "classname" : "CarSearchResponse",
      "classVarName" : "carSearchResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"pickupTime\" : {\n      \"type\" : \"string\"\n    },\n    \"dropOffTime\" : {\n      \"type\" : \"string\"\n    },\n    \"offers\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/rentalOffer\"\n      }\n    },\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "pickupTime",

        "getter" : "getPickupTime",
        "setter" : "setPickupTime",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "pickupTime",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "dropOffTime",

        "getter" : "getDropOffTime",
        "setter" : "setDropOffTime",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "dropOffTime",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "offers",
        "complexType" : "rentalOffer",
        "getter" : "getOffers",
        "setter" : "setOffers",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "offers",
        "defaultValue" : "new ArrayList<rentalOffer>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/rentalOffer\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "rentalOffer", "string", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "carCreateTripResponse",
      "classname" : "CarCreateTripResponse",
      "classVarName" : "carCreateTripResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"tripId\" : {\n      \"type\" : \"string\"\n    },\n    \"itineraryNumber\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"newTotalPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"carProduct\" : {\n      \"$ref\" : \"#/definitions/rentalProduct\"\n    },\n    \"oldCarProduct\" : {\n      \"$ref\" : \"#/definitions/rentalProduct\"\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    },\n    \"validFormsOfPayment\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/apiPaymentOptionJson\"\n      }\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "tripId",

        "getter" : "getTripId",
        "setter" : "setTripId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "tripId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "itineraryNumber",

        "getter" : "getItineraryNumber",
        "setter" : "setItineraryNumber",
        "datatype" : "Integer",
        "datatypeWithEnum" : "Integer",
        "name" : "itineraryNumber",
        "defaultValue" : "null",
        "baseType" : "integer",
        "jsonSchema" : "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false,
        "allowableValues" : { }
      }, {
        "baseName" : "newTotalPrice",
        "complexType" : "mobilePrice",
        "getter" : "getNewTotalPrice",
        "setter" : "setNewTotalPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "newTotalPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "carProduct",
        "complexType" : "rentalProduct",
        "getter" : "getCarProduct",
        "setter" : "setCarProduct",
        "datatype" : "rentalProduct",
        "datatypeWithEnum" : "rentalProduct",
        "name" : "carProduct",
        "defaultValue" : "null",
        "baseType" : "rentalProduct",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/rentalProduct\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "oldCarProduct",
        "complexType" : "rentalProduct",
        "getter" : "getOldCarProduct",
        "setter" : "setOldCarProduct",
        "datatype" : "rentalProduct",
        "datatypeWithEnum" : "rentalProduct",
        "name" : "oldCarProduct",
        "defaultValue" : "null",
        "baseType" : "rentalProduct",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/rentalProduct\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "validFormsOfPayment",
        "complexType" : "apiPaymentOptionJson",
        "getter" : "getValidFormsOfPayment",
        "setter" : "setValidFormsOfPayment",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "validFormsOfPayment",
        "defaultValue" : "new ArrayList<apiPaymentOptionJson>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/apiPaymentOptionJson\"\n  }\n}",
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "rentalProduct", "integer", "string", "mobilePrice", "List", "mobileError", "apiPaymentOptionJson", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "apiCheckoutResponseCarsResponse",
      "classname" : "ApiCheckoutResponseCarsResponse",
      "classVarName" : "apiCheckoutResponseCarsResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"newTrip\" : {\n      \"$ref\" : \"#/definitions/apiNewTripJson\"\n    },\n    \"orderId\" : {\n      \"type\" : \"string\"\n    },\n    \"currencyCode\" : {\n      \"type\" : \"string\"\n    },\n    \"totalCharges\" : {\n      \"type\" : \"string\"\n    },\n    \"totalChargesPrice\" : {\n      \"$ref\" : \"#/definitions/mobilePrice\"\n    },\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/mobileError\"\n      }\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    },\n    \"debugTealeafInfo\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "newTrip",
        "complexType" : "apiNewTripJson",
        "getter" : "getNewTrip",
        "setter" : "setNewTrip",
        "datatype" : "apiNewTripJson",
        "datatypeWithEnum" : "apiNewTripJson",
        "name" : "newTrip",
        "defaultValue" : "null",
        "baseType" : "apiNewTripJson",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/apiNewTripJson\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "orderId",

        "getter" : "getOrderId",
        "setter" : "setOrderId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "orderId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "currencyCode",

        "getter" : "getCurrencyCode",
        "setter" : "setCurrencyCode",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "currencyCode",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalCharges",

        "getter" : "getTotalCharges",
        "setter" : "setTotalCharges",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "totalCharges",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "totalChargesPrice",
        "complexType" : "mobilePrice",
        "getter" : "getTotalChargesPrice",
        "setter" : "setTotalChargesPrice",
        "datatype" : "mobilePrice",
        "datatypeWithEnum" : "mobilePrice",
        "name" : "totalChargesPrice",
        "defaultValue" : "null",
        "baseType" : "mobilePrice",
        "jsonSchema" : "{\n  \"$ref\" : \"#/definitions/mobilePrice\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "errors",
        "complexType" : "mobileError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<mobileError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/mobileError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "debugTealeafInfo",

        "getter" : "getDebugTealeafInfo",
        "setter" : "setDebugTealeafInfo",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "debugTealeafInfo",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "mobilePrice", "apiNewTripJson", "List", "mobileError", "array" ],
      "hasVars" : true,
      "hasMoreModels" : true
    }
  }, {
    "model" : {
      "name" : "apiErrorJsonResponse",
      "classname" : "ApiErrorJsonResponse",
      "classVarName" : "apiErrorJsonResponse",
      "modelJson" : "{\n  \"properties\" : {\n    \"errors\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/flightServiceError\"\n      }\n    },\n    \"activityId\" : {\n      \"type\" : \"string\"\n    },\n    \"debugTealeafInfo\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
      "vars" : [ {
        "baseName" : "errors",
        "complexType" : "flightServiceError",
        "getter" : "getErrors",
        "setter" : "setErrors",
        "datatype" : "List",
        "datatypeWithEnum" : "List",
        "name" : "errors",
        "defaultValue" : "new ArrayList<flightServiceError>() ",
        "baseType" : "array",
        "containerType" : "array",
        "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/definitions/flightServiceError\"\n  }\n}",
        "hasMore" : true,
        "required" : false,
        "isContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "activityId",

        "getter" : "getActivityId",
        "setter" : "setActivityId",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "activityId",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "hasMore" : true,
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      }, {
        "baseName" : "debugTealeafInfo",

        "getter" : "getDebugTealeafInfo",
        "setter" : "setDebugTealeafInfo",
        "datatype" : "String",
        "datatypeWithEnum" : "String",
        "name" : "debugTealeafInfo",
        "defaultValue" : "null",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "required" : false,
        "isNotContainer" : true,
        "isEnum" : false
      } ],
      "imports" : [ "string", "List", "flightServiceError", "array" ],
      "hasVars" : true
    }
  } ],
  "basePath" : "https://localhost/",
  "appName" : "Flights, Hotels, Packages, Trips, User API",
  "apiFolder" : "",
  "apiInfo" : {
    "apis" : [ {
      "hasMore" : "true",
      "modelPackage" : "",
      "classname" : "UserApi",
      "package" : "",
      "imports" : [ {
        "import" : "associateUserToTripResponse"
      }, {
        "import" : "string"
      }, {
        "import" : "createUserResponse"
      }, {
        "import" : "signInResponse"
      }, {
        "import" : "integer"
      }, {
        "import" : "updateTravelerResponse"
      } ],
      "version" : "0.0.1",
      "classVarName" : "user",
      "basePath" : "https://localhost/",
      "appName" : "Flights, Hotels, Packages, Trips, User API",
      "baseName" : "User",
      "contextPath" : "/",
      "operations" : {
        "operation" : [ {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/user/associateUserToTrip",
          "operationId" : "user-associate-to-trip",
          "returnType" : "associateUserToTripResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "associateUserToTripResponse",
          "summary" : "Associate User To Trip",
          "notes" : "Mobile API User Associate To Trip",
          "baseName" : "User",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "baseName" : "foo",
            "paramName" : "foo",
            "dataType" : "String",
            "description" : "stubbed",
            "jsonSchema" : "{\n  \"name\" : \"foo\",\n  \"in\" : \"formData\",\n  \"description\" : \"stubbed\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "baseName" : "foo",
            "paramName" : "foo",
            "dataType" : "String",
            "description" : "stubbed",
            "jsonSchema" : "{\n  \"name\" : \"foo\",\n  \"in\" : \"formData\",\n  \"description\" : \"stubbed\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "tags" : [ "User" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "associateUserToTripResponse",
            "baseType" : "associateUserToTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/associateUserToTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/associateUserToTripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "associateUserToTripResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"activityId\" : \"aeiou\",\\n  \"rewardsPoints\" : \"aeiou\",\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "user-associate-to-trip"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/user/create",
          "operationId" : "create-user",
          "returnType" : "createUserResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "createUserResponse",
          "summary" : "Create User",
          "notes" : "Mobile API User Create",
          "baseName" : "User",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "Users email address",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"formData\",\n  \"description\" : \"Users email address\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "password",
            "paramName" : "password",
            "dataType" : "String",
            "description" : "Users password",
            "jsonSchema" : "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"Users password\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "firstName",
            "paramName" : "firstName",
            "dataType" : "String",
            "description" : "Users first name",
            "jsonSchema" : "{\n  \"name\" : \"firstName\",\n  \"in\" : \"formData\",\n  \"description\" : \"Users first name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "middleName",
            "paramName" : "middleName",
            "dataType" : "String",
            "description" : "Users middle name",
            "jsonSchema" : "{\n  \"name\" : \"middleName\",\n  \"in\" : \"formData\",\n  \"description\" : \"Users middle name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "lastName",
            "paramName" : "lastName",
            "dataType" : "String",
            "description" : "Users last name",
            "jsonSchema" : "{\n  \"name\" : \"lastName\",\n  \"in\" : \"formData\",\n  \"description\" : \"Users last name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "expediaEmailOptIn",
            "paramName" : "expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "Whether to opt-in the user's email to travel deals",
            "jsonSchema" : "{\n  \"name\" : \"expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to opt-in the user's email to travel deals\",\n  \"required\" : true,\n  \"type\" : \"boolean\"\n}",
            "required" : true
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "Users email address",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"formData\",\n  \"description\" : \"Users email address\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "password",
            "paramName" : "password",
            "dataType" : "String",
            "description" : "Users password",
            "jsonSchema" : "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"Users password\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "firstName",
            "paramName" : "firstName",
            "dataType" : "String",
            "description" : "Users first name",
            "jsonSchema" : "{\n  \"name\" : \"firstName\",\n  \"in\" : \"formData\",\n  \"description\" : \"Users first name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "middleName",
            "paramName" : "middleName",
            "dataType" : "String",
            "description" : "Users middle name",
            "jsonSchema" : "{\n  \"name\" : \"middleName\",\n  \"in\" : \"formData\",\n  \"description\" : \"Users middle name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "lastName",
            "paramName" : "lastName",
            "dataType" : "String",
            "description" : "Users last name",
            "jsonSchema" : "{\n  \"name\" : \"lastName\",\n  \"in\" : \"formData\",\n  \"description\" : \"Users last name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "expediaEmailOptIn",
            "paramName" : "expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "Whether to opt-in the user's email to travel deals",
            "jsonSchema" : "{\n  \"name\" : \"expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to opt-in the user's email to travel deals\",\n  \"required\" : true,\n  \"type\" : \"boolean\"\n}",
            "required" : true
          } ],
          "tags" : [ "User" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "createUserResponse",
            "baseType" : "createUserResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/createUserResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/createUserResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "string", "createUserResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"middleName\" : \"aeiou\",\\n  \"lastName\" : \"aeiou\",\\n  \"tuid\" : \"aeiou\",\\n  \"email\" : \"aeiou\",\\n  \"firstName\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "create-user"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/user/profile",
          "operationId" : "profile-user",
          "returnType" : "signInResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "signInResponse",
          "summary" : "Profile",
          "notes" : "Mobile API User Profile",
          "baseName" : "User",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "tuid",
            "paramName" : "tuid",
            "dataType" : "Integer",
            "description" : "The tuid of the user/account whose profile you would like.",
            "jsonSchema" : "{\n  \"name\" : \"tuid\",\n  \"in\" : \"query\",\n  \"description\" : \"The tuid of the user/account whose profile you would like.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "profileTypes",
            "paramName" : "profileTypes",
            "dataType" : "String",
            "description" : "This is a comma-separated list of profile types to retrieve when the login is processed. E.g., profileType=HOTEL,FLIGHT. Options are currently HOTEL or FLIGHT.",
            "jsonSchema" : "{\n  \"name\" : \"profileTypes\",\n  \"in\" : \"query\",\n  \"description\" : \"This is a comma-separated list of profile types to retrieve when the login is processed. E.g., profileType=HOTEL,FLIGHT. Options are currently HOTEL or FLIGHT.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "retrieveCoupons",
            "paramName" : "retrieveCoupons",
            "dataType" : "Boolean",
            "description" : "Whether to include user coupons in the response.",
            "jsonSchema" : "{\n  \"name\" : \"retrieveCoupons\",\n  \"in\" : \"query\",\n  \"description\" : \"Whether to include user coupons in the response.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "tuid",
            "paramName" : "tuid",
            "dataType" : "Integer",
            "description" : "The tuid of the user/account whose profile you would like.",
            "jsonSchema" : "{\n  \"name\" : \"tuid\",\n  \"in\" : \"query\",\n  \"description\" : \"The tuid of the user/account whose profile you would like.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "profileTypes",
            "paramName" : "profileTypes",
            "dataType" : "String",
            "description" : "This is a comma-separated list of profile types to retrieve when the login is processed. E.g., profileType=HOTEL,FLIGHT. Options are currently HOTEL or FLIGHT.",
            "jsonSchema" : "{\n  \"name\" : \"profileTypes\",\n  \"in\" : \"query\",\n  \"description\" : \"This is a comma-separated list of profile types to retrieve when the login is processed. E.g., profileType=HOTEL,FLIGHT. Options are currently HOTEL or FLIGHT.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "retrieveCoupons",
            "paramName" : "retrieveCoupons",
            "dataType" : "Boolean",
            "description" : "Whether to include user coupons in the response.",
            "jsonSchema" : "{\n  \"name\" : \"retrieveCoupons\",\n  \"in\" : \"query\",\n  \"description\" : \"Whether to include user coupons in the response.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "User" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "signInResponse",
            "baseType" : "signInResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/signInResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/signInResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "signInResponse", "integer", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"frequentGuestMembership\" : {\\n    \"hotelMembershipNumber\" : \"aeiou\",\\n    \"frequentGuestMembershipCode\" : \"aeiou\",\\n    \"frequentGuestMembershipID\" : \"aeiou\"\\n  },\\n  \"detailedStatus\" : \"aeiou\",\\n  \"travelocityItinPath\" : \"aeiou\",\\n  \"seatPreference\" : \"aeiou\",\\n  \"tuid\" : 123,\\n  \"expUserId\" : 123,\\n  \"loyaltyMembershipNumber\" : \"aeiou\",\\n  \"loyaltyTierCredits\" : \"aeiou\",\\n  \"loyaltyBonusPoints\" : 123,\\n  \"activityId\" : \"aeiou\",\\n  \"errors\" : {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  },\\n  \"storedCreditCards\" : {\\n    \"expirationDate\" : \"aeiou\",\\n    \"expired\" : \"aeiou\",\\n    \"description\" : \"aeiou\",\\n    \"nameOnCard\" : \"aeiou\",\\n    \"creditCardType\" : \"aeiou\",\\n    \"paymentsInstrumentsId\" : \"aeiou\"\\n  },\\n  \"loyaltyMembershipActive\" : true,\\n  \"homeAddress\" : {\\n    \"postalCode\" : \"aeiou\",\\n    \"secondAddressLine\" : \"aeiou\",\\n    \"categoryCode\" : \"aeiou\",\\n    \"province\" : \"aeiou\",\\n    \"firstAddressLine\" : \"aeiou\",\\n    \"countryAlpha3Code\" : \"aeiou\",\\n    \"city\" : \"aeiou\"\\n  },\\n  \"isSmokingPreferred\" : true,\\n  \"tsaDetails\" : {\\n    \"dateOfBirth\" : \"aeiou\",\\n    \"redressNumber\" : \"aeiou\",\\n    \"gender\" : \"aeiou\"\\n  },\\n  \"firstName\" : \"aeiou\",\\n  \"detailedStatusMsg\" : \"aeiou\",\\n  \"passports\" : {\\n    \"countryCode\" : \"aeiou\"\\n  },\\n  \"middleName\" : \"aeiou\",\\n  \"loyaltyMembershipName\" : \"aeiou\",\\n  \"specialAssistance\" : \"aeiou\",\\n  \"lastName\" : \"aeiou\",\\n  \"phoneNumbers\" : {\\n    \"category\" : \"aeiou\",\\n    \"areaCode\" : \"aeiou\",\\n    \"countryCode\" : \"aeiou\",\\n    \"number\" : \"aeiou\",\\n    \"extensionNumber\" : \"aeiou\"\\n  },\\n  \"membershipTierName\" : \"aeiou\",\\n  \"emergencyContact\" : {\\n    \"middleName\" : \"aeiou\",\\n    \"lastName\" : \"aeiou\",\\n    \"phone\" : null,\\n    \"firstName\" : \"aeiou\"\\n  },\\n  \"frequentFlyerMemberships\" : {\\n    \"airlineCode\" : \"aeiou\",\\n    \"planCode\" : \"aeiou\",\\n    \"membershipNumber\" : \"aeiou\"\\n  },\\n  \"email\" : \"aeiou\",\\n  \"loyaltyPointsAvailable\" : true,\\n  \"userCoupons\" : \"aeiou\",\\n  \"loyaltyPointsPending\" : true,\\n  \"associatedTravelers\" : {\\n    \"middleName\" : \"aeiou\",\\n    \"lastName\" : \"aeiou\",\\n    \"tuid\" : 123,\\n    \"firstName\" : \"aeiou\"\\n  },\\n  \"success\" : true\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "profile-user"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/user/sign-in",
          "operationId" : "signin-user",
          "returnType" : "signInResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "signInResponse",
          "summary" : "User Sign-In",
          "notes" : "Mobile API User Sign-In",
          "baseName" : "User",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "Email Address. Used at the time of User creation in /api/user/create",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email Address. Used at the time of User creation in /api/user/create\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "password",
            "paramName" : "password",
            "dataType" : "String",
            "description" : "User Password. Used at the time of User creation in /api/user/create",
            "jsonSchema" : "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"User Password. Used at the time of User creation in /api/user/create\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "staySignedIn",
            "paramName" : "staySignedIn",
            "dataType" : "Boolean",
            "description" : "Sign Me In checkbox",
            "jsonSchema" : "{\n  \"name\" : \"staySignedIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"Sign Me In checkbox\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "profileOnly",
            "paramName" : "profileOnly",
            "dataType" : "Boolean",
            "description" : "If true, don't provide username/password fields and just re-retrieve the currently signed on user's profile. If this is false or not provided, force re-authentication of the user.",
            "jsonSchema" : "{\n  \"name\" : \"profileOnly\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, don't provide username/password fields and just re-retrieve the currently signed on user's profile. If this is false or not provided, force re-authentication of the user.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "includeFullPaymentProfile",
            "paramName" : "includeFullPaymentProfile",
            "dataType" : "Boolean",
            "description" : "",
            "jsonSchema" : "{\n  \"name\" : \"includeFullPaymentProfile\",\n  \"in\" : \"formData\",\n  \"description\" : \"\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "itinNumber",
            "paramName" : "itinNumber",
            "dataType" : "String",
            "description" : "The Itinerary Number can be used instead of a password to authenticate the user.",
            "jsonSchema" : "{\n  \"name\" : \"itinNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The Itinerary Number can be used instead of a password to authenticate the user.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "guestLoginWithItin",
            "paramName" : "guestLoginWithItin",
            "dataType" : "Boolean",
            "description" : "When logging in with an Itin Number and Email set this field to True. Default value is false.",
            "jsonSchema" : "{\n  \"name\" : \"guestLoginWithItin\",\n  \"in\" : \"formData\",\n  \"description\" : \"When logging in with an Itin Number and Email set this field to True. Default value is false.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "profileTypes",
            "paramName" : "profileTypes",
            "dataType" : "String",
            "description" : "This is a comma-separated list of profile types to retrieve when the login is processed. E.g., profileType=HOTEL,FLIGHT. Options are currently HOTEL, FLIGHT, or NONE. If NONE is the type, it should be the only one in the list.",
            "jsonSchema" : "{\n  \"name\" : \"profileTypes\",\n  \"in\" : \"formData\",\n  \"description\" : \"This is a comma-separated list of profile types to retrieve when the login is processed. E.g., profileType=HOTEL,FLIGHT. Options are currently HOTEL, FLIGHT, or NONE. If NONE is the type, it should be the only one in the list.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "retrieveCoupons",
            "paramName" : "retrieveCoupons",
            "dataType" : "Boolean",
            "description" : "Whether to include user coupons in the response.",
            "jsonSchema" : "{\n  \"name\" : \"retrieveCoupons\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to include user coupons in the response.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "firstTimeSigin",
            "paramName" : "firstTimeSigin",
            "dataType" : "Boolean",
            "description" : "Boolean to indicate if this is a first time sign-in.",
            "jsonSchema" : "{\n  \"name\" : \"firstTimeSigin\",\n  \"in\" : \"formData\",\n  \"description\" : \"Boolean to indicate if this is a first time sign-in.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "Email Address. Used at the time of User creation in /api/user/create",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email Address. Used at the time of User creation in /api/user/create\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "password",
            "paramName" : "password",
            "dataType" : "String",
            "description" : "User Password. Used at the time of User creation in /api/user/create",
            "jsonSchema" : "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"User Password. Used at the time of User creation in /api/user/create\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "staySignedIn",
            "paramName" : "staySignedIn",
            "dataType" : "Boolean",
            "description" : "Sign Me In checkbox",
            "jsonSchema" : "{\n  \"name\" : \"staySignedIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"Sign Me In checkbox\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "profileOnly",
            "paramName" : "profileOnly",
            "dataType" : "Boolean",
            "description" : "If true, don't provide username/password fields and just re-retrieve the currently signed on user's profile. If this is false or not provided, force re-authentication of the user.",
            "jsonSchema" : "{\n  \"name\" : \"profileOnly\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, don't provide username/password fields and just re-retrieve the currently signed on user's profile. If this is false or not provided, force re-authentication of the user.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "includeFullPaymentProfile",
            "paramName" : "includeFullPaymentProfile",
            "dataType" : "Boolean",
            "description" : "",
            "jsonSchema" : "{\n  \"name\" : \"includeFullPaymentProfile\",\n  \"in\" : \"formData\",\n  \"description\" : \"\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "itinNumber",
            "paramName" : "itinNumber",
            "dataType" : "String",
            "description" : "The Itinerary Number can be used instead of a password to authenticate the user.",
            "jsonSchema" : "{\n  \"name\" : \"itinNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The Itinerary Number can be used instead of a password to authenticate the user.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "guestLoginWithItin",
            "paramName" : "guestLoginWithItin",
            "dataType" : "Boolean",
            "description" : "When logging in with an Itin Number and Email set this field to True. Default value is false.",
            "jsonSchema" : "{\n  \"name\" : \"guestLoginWithItin\",\n  \"in\" : \"formData\",\n  \"description\" : \"When logging in with an Itin Number and Email set this field to True. Default value is false.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "profileTypes",
            "paramName" : "profileTypes",
            "dataType" : "String",
            "description" : "This is a comma-separated list of profile types to retrieve when the login is processed. E.g., profileType=HOTEL,FLIGHT. Options are currently HOTEL, FLIGHT, or NONE. If NONE is the type, it should be the only one in the list.",
            "jsonSchema" : "{\n  \"name\" : \"profileTypes\",\n  \"in\" : \"formData\",\n  \"description\" : \"This is a comma-separated list of profile types to retrieve when the login is processed. E.g., profileType=HOTEL,FLIGHT. Options are currently HOTEL, FLIGHT, or NONE. If NONE is the type, it should be the only one in the list.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "retrieveCoupons",
            "paramName" : "retrieveCoupons",
            "dataType" : "Boolean",
            "description" : "Whether to include user coupons in the response.",
            "jsonSchema" : "{\n  \"name\" : \"retrieveCoupons\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to include user coupons in the response.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "firstTimeSigin",
            "paramName" : "firstTimeSigin",
            "dataType" : "Boolean",
            "description" : "Boolean to indicate if this is a first time sign-in.",
            "jsonSchema" : "{\n  \"name\" : \"firstTimeSigin\",\n  \"in\" : \"formData\",\n  \"description\" : \"Boolean to indicate if this is a first time sign-in.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "tags" : [ "User" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "signInResponse",
            "baseType" : "signInResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/signInResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/signInResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "signInResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"frequentGuestMembership\" : {\\n    \"hotelMembershipNumber\" : \"aeiou\",\\n    \"frequentGuestMembershipCode\" : \"aeiou\",\\n    \"frequentGuestMembershipID\" : \"aeiou\"\\n  },\\n  \"detailedStatus\" : \"aeiou\",\\n  \"travelocityItinPath\" : \"aeiou\",\\n  \"seatPreference\" : \"aeiou\",\\n  \"tuid\" : 123,\\n  \"expUserId\" : 123,\\n  \"loyaltyMembershipNumber\" : \"aeiou\",\\n  \"loyaltyTierCredits\" : \"aeiou\",\\n  \"loyaltyBonusPoints\" : 123,\\n  \"activityId\" : \"aeiou\",\\n  \"errors\" : {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  },\\n  \"storedCreditCards\" : {\\n    \"expirationDate\" : \"aeiou\",\\n    \"expired\" : \"aeiou\",\\n    \"description\" : \"aeiou\",\\n    \"nameOnCard\" : \"aeiou\",\\n    \"creditCardType\" : \"aeiou\",\\n    \"paymentsInstrumentsId\" : \"aeiou\"\\n  },\\n  \"loyaltyMembershipActive\" : true,\\n  \"homeAddress\" : {\\n    \"postalCode\" : \"aeiou\",\\n    \"secondAddressLine\" : \"aeiou\",\\n    \"categoryCode\" : \"aeiou\",\\n    \"province\" : \"aeiou\",\\n    \"firstAddressLine\" : \"aeiou\",\\n    \"countryAlpha3Code\" : \"aeiou\",\\n    \"city\" : \"aeiou\"\\n  },\\n  \"isSmokingPreferred\" : true,\\n  \"tsaDetails\" : {\\n    \"dateOfBirth\" : \"aeiou\",\\n    \"redressNumber\" : \"aeiou\",\\n    \"gender\" : \"aeiou\"\\n  },\\n  \"firstName\" : \"aeiou\",\\n  \"detailedStatusMsg\" : \"aeiou\",\\n  \"passports\" : {\\n    \"countryCode\" : \"aeiou\"\\n  },\\n  \"middleName\" : \"aeiou\",\\n  \"loyaltyMembershipName\" : \"aeiou\",\\n  \"specialAssistance\" : \"aeiou\",\\n  \"lastName\" : \"aeiou\",\\n  \"phoneNumbers\" : {\\n    \"category\" : \"aeiou\",\\n    \"areaCode\" : \"aeiou\",\\n    \"countryCode\" : \"aeiou\",\\n    \"number\" : \"aeiou\",\\n    \"extensionNumber\" : \"aeiou\"\\n  },\\n  \"membershipTierName\" : \"aeiou\",\\n  \"emergencyContact\" : {\\n    \"middleName\" : \"aeiou\",\\n    \"lastName\" : \"aeiou\",\\n    \"phone\" : null,\\n    \"firstName\" : \"aeiou\"\\n  },\\n  \"frequentFlyerMemberships\" : {\\n    \"airlineCode\" : \"aeiou\",\\n    \"planCode\" : \"aeiou\",\\n    \"membershipNumber\" : \"aeiou\"\\n  },\\n  \"email\" : \"aeiou\",\\n  \"loyaltyPointsAvailable\" : true,\\n  \"userCoupons\" : \"aeiou\",\\n  \"loyaltyPointsPending\" : true,\\n  \"associatedTravelers\" : {\\n    \"middleName\" : \"aeiou\",\\n    \"lastName\" : \"aeiou\",\\n    \"tuid\" : 123,\\n    \"firstName\" : \"aeiou\"\\n  },\\n  \"success\" : true\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "signin-user"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "path" : "/api/user/update-traveler",
          "operationId" : "update-traveler",
          "returnType" : "updateTravelerResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "updateTravelerResponse",
          "summary" : "Update",
          "notes" : "Mobile API User Update Traveler",
          "baseName" : "User",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "title",
            "paramName" : "title",
            "dataType" : "String",
            "description" : "Title of passenger",
            "jsonSchema" : "{\n  \"name\" : \"title\",\n  \"in\" : \"formData\",\n  \"description\" : \"Title of passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "firstName",
            "paramName" : "firstName",
            "dataType" : "String",
            "description" : "The first name of the traveler. 2 character min.",
            "jsonSchema" : "{\n  \"name\" : \"firstName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The first name of the traveler. 2 character min.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "middleName",
            "paramName" : "middleName",
            "dataType" : "String",
            "description" : "The middle name of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"middleName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The middle name of the traveler.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "lastName",
            "paramName" : "lastName",
            "dataType" : "String",
            "description" : "The last name of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"lastName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The last name of the traveler.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phoneCountryCode",
            "paramName" : "phoneCountryCode",
            "dataType" : "Integer",
            "description" : "The country code of the phone number of the traveler. Only the numeric values in this field are used. E.g., +44 is treated internally as 44.",
            "jsonSchema" : "{\n  \"name\" : \"phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The country code of the phone number of the traveler. Only the numeric values in this field are used. E.g., +44 is treated internally as 44.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phone",
            "paramName" : "phone",
            "dataType" : "Integer",
            "description" : "The phone number of the traveler. Only the numeric values in this field are used. E.g., 555-1234 is treated internally as 5551234.",
            "jsonSchema" : "{\n  \"name\" : \"phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"The phone number of the traveler. Only the numeric values in this field are used. E.g., 555-1234 is treated internally as 5551234.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"formData\",\n  \"description\" : \"This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "gender",
            "paramName" : "gender",
            "dataType" : "String",
            "description" : "TSA required field, MALE or FEMALE.",
            "jsonSchema" : "{\n  \"name\" : \"gender\",\n  \"in\" : \"formData\",\n  \"description\" : \"TSA required field, MALE or FEMALE.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"MALE\", \"FEMALE\" ]\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "birthDate",
            "paramName" : "birthDate",
            "dataType" : "String",
            "description" : "TSA required field; passenger's birth date.",
            "jsonSchema" : "{\n  \"name\" : \"birthDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"TSA required field; passenger's birth date.\",\n  \"required\" : false,\n  \"type\" : \"date\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "seatPreference",
            "paramName" : "seatPreference",
            "dataType" : "String",
            "description" : "Passenger's seat preference. Options are WINDOW, AISLE, or UNASSIGNED (default)",
            "jsonSchema" : "{\n  \"name\" : \"seatPreference\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passenger's seat preference. Options are WINDOW, AISLE, or UNASSIGNED (default)\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"UNASSIGNED\", \"AISLE\", \"WINDOW\" ]\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "passengerCategory",
            "paramName" : "passengerCategory",
            "dataType" : "String",
            "description" : "The passenger's category. (Default ADULT)",
            "jsonSchema" : "{\n  \"name\" : \"passengerCategory\",\n  \"in\" : \"formData\",\n  \"description\" : \"The passenger's category. (Default ADULT)\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"ADULT\", \"SENIOR\", \"CHILD\", \"ADULT_CHILD\", \"INFANT_IN_LAP\", \"INFANT_IN_SEAT\" ]\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "passportCountryCode",
            "paramName" : "passportCountryCode",
            "dataType" : "String",
            "description" : "Passport country, UPPERCASE three letter country code. Only required for international travel.",
            "jsonSchema" : "{\n  \"name\" : \"passportCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passport country, UPPERCASE three letter country code. Only required for international travel.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "TSARedressNumber",
            "paramName" : "TSARedressNumber",
            "dataType" : "String",
            "description" : "Passenger's TSA redress number, which is, in theory a 7 digit number.",
            "jsonSchema" : "{\n  \"name\" : \"TSARedressNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passenger's TSA redress number, which is, in theory a 7 digit number.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "specialAssistanceOption",
            "paramName" : "specialAssistanceOption",
            "dataType" : "String",
            "description" : "Special assistance choice. This is one value, the same string returned from the profile call. Defaults to NONE if not provided.",
            "jsonSchema" : "{\n  \"name\" : \"specialAssistanceOption\",\n  \"in\" : \"formData\",\n  \"description\" : \"Special assistance choice. This is one value, the same string returned from the profile call. Defaults to NONE if not provided.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"NONE\", \"BLIND_WITH_SEEING_EYE_DOG\", \"DEAF_WITH_HEARING_DOG\", \"WHEELCHAIR_CAN_CLIMB_STAIRS\", \"WHEELCHAIR_CANNOT_CLIMB_STAIRS\", \"WHEELCHAIR_IMMOBILE\", \"BLINDWITHSEEINGEYEDOG\", \"DEAFWITHHEARINGDOG\", \"WHEELCHAIRCANCLIMBSTAIRS\", \"WHEELCHAIRCANNOTCLIMBSTAIRS\", \"WHEELCHAIRIMMOBILE\" ]\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "password",
            "paramName" : "password",
            "dataType" : "String",
            "description" : "The password provided by the Expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.",
            "jsonSchema" : "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"The password provided by the Expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "expediaEmailOptIn",
            "paramName" : "expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "Whether to opt-in the user's email to travel deals.",
            "jsonSchema" : "{\n  \"name\" : \"expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to opt-in the user's email to travel deals.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "title",
            "paramName" : "title",
            "dataType" : "String",
            "description" : "Title of passenger",
            "jsonSchema" : "{\n  \"name\" : \"title\",\n  \"in\" : \"formData\",\n  \"description\" : \"Title of passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "firstName",
            "paramName" : "firstName",
            "dataType" : "String",
            "description" : "The first name of the traveler. 2 character min.",
            "jsonSchema" : "{\n  \"name\" : \"firstName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The first name of the traveler. 2 character min.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "middleName",
            "paramName" : "middleName",
            "dataType" : "String",
            "description" : "The middle name of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"middleName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The middle name of the traveler.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "lastName",
            "paramName" : "lastName",
            "dataType" : "String",
            "description" : "The last name of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"lastName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The last name of the traveler.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phoneCountryCode",
            "paramName" : "phoneCountryCode",
            "dataType" : "Integer",
            "description" : "The country code of the phone number of the traveler. Only the numeric values in this field are used. E.g., +44 is treated internally as 44.",
            "jsonSchema" : "{\n  \"name\" : \"phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The country code of the phone number of the traveler. Only the numeric values in this field are used. E.g., +44 is treated internally as 44.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phone",
            "paramName" : "phone",
            "dataType" : "Integer",
            "description" : "The phone number of the traveler. Only the numeric values in this field are used. E.g., 555-1234 is treated internally as 5551234.",
            "jsonSchema" : "{\n  \"name\" : \"phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"The phone number of the traveler. Only the numeric values in this field are used. E.g., 555-1234 is treated internally as 5551234.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"formData\",\n  \"description\" : \"This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "gender",
            "paramName" : "gender",
            "dataType" : "String",
            "description" : "TSA required field, MALE or FEMALE.",
            "jsonSchema" : "{\n  \"name\" : \"gender\",\n  \"in\" : \"formData\",\n  \"description\" : \"TSA required field, MALE or FEMALE.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"MALE\", \"FEMALE\" ]\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "birthDate",
            "paramName" : "birthDate",
            "dataType" : "String",
            "description" : "TSA required field; passenger's birth date.",
            "jsonSchema" : "{\n  \"name\" : \"birthDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"TSA required field; passenger's birth date.\",\n  \"required\" : false,\n  \"type\" : \"date\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "seatPreference",
            "paramName" : "seatPreference",
            "dataType" : "String",
            "description" : "Passenger's seat preference. Options are WINDOW, AISLE, or UNASSIGNED (default)",
            "jsonSchema" : "{\n  \"name\" : \"seatPreference\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passenger's seat preference. Options are WINDOW, AISLE, or UNASSIGNED (default)\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"UNASSIGNED\", \"AISLE\", \"WINDOW\" ]\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "passengerCategory",
            "paramName" : "passengerCategory",
            "dataType" : "String",
            "description" : "The passenger's category. (Default ADULT)",
            "jsonSchema" : "{\n  \"name\" : \"passengerCategory\",\n  \"in\" : \"formData\",\n  \"description\" : \"The passenger's category. (Default ADULT)\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"ADULT\", \"SENIOR\", \"CHILD\", \"ADULT_CHILD\", \"INFANT_IN_LAP\", \"INFANT_IN_SEAT\" ]\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "passportCountryCode",
            "paramName" : "passportCountryCode",
            "dataType" : "String",
            "description" : "Passport country, UPPERCASE three letter country code. Only required for international travel.",
            "jsonSchema" : "{\n  \"name\" : \"passportCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passport country, UPPERCASE three letter country code. Only required for international travel.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "TSARedressNumber",
            "paramName" : "TSARedressNumber",
            "dataType" : "String",
            "description" : "Passenger's TSA redress number, which is, in theory a 7 digit number.",
            "jsonSchema" : "{\n  \"name\" : \"TSARedressNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passenger's TSA redress number, which is, in theory a 7 digit number.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "specialAssistanceOption",
            "paramName" : "specialAssistanceOption",
            "dataType" : "String",
            "description" : "Special assistance choice. This is one value, the same string returned from the profile call. Defaults to NONE if not provided.",
            "jsonSchema" : "{\n  \"name\" : \"specialAssistanceOption\",\n  \"in\" : \"formData\",\n  \"description\" : \"Special assistance choice. This is one value, the same string returned from the profile call. Defaults to NONE if not provided.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"NONE\", \"BLIND_WITH_SEEING_EYE_DOG\", \"DEAF_WITH_HEARING_DOG\", \"WHEELCHAIR_CAN_CLIMB_STAIRS\", \"WHEELCHAIR_CANNOT_CLIMB_STAIRS\", \"WHEELCHAIR_IMMOBILE\", \"BLINDWITHSEEINGEYEDOG\", \"DEAFWITHHEARINGDOG\", \"WHEELCHAIRCANCLIMBSTAIRS\", \"WHEELCHAIRCANNOTCLIMBSTAIRS\", \"WHEELCHAIRIMMOBILE\" ]\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "password",
            "paramName" : "password",
            "dataType" : "String",
            "description" : "The password provided by the Expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.",
            "jsonSchema" : "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"The password provided by the Expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "expediaEmailOptIn",
            "paramName" : "expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "Whether to opt-in the user's email to travel deals.",
            "jsonSchema" : "{\n  \"name\" : \"expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to opt-in the user's email to travel deals.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "tags" : [ "User" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "updateTravelerResponse",
            "baseType" : "updateTravelerResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/updateTravelerResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/updateTravelerResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "integer", "string", "updateTravelerResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"activityId\" : \"aeiou\",\\n  \"succeeded\" : true,\\n  \"tuid\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "update-traveler"
        } ],
        "classname" : "UserApi"
      },
      "appDescription" : "Expedia Mobile API Documentation. <br><font color=\"blue\"> (Note: In case of authorization exception, just <a href=\"/static/mobile/swaggerui/#!/User/signin-user\">Sign-In</a>)</font>"
    }, {
      "hasMore" : "true",
      "modelPackage" : "",
      "classname" : "CarsApi",
      "package" : "",
      "imports" : [ {
        "import" : "carCreateTripResponse"
      }, {
        "import" : "string"
      }, {
        "import" : "carSearchResponse"
      }, {
        "import" : "integer"
      }, {
        "import" : "apiCheckoutResponseCarsResponse"
      } ],
      "version" : "0.0.1",
      "classVarName" : "cars",
      "basePath" : "https://localhost/",
      "appName" : "Flights, Hotels, Packages, Trips, User API",
      "baseName" : "Cars",
      "contextPath" : "/",
      "operations" : {
        "operation" : [ {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/cars/create",
          "operationId" : "cars-create-trip",
          "returnType" : "carCreateTripResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "carCreateTripResponse",
          "summary" : "Create A Trip",
          "notes" : "Mobile API Cars Create Trip",
          "baseName" : "Cars",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product ID (piid) you would like to create a trip.",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"formData\",\n  \"description\" : \"The product ID (piid) you would like to create a trip.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedTotalFare",
            "paramName" : "expectedTotalFare",
            "dataType" : "String",
            "description" : "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros,no thousands separators, and 2 decimal places of precision.",
            "jsonSchema" : "{\n  \"name\" : \"expectedTotalFare\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros,no thousands separators, and 2 decimal places of precision.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "tripName",
            "paramName" : "tripName",
            "dataType" : "String",
            "description" : "Name of this trip. ",
            "jsonSchema" : "{\n  \"name\" : \"tripName\",\n  \"in\" : \"formData\",\n  \"description\" : \"Name of this trip. \",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product ID (piid) you would like to create a trip.",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"formData\",\n  \"description\" : \"The product ID (piid) you would like to create a trip.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedTotalFare",
            "paramName" : "expectedTotalFare",
            "dataType" : "String",
            "description" : "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros,no thousands separators, and 2 decimal places of precision.",
            "jsonSchema" : "{\n  \"name\" : \"expectedTotalFare\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros,no thousands separators, and 2 decimal places of precision.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "tripName",
            "paramName" : "tripName",
            "dataType" : "String",
            "description" : "Name of this trip. ",
            "jsonSchema" : "{\n  \"name\" : \"tripName\",\n  \"in\" : \"formData\",\n  \"description\" : \"Name of this trip. \",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "tags" : [ "Cars" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "carCreateTripResponse",
            "baseType" : "carCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/carCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/carCreateTripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "carCreateTripResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"activityId\" : \"aeiou\",\\n  \"validFormsOfPayment\" : [ {\\n    \"fee\" : \"aeiou\",\\n    \"feeCurrencyCode\" : \"aeiou\",\\n    \"formattedFee\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"totalFarePriceWithFee\" : \"aeiou\"\\n  } ],\\n  \"newTotalPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  },\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"itineraryNumber\" : 123,\\n  \"tripId\" : \"aeiou\",\\n  \"carProduct\" : {\\n    \"productKey\" : \"aeiou\",\\n    \"pickUpLocation\" : {\\n      \"locationCode\" : \"aeiou\",\\n      \"postalCode\" : \"aeiou\",\\n      \"locationDescription\" : \"aeiou\",\\n      \"cityName\" : \"aeiou\",\\n      \"locationType\" : \"aeiou\",\\n      \"countryCode\" : \"aeiou\",\\n      \"airportInstructions\" : \"aeiou\",\\n      \"addressLine5\" : \"aeiou\",\\n      \"addressLine4\" : \"aeiou\",\\n      \"addressLine3\" : \"aeiou\",\\n      \"addressLine2\" : \"aeiou\",\\n      \"provinceStateName\" : \"aeiou\",\\n      \"addressLine1\" : \"aeiou\"\\n    },\\n    \"dropOffTime\" : \"aeiou\",\\n    \"vendor\" : {\\n      \"id\" : 123,\\n      \"phoneNumber\" : \"aeiou\",\\n      \"name\" : \"aeiou\",\\n      \"localPhoneNumber\" : \"aeiou\",\\n      \"code\" : \"aeiou\",\\n      \"loyaltyProgram\" : \"aeiou\"\\n    },\\n    \"detailedFare\" : {\\n      \"rate\" : null,\\n      \"grandTotal\" : null,\\n      \"priceBreakdownOfTotalDueToday\" : \"\",\\n      \"totalDueToday\" : null,\\n      \"priceBreakdownOfTotalDueAtPickup\" : \"\",\\n      \"totalDueAtPickup\" : null,\\n      \"rateTerm\" : \"aeiou\"\\n    },\\n    \"pickupTime\" : \"aeiou\",\\n    \"rulesAndRestrictionsURL\" : \"aeiou\",\\n    \"vehicleInfo\" : {\\n      \"makes\" : [ \"aeiou\" ],\\n      \"hasAirConditioning\" : true,\\n      \"childCapacity\" : 123,\\n      \"type\" : \"aeiou\",\\n      \"transmission\" : \"aeiou\",\\n      \"category\" : \"aeiou\",\\n      \"adultCapacity\" : 123,\\n      \"drive\" : \"aeiou\",\\n      \"minDoors\" : 123,\\n      \"fuel\" : \"aeiou\",\\n      \"smallLuggageCapacity\" : 123,\\n      \"largeLuggageCapacity\" : 123,\\n      \"maxDoors\" : 123\\n    },\\n    \"creditCardRequiredToGuaranteeReservation\" : true,\\n    \"dropOffLocation\" : null\\n  },\\n  \"oldCarProduct\" : null\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "cars-create-trip"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/cars/search/airport",
          "operationId" : "cars-search",
          "returnType" : "carSearchResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "carSearchResponse",
          "summary" : "Search",
          "notes" : "Mobile API Cars",
          "baseName" : "Cars",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "airportCode",
            "paramName" : "airportCode",
            "dataType" : "String",
            "description" : "3 letter airport code where you will be picking up and dropping off your rental car.",
            "jsonSchema" : "{\n  \"name\" : \"airportCode\",\n  \"in\" : \"query\",\n  \"description\" : \"3 letter airport code where you will be picking up and dropping off your rental car.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "pickupTime",
            "paramName" : "pickupTime",
            "dataType" : "String",
            "description" : "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. ",
            "jsonSchema" : "{\n  \"name\" : \"pickupTime\",\n  \"in\" : \"query\",\n  \"description\" : \"When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. \",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "dropOffTime",
            "paramName" : "dropOffTime",
            "dataType" : "String",
            "description" : "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. ",
            "jsonSchema" : "{\n  \"name\" : \"dropOffTime\",\n  \"in\" : \"query\",\n  \"description\" : \"When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. \",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "airportCode",
            "paramName" : "airportCode",
            "dataType" : "String",
            "description" : "3 letter airport code where you will be picking up and dropping off your rental car.",
            "jsonSchema" : "{\n  \"name\" : \"airportCode\",\n  \"in\" : \"query\",\n  \"description\" : \"3 letter airport code where you will be picking up and dropping off your rental car.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "pickupTime",
            "paramName" : "pickupTime",
            "dataType" : "String",
            "description" : "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. ",
            "jsonSchema" : "{\n  \"name\" : \"pickupTime\",\n  \"in\" : \"query\",\n  \"description\" : \"When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. \",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "dropOffTime",
            "paramName" : "dropOffTime",
            "dataType" : "String",
            "description" : "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. ",
            "jsonSchema" : "{\n  \"name\" : \"dropOffTime\",\n  \"in\" : \"query\",\n  \"description\" : \"When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. \",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Cars" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "carSearchResponse",
            "baseType" : "carSearchResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/carSearchResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/carSearchResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "carSearchResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"activityId\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"dropOffTime\" : \"aeiou\",\\n  \"offers\" : [ {\\n    \"isMerchant\" : true,\\n    \"productKey\" : \"aeiou\",\\n    \"pickUpLocation\" : {\\n      \"locationCode\" : \"aeiou\",\\n      \"postalCode\" : \"aeiou\",\\n      \"locationDescription\" : \"aeiou\",\\n      \"cityName\" : \"aeiou\",\\n      \"locationType\" : \"aeiou\",\\n      \"countryCode\" : \"aeiou\",\\n      \"airportInstructions\" : \"aeiou\",\\n      \"addressLine5\" : \"aeiou\",\\n      \"addressLine4\" : \"aeiou\",\\n      \"addressLine3\" : \"aeiou\",\\n      \"addressLine2\" : \"aeiou\",\\n      \"provinceStateName\" : \"aeiou\",\\n      \"addressLine1\" : \"aeiou\"\\n    },\\n    \"vendor\" : {\\n      \"id\" : 123,\\n      \"phoneNumber\" : \"aeiou\",\\n      \"name\" : \"aeiou\",\\n      \"localPhoneNumber\" : \"aeiou\",\\n      \"code\" : \"aeiou\",\\n      \"loyaltyProgram\" : \"aeiou\"\\n    },\\n    \"carRentalLimits\" : {\\n      \"mileageLimits\" : {\\n        \"freeMileage\" : 123,\\n        \"mileageUnit\" : \"aeiou\",\\n        \"extraCostPerDistance\" : {\\n          \"currency\" : {\\n            \"defaultFractionDigits\" : 123,\\n            \"numericCode\" : 123,\\n            \"currencyCode\" : \"aeiou\",\\n            \"available\" : [ null ],\\n            \"instances\" : \"aeiou\"\\n          }\\n        }\\n      },\\n      \"minDuration\" : \"aeiou\",\\n      \"lastestReturnTime\" : \"aeiou\",\\n      \"maxDuration\" : \"aeiou\"\\n    },\\n    \"fare\" : {\\n      \"total\" : null,\\n      \"rate\" : {\\n        \"amount\" : \"aeiou\",\\n        \"formattedWholePrice\" : \"aeiou\",\\n        \"formattedPrice\" : \"aeiou\"\\n      },\\n      \"dailyRate\" : null,\\n      \"rateTerm\" : \"aeiou\"\\n    },\\n    \"vehicleInfo\" : {\\n      \"makes\" : [ \"aeiou\" ],\\n      \"hasAirConditioning\" : true,\\n      \"childCapacity\" : 123,\\n      \"type\" : \"aeiou\",\\n      \"transmission\" : \"aeiou\",\\n      \"category\" : \"aeiou\",\\n      \"adultCapacity\" : 123,\\n      \"drive\" : \"aeiou\",\\n      \"minDoors\" : 123,\\n      \"fuel\" : \"aeiou\",\\n      \"smallLuggageCapacity\" : 123,\\n      \"largeLuggageCapacity\" : 123,\\n      \"maxDoors\" : 123\\n    },\\n    \"creditCardRequiredToGuaranteeReservation\" : true,\\n    \"dropOffLocation\" : null\\n  } ],\\n  \"pickupTime\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "cars-search"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/cars/search/location",
          "operationId" : "cars-search",
          "returnType" : "carSearchResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "carSearchResponse",
          "summary" : "Search",
          "notes" : "Mobile API Cars",
          "baseName" : "Cars",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "pickupLocation.lat",
            "paramName" : "pickupLocation.lat",
            "dataType" : "String",
            "description" : "The location (latitude) to search near.",
            "jsonSchema" : "{\n  \"name\" : \"pickupLocation.lat\",\n  \"in\" : \"query\",\n  \"description\" : \"The location (latitude) to search near.\",\n  \"required\" : true,\n  \"type\" : \"double\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "pickupLocation.lon",
            "paramName" : "pickupLocation.lon",
            "dataType" : "String",
            "description" : "The location (longitude) to search near.",
            "jsonSchema" : "{\n  \"name\" : \"pickupLocation.lon\",\n  \"in\" : \"query\",\n  \"description\" : \"The location (longitude) to search near.\",\n  \"required\" : true,\n  \"type\" : \"double\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "pickupTime",
            "paramName" : "pickupTime",
            "dataType" : "String",
            "description" : "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. ",
            "jsonSchema" : "{\n  \"name\" : \"pickupTime\",\n  \"in\" : \"query\",\n  \"description\" : \"When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. \",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "dropOffTime",
            "paramName" : "dropOffTime",
            "dataType" : "String",
            "description" : "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. ",
            "jsonSchema" : "{\n  \"name\" : \"dropOffTime\",\n  \"in\" : \"query\",\n  \"description\" : \"When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. \",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "searchRadius",
            "paramName" : "searchRadius",
            "dataType" : "Integer",
            "description" : "The max distance around the location to search in. The distance unit is selected based on the current POS (km or mi). ",
            "jsonSchema" : "{\n  \"name\" : \"searchRadius\",\n  \"in\" : \"query\",\n  \"description\" : \"The max distance around the location to search in. The distance unit is selected based on the current POS (km or mi). \",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "pickupLocation.lat",
            "paramName" : "pickupLocation.lat",
            "dataType" : "String",
            "description" : "The location (latitude) to search near.",
            "jsonSchema" : "{\n  \"name\" : \"pickupLocation.lat\",\n  \"in\" : \"query\",\n  \"description\" : \"The location (latitude) to search near.\",\n  \"required\" : true,\n  \"type\" : \"double\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "pickupLocation.lon",
            "paramName" : "pickupLocation.lon",
            "dataType" : "String",
            "description" : "The location (longitude) to search near.",
            "jsonSchema" : "{\n  \"name\" : \"pickupLocation.lon\",\n  \"in\" : \"query\",\n  \"description\" : \"The location (longitude) to search near.\",\n  \"required\" : true,\n  \"type\" : \"double\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "pickupTime",
            "paramName" : "pickupTime",
            "dataType" : "String",
            "description" : "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. ",
            "jsonSchema" : "{\n  \"name\" : \"pickupTime\",\n  \"in\" : \"query\",\n  \"description\" : \"When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. \",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "dropOffTime",
            "paramName" : "dropOffTime",
            "dataType" : "String",
            "description" : "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. ",
            "jsonSchema" : "{\n  \"name\" : \"dropOffTime\",\n  \"in\" : \"query\",\n  \"description\" : \"When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. \",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "searchRadius",
            "paramName" : "searchRadius",
            "dataType" : "Integer",
            "description" : "The max distance around the location to search in. The distance unit is selected based on the current POS (km or mi). ",
            "jsonSchema" : "{\n  \"name\" : \"searchRadius\",\n  \"in\" : \"query\",\n  \"description\" : \"The max distance around the location to search in. The distance unit is selected based on the current POS (km or mi). \",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Cars" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "carSearchResponse",
            "baseType" : "carSearchResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/carSearchResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/carSearchResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "carSearchResponse", "integer", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"activityId\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"dropOffTime\" : \"aeiou\",\\n  \"offers\" : [ {\\n    \"isMerchant\" : true,\\n    \"productKey\" : \"aeiou\",\\n    \"pickUpLocation\" : {\\n      \"locationCode\" : \"aeiou\",\\n      \"postalCode\" : \"aeiou\",\\n      \"locationDescription\" : \"aeiou\",\\n      \"cityName\" : \"aeiou\",\\n      \"locationType\" : \"aeiou\",\\n      \"countryCode\" : \"aeiou\",\\n      \"airportInstructions\" : \"aeiou\",\\n      \"addressLine5\" : \"aeiou\",\\n      \"addressLine4\" : \"aeiou\",\\n      \"addressLine3\" : \"aeiou\",\\n      \"addressLine2\" : \"aeiou\",\\n      \"provinceStateName\" : \"aeiou\",\\n      \"addressLine1\" : \"aeiou\"\\n    },\\n    \"vendor\" : {\\n      \"id\" : 123,\\n      \"phoneNumber\" : \"aeiou\",\\n      \"name\" : \"aeiou\",\\n      \"localPhoneNumber\" : \"aeiou\",\\n      \"code\" : \"aeiou\",\\n      \"loyaltyProgram\" : \"aeiou\"\\n    },\\n    \"carRentalLimits\" : {\\n      \"mileageLimits\" : {\\n        \"freeMileage\" : 123,\\n        \"mileageUnit\" : \"aeiou\",\\n        \"extraCostPerDistance\" : {\\n          \"currency\" : {\\n            \"defaultFractionDigits\" : 123,\\n            \"numericCode\" : 123,\\n            \"currencyCode\" : \"aeiou\",\\n            \"available\" : [ null ],\\n            \"instances\" : \"aeiou\"\\n          }\\n        }\\n      },\\n      \"minDuration\" : \"aeiou\",\\n      \"lastestReturnTime\" : \"aeiou\",\\n      \"maxDuration\" : \"aeiou\"\\n    },\\n    \"fare\" : {\\n      \"total\" : null,\\n      \"rate\" : {\\n        \"amount\" : \"aeiou\",\\n        \"formattedWholePrice\" : \"aeiou\",\\n        \"formattedPrice\" : \"aeiou\"\\n      },\\n      \"dailyRate\" : null,\\n      \"rateTerm\" : \"aeiou\"\\n    },\\n    \"vehicleInfo\" : {\\n      \"makes\" : [ \"aeiou\" ],\\n      \"hasAirConditioning\" : true,\\n      \"childCapacity\" : 123,\\n      \"type\" : \"aeiou\",\\n      \"transmission\" : \"aeiou\",\\n      \"category\" : \"aeiou\",\\n      \"adultCapacity\" : 123,\\n      \"drive\" : \"aeiou\",\\n      \"minDoors\" : 123,\\n      \"fuel\" : \"aeiou\",\\n      \"smallLuggageCapacity\" : 123,\\n      \"largeLuggageCapacity\" : 123,\\n      \"maxDoors\" : 123\\n    },\\n    \"creditCardRequiredToGuaranteeReservation\" : true,\\n    \"dropOffLocation\" : null\\n  } ],\\n  \"pickupTime\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "cars-search"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "path" : "/m/api/cars/trip/checkout",
          "operationId" : "cars-checkout",
          "returnType" : "apiCheckoutResponseCarsResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "apiCheckoutResponseCarsResponse",
          "summary" : "Checkout",
          "notes" : "Mobile API Cars Checkout",
          "baseName" : "Cars",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The trip ID of an existing trip, from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The trip ID of an existing trip, from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedTotalFare",
            "paramName" : "expectedTotalFare",
            "dataType" : "String",
            "description" : "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedTotalFare\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedFareCurrencyCode",
            "paramName" : "expectedFareCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedFareCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFee",
            "paramName" : "expectedCardFee",
            "dataType" : "String",
            "description" : "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFee\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFeeCurrencyCode",
            "paramName" : "expectedCardFeeCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFeeCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "doIThinkImSignedIn",
            "paramName" : "doIThinkImSignedIn",
            "dataType" : "Boolean",
            "description" : "As a client I am checking-out with the assumption that I am signed in",
            "jsonSchema" : "{\n  \"name\" : \"doIThinkImSignedIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"As a client I am checking-out with the assumption that I am signed in\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tealeafTransactionId",
            "paramName" : "tealeafTransactionId",
            "dataType" : "String",
            "description" : "The unique transaction ID used in TeaLeaf PSR tracking",
            "jsonSchema" : "{\n  \"name\" : \"tealeafTransactionId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The unique transaction ID used in TeaLeaf PSR tracking\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "omniturePartnerId",
            "paramName" : "omniturePartnerId",
            "dataType" : "String",
            "description" : "Omniture partner identification string",
            "jsonSchema" : "{\n  \"name\" : \"omniturePartnerId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Omniture partner identification string\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.phoneCountryCode",
            "paramName" : "mainMobileTraveler.phoneCountryCode",
            "dataType" : "String",
            "description" : "The country code of the phone number of the traveler. Only the numeric values in this field are used.  E.g., \"+44\" is treated internally as \"44\".",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The country code of the phone number of the traveler. Only the numeric values in this field are used.  E.g., \\\"+44\\\" is treated internally as \\\"44\\\".\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.phone",
            "paramName" : "mainMobileTraveler.phone",
            "dataType" : "String",
            "description" : "The phone number of the traveler.Only the numeric values in this field are used.  E.g., \"555-1234\" is treated internally as \"5551234\".",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"The phone number of the traveler.Only the numeric values in this field are used.  E.g., \\\"555-1234\\\" is treated internally as \\\"5551234\\\".\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.email",
            "paramName" : "mainMobileTraveler.email",
            "dataType" : "String",
            "description" : "This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.email\",\n  \"in\" : \"formData\",\n  \"description\" : \"This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.password",
            "paramName" : "mainMobileTraveler.password",
            "dataType" : "String",
            "description" : "The password provided by the expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.password\",\n  \"in\" : \"formData\",\n  \"description\" : \"The password provided by the expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.expediaEmailOptIn",
            "paramName" : "mainMobileTraveler.expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "Whether to opt-in the user's email to travel deals",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to opt-in the user's email to travel deals\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.firstName",
            "paramName" : "mainMobileTraveler.firstName",
            "dataType" : "String",
            "description" : "The first name of the traveler",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.firstName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The first name of the traveler\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.middleName",
            "paramName" : "mainMobileTraveler.middleName",
            "dataType" : "String",
            "description" : "The middle name of the traveler. ",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.middleName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The middle name of the traveler. \",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.lastName",
            "paramName" : "mainMobileTraveler.lastName",
            "dataType" : "String",
            "description" : "The last name of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.lastName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The last name of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress",
            "paramName" : "streetAddress",
            "dataType" : "String",
            "description" : "The street part of the credit card owner's billing address..",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress\",\n  \"in\" : \"formData\",\n  \"description\" : \"The street part of the credit card owner's billing address..\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress2",
            "paramName" : "streetAddress2",
            "dataType" : "String",
            "description" : "Apartment or suite number of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress2\",\n  \"in\" : \"formData\",\n  \"description\" : \"Apartment or suite number of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "city",
            "paramName" : "city",
            "dataType" : "String",
            "description" : "The city of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"city\",\n  \"in\" : \"formData\",\n  \"description\" : \"The city of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "state",
            "paramName" : "state",
            "dataType" : "String",
            "description" : "The state (or province) of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"state\",\n  \"in\" : \"formData\",\n  \"description\" : \"The state (or province) of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "country",
            "paramName" : "country",
            "dataType" : "String",
            "description" : "The 3 letter country code of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"country\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 3 letter country code of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "postalCode",
            "paramName" : "postalCode",
            "dataType" : "String",
            "description" : "The postal code of the traveler's billing address. Required only postalCode only checkout.",
            "jsonSchema" : "{\n  \"name\" : \"postalCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The postal code of the traveler's billing address. Required only postalCode only checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "creditCardNumber",
            "paramName" : "creditCardNumber",
            "dataType" : "String",
            "description" : "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"creditCardNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateYear",
            "paramName" : "expirationDateYear",
            "dataType" : "Integer",
            "description" : "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateYear\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateMonth",
            "paramName" : "expirationDateMonth",
            "dataType" : "Integer",
            "description" : "The expiration date month of the credit card used for this booking. This field is required guest for checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateMonth\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expiration date month of the credit card used for this booking. This field is required guest for checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "cvv",
            "paramName" : "cvv",
            "dataType" : "String",
            "description" : "The CVV of the traveler's credit card used for this booking.",
            "jsonSchema" : "{\n  \"name\" : \"cvv\",\n  \"in\" : \"formData\",\n  \"description\" : \"The CVV of the traveler's credit card used for this booking.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storedCreditCardId",
            "paramName" : "storedCreditCardId",
            "dataType" : "String",
            "description" : "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.",
            "jsonSchema" : "{\n  \"name\" : \"storedCreditCardId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storeCreditCardInUserProfile",
            "paramName" : "storeCreditCardInUserProfile",
            "dataType" : "Boolean",
            "description" : "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.",
            "jsonSchema" : "{\n  \"name\" : \"storeCreditCardInUserProfile\",\n  \"in\" : \"formData\",\n  \"description\" : \"Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "nameOnCard",
            "paramName" : "nameOnCard",
            "dataType" : "String",
            "description" : "The card holder's name",
            "jsonSchema" : "{\n  \"name\" : \"nameOnCard\",\n  \"in\" : \"formData\",\n  \"description\" : \"The card holder's name\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "prettyPrint",
            "paramName" : "prettyPrint",
            "dataType" : "Boolean",
            "description" : "If true, return JSON with tabs, spaces and newlines to be human readable",
            "jsonSchema" : "{\n  \"name\" : \"prettyPrint\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, return JSON with tabs, spaces and newlines to be human readable\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "suppressFinalBooking",
            "paramName" : "suppressFinalBooking",
            "dataType" : "Boolean",
            "description" : "If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true",
            "jsonSchema" : "{\n  \"name\" : \"suppressFinalBooking\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The trip ID of an existing trip, from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The trip ID of an existing trip, from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedTotalFare",
            "paramName" : "expectedTotalFare",
            "dataType" : "String",
            "description" : "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedTotalFare\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedFareCurrencyCode",
            "paramName" : "expectedFareCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedFareCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFee",
            "paramName" : "expectedCardFee",
            "dataType" : "String",
            "description" : "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFee\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFeeCurrencyCode",
            "paramName" : "expectedCardFeeCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFeeCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "doIThinkImSignedIn",
            "paramName" : "doIThinkImSignedIn",
            "dataType" : "Boolean",
            "description" : "As a client I am checking-out with the assumption that I am signed in",
            "jsonSchema" : "{\n  \"name\" : \"doIThinkImSignedIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"As a client I am checking-out with the assumption that I am signed in\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tealeafTransactionId",
            "paramName" : "tealeafTransactionId",
            "dataType" : "String",
            "description" : "The unique transaction ID used in TeaLeaf PSR tracking",
            "jsonSchema" : "{\n  \"name\" : \"tealeafTransactionId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The unique transaction ID used in TeaLeaf PSR tracking\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "omniturePartnerId",
            "paramName" : "omniturePartnerId",
            "dataType" : "String",
            "description" : "Omniture partner identification string",
            "jsonSchema" : "{\n  \"name\" : \"omniturePartnerId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Omniture partner identification string\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.phoneCountryCode",
            "paramName" : "mainMobileTraveler.phoneCountryCode",
            "dataType" : "String",
            "description" : "The country code of the phone number of the traveler. Only the numeric values in this field are used.  E.g., \"+44\" is treated internally as \"44\".",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The country code of the phone number of the traveler. Only the numeric values in this field are used.  E.g., \\\"+44\\\" is treated internally as \\\"44\\\".\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.phone",
            "paramName" : "mainMobileTraveler.phone",
            "dataType" : "String",
            "description" : "The phone number of the traveler.Only the numeric values in this field are used.  E.g., \"555-1234\" is treated internally as \"5551234\".",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"The phone number of the traveler.Only the numeric values in this field are used.  E.g., \\\"555-1234\\\" is treated internally as \\\"5551234\\\".\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.email",
            "paramName" : "mainMobileTraveler.email",
            "dataType" : "String",
            "description" : "This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.email\",\n  \"in\" : \"formData\",\n  \"description\" : \"This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.password",
            "paramName" : "mainMobileTraveler.password",
            "dataType" : "String",
            "description" : "The password provided by the expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.password\",\n  \"in\" : \"formData\",\n  \"description\" : \"The password provided by the expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.expediaEmailOptIn",
            "paramName" : "mainMobileTraveler.expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "Whether to opt-in the user's email to travel deals",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to opt-in the user's email to travel deals\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.firstName",
            "paramName" : "mainMobileTraveler.firstName",
            "dataType" : "String",
            "description" : "The first name of the traveler",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.firstName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The first name of the traveler\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.middleName",
            "paramName" : "mainMobileTraveler.middleName",
            "dataType" : "String",
            "description" : "The middle name of the traveler. ",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.middleName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The middle name of the traveler. \",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainMobileTraveler.lastName",
            "paramName" : "mainMobileTraveler.lastName",
            "dataType" : "String",
            "description" : "The last name of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"mainMobileTraveler.lastName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The last name of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress",
            "paramName" : "streetAddress",
            "dataType" : "String",
            "description" : "The street part of the credit card owner's billing address..",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress\",\n  \"in\" : \"formData\",\n  \"description\" : \"The street part of the credit card owner's billing address..\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress2",
            "paramName" : "streetAddress2",
            "dataType" : "String",
            "description" : "Apartment or suite number of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress2\",\n  \"in\" : \"formData\",\n  \"description\" : \"Apartment or suite number of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "city",
            "paramName" : "city",
            "dataType" : "String",
            "description" : "The city of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"city\",\n  \"in\" : \"formData\",\n  \"description\" : \"The city of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "state",
            "paramName" : "state",
            "dataType" : "String",
            "description" : "The state (or province) of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"state\",\n  \"in\" : \"formData\",\n  \"description\" : \"The state (or province) of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "country",
            "paramName" : "country",
            "dataType" : "String",
            "description" : "The 3 letter country code of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"country\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 3 letter country code of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "postalCode",
            "paramName" : "postalCode",
            "dataType" : "String",
            "description" : "The postal code of the traveler's billing address. Required only postalCode only checkout.",
            "jsonSchema" : "{\n  \"name\" : \"postalCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The postal code of the traveler's billing address. Required only postalCode only checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "creditCardNumber",
            "paramName" : "creditCardNumber",
            "dataType" : "String",
            "description" : "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"creditCardNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateYear",
            "paramName" : "expirationDateYear",
            "dataType" : "Integer",
            "description" : "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateYear\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateMonth",
            "paramName" : "expirationDateMonth",
            "dataType" : "Integer",
            "description" : "The expiration date month of the credit card used for this booking. This field is required guest for checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateMonth\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expiration date month of the credit card used for this booking. This field is required guest for checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "cvv",
            "paramName" : "cvv",
            "dataType" : "String",
            "description" : "The CVV of the traveler's credit card used for this booking.",
            "jsonSchema" : "{\n  \"name\" : \"cvv\",\n  \"in\" : \"formData\",\n  \"description\" : \"The CVV of the traveler's credit card used for this booking.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storedCreditCardId",
            "paramName" : "storedCreditCardId",
            "dataType" : "String",
            "description" : "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.",
            "jsonSchema" : "{\n  \"name\" : \"storedCreditCardId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storeCreditCardInUserProfile",
            "paramName" : "storeCreditCardInUserProfile",
            "dataType" : "Boolean",
            "description" : "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.",
            "jsonSchema" : "{\n  \"name\" : \"storeCreditCardInUserProfile\",\n  \"in\" : \"formData\",\n  \"description\" : \"Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "nameOnCard",
            "paramName" : "nameOnCard",
            "dataType" : "String",
            "description" : "The card holder's name",
            "jsonSchema" : "{\n  \"name\" : \"nameOnCard\",\n  \"in\" : \"formData\",\n  \"description\" : \"The card holder's name\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "prettyPrint",
            "paramName" : "prettyPrint",
            "dataType" : "Boolean",
            "description" : "If true, return JSON with tabs, spaces and newlines to be human readable",
            "jsonSchema" : "{\n  \"name\" : \"prettyPrint\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, return JSON with tabs, spaces and newlines to be human readable\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "suppressFinalBooking",
            "paramName" : "suppressFinalBooking",
            "dataType" : "Boolean",
            "description" : "If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true",
            "jsonSchema" : "{\n  \"name\" : \"suppressFinalBooking\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "tags" : [ "Cars" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "apiCheckoutResponseCarsResponse",
            "baseType" : "apiCheckoutResponseCarsResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCheckoutResponseCarsResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCheckoutResponseCarsResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "integer", "string", "apiCheckoutResponseCarsResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"activityId\" : \"aeiou\",\\n  \"totalCharges\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"currencyCode\" : \"aeiou\",\\n  \"totalChargesPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  },\\n  \"debugTealeafInfo\" : \"aeiou\",\\n  \"orderId\" : \"aeiou\",\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "cars-checkout"
        } ],
        "classname" : "CarsApi"
      },
      "appDescription" : "Expedia Mobile API Documentation. <br><font color=\"blue\"> (Note: In case of authorization exception, just <a href=\"/static/mobile/swaggerui/#!/User/signin-user\">Sign-In</a>)</font>"
    }, {
      "hasMore" : "true",
      "modelPackage" : "",
      "classname" : "PackagesApi",
      "package" : "",
      "imports" : [ {
        "import" : "apiCreateTripResponse"
      }, {
        "import" : "jsonCreateTripResponse"
      }, {
        "import" : "packageCreateTripResponse"
      }, {
        "import" : "string"
      }, {
        "import" : "apiCheckoutResponsePackageResponse"
      }, {
        "import" : "integer"
      }, {
        "import" : "apiErrorJsonResponse"
      }, {
        "import" : "packageHotelOfferResponse"
      } ],
      "version" : "0.0.1",
      "classVarName" : "packages",
      "basePath" : "https://localhost/",
      "appName" : "Flights, Hotels, Packages, Trips, User API",
      "baseName" : "Packages",
      "contextPath" : "/",
      "operations" : {
        "operation" : [ {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/m/trip/coupon",
          "operationId" : "packages-apply-coupon",
          "returnType" : "apiCreateTripResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "apiCreateTripResponse",
          "summary" : "Apply Coupon",
          "notes" : "Mobile API Packages Apply Coupon",
          "baseName" : "Packages",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.name",
            "paramName" : "coupon.name",
            "dataType" : "String",
            "description" : "Coupon Name",
            "jsonSchema" : "{\n  \"name\" : \"coupon.name\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.code",
            "paramName" : "coupon.code",
            "dataType" : "String",
            "description" : "Coupon Code",
            "jsonSchema" : "{\n  \"name\" : \"coupon.code\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Code\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.name",
            "paramName" : "coupon.name",
            "dataType" : "String",
            "description" : "Coupon Name",
            "jsonSchema" : "{\n  \"name\" : \"coupon.name\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.code",
            "paramName" : "coupon.code",
            "dataType" : "String",
            "description" : "Coupon Code",
            "jsonSchema" : "{\n  \"name\" : \"coupon.code\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Code\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "tags" : [ "Packages" ],
          "responses" : [ {
            "code" : "200-OK",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "jsonCreateTripResponse",
            "baseType" : "jsonCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Api",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "apiCreateTripResponse",
            "baseType" : "apiCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Package",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "packageCreateTripResponse",
            "baseType" : "packageCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/packageCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/packageCreateTripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "apiCreateTripResponse", "jsonCreateTripResponse", "packageCreateTripResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"tealeafTransactionId\" : \"aeiou\",\\n  \"rewardsPoints\" : true,\\n  \"couponDiscount\" : null,\\n  \"rules\" : {\\n    \"RuleToUrlMap\" : \"aeiou\",\\n    \"RuleToTextMap\" : \"aeiou\"\\n  },\\n  \"activityId\" : \"aeiou\",\\n  \"validFormsOfPayment\" : [ {\\n    \"fee\" : \"aeiou\",\\n    \"feeCurrencyCode\" : \"aeiou\",\\n    \"formattedFee\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"totalFarePriceWithFee\" : \"aeiou\"\\n  } ],\\n  \"selectedInsuranceProduct\" : null,\\n  \"passengerCategories\" : [ \"aeiou\" ],\\n  \"details\" : {\\n    \"changedPrice\" : null,\\n    \"priceChangeAmount\" : \"aeiou\",\\n    \"oldOffer\" : null,\\n    \"flightRules\" : [ {\\n      \"enrouteRefundAllowedAmount\" : \"aeiou\",\\n      \"enrouteChangePenaltyAmount\" : \"aeiou\",\\n      \"isChangeAllowed\" : true,\\n      \"refundPenaltyAmount\" : \"aeiou\",\\n      \"currencyCode\" : \"aeiou\",\\n      \"isRefundable\" : true,\\n      \"enrouteRefundAllowedPrice\" : null,\\n      \"refundPenaltyPrice\" : null,\\n      \"changePenaltyPrice\" : null,\\n      \"isEnrouteRefundAllowed\" : true,\\n      \"isEnrouteChangeAllowed\" : true,\\n      \"enrouteChangePenaltyPrice\" : null,\\n      \"summaryText\" : \"aeiou\",\\n      \"changePenaltyAmount\" : \"aeiou\"\\n    } ],\\n    \"productKey\" : \"aeiou\",\\n    \"obFeeTotalAmount\" : \"aeiou\",\\n    \"obFeePrice\" : null,\\n    \"legs\" : [ {\\n      \"segments\" : [ {\\n        \"arrivalTimeEpochSeconds\" : 123,\\n        \"airlineName\" : \"aeiou\",\\n        \"departureTimeRaw\" : \"aeiou\",\\n        \"operatingAirlineName\" : \"aeiou\",\\n        \"flightNumber\" : \"aeiou\",\\n        \"onTimePercentage\" : \"aeiou\",\\n        \"departureTimeEpochSeconds\" : 123,\\n        \"arrivalTimeRaw\" : \"aeiou\",\\n        \"stops\" : 123,\\n        \"arrivalTimeZoneOffsetSeconds\" : 123,\\n        \"distance\" : 123,\\n        \"airlineCode\" : \"aeiou\",\\n        \"sameFlightAsPreviousSegment\" : true,\\n        \"operatingAirlineCode\" : \"aeiou\",\\n        \"departureAirportCode\" : \"aeiou\",\\n        \"arrivalAirportLocation\" : \"aeiou\",\\n        \"departureAirportLocation\" : \"aeiou\",\\n        \"meal\" : \"aeiou\",\\n        \"arrivalAirportCode\" : \"aeiou\",\\n        \"distanceUnits\" : \"aeiou\",\\n        \"departureTime\" : \"aeiou\",\\n        \"providerCode\" : \"aeiou\",\\n        \"duration\" : \"aeiou\",\\n        \"arrivalTime\" : \"aeiou\",\\n        \"equipmentDescription\" : \"aeiou\",\\n        \"departureTimeZoneOffsetSeconds\" : 123,\\n        \"equipmentCode\" : \"aeiou\"\\n      } ],\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"legId\" : \"aeiou\"\\n    } ],\\n    \"offer\" : {\\n      \"fareName\" : \"aeiou\",\\n      \"baseFare\" : \"aeiou\",\\n      \"hasBagFee\" : true,\\n      \"mayChargeOBFees\" : true,\\n      \"taxesPrice\" : null,\\n      \"numberOfTickets\" : 123,\\n      \"legIds\" : [ \"aeiou\" ],\\n      \"currency\" : \"aeiou\",\\n      \"seatsRemaining\" : 123,\\n      \"mobileShoppingKey\" : \"aeiou\",\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"averageTotalPricePerTicket\" : null,\\n      \"feesPrice\" : null,\\n      \"fareNameLink\" : \"aeiou\",\\n      \"fees\" : \"aeiou\",\\n      \"segmentAttributes\" : [ [ {\\n        \"cabinCode\" : \"aeiou\",\\n        \"bookingCode\" : \"aeiou\"\\n      } ] ],\\n      \"totalFarePrice\" : null,\\n      \"baseFarePrice\" : null,\\n      \"showFees\" : true,\\n      \"pricePerPassengerCategory\" : [ {\\n        \"passengerCategory\" : \"aeiou\",\\n        \"taxesPrice\" : null,\\n        \"basePrice\" : null,\\n        \"totalPrice\" : null\\n      } ],\\n      \"totalFare\" : \"aeiou\",\\n      \"productKey\" : \"aeiou\",\\n      \"hasNoBagFee\" : true,\\n      \"isInternational\" : true,\\n      \"fareType\" : \"aeiou\",\\n      \"taxes\" : \"aeiou\"\\n    }\\n  },\\n  \"isCustomerTitleRequired\" : \"aeiou\",\\n  \"availableInsuranceProducts\" : [ {\\n    \"selectedInsuranceAddOn\" : null,\\n    \"totalPriceWithoutAddOns\" : null,\\n    \"description\" : \"aeiou\",\\n    \"availableInsuranceAddOns\" : [ {\\n      \"price\" : null,\\n      \"insuranceTypeId\" : 123,\\n      \"description\" : \"aeiou\",\\n      \"displayPriceType\" : \"aeiou\",\\n      \"name\" : \"aeiou\",\\n      \"termsUrl\" : \"aeiou\",\\n      \"displayPrice\" : null\\n    } ],\\n    \"displayPriceType\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"termsUrl\" : \"aeiou\",\\n    \"policyNumber\" : \"aeiou\",\\n    \"displayPrice\" : null,\\n    \"totalPrice\" : null,\\n    \"productId\" : \"aeiou\"\\n  } ],\\n  \"coupon\" : {\\n    \"name\" : \"aeiou\",\\n    \"instanceId\" : 123,\\n    \"code\" : \"aeiou\"\\n  },\\n  \"expediaRewards\" : {\\n    \"totalPointsToEarn\" : 123,\\n    \"isActiveRewardsMember\" : true,\\n    \"rewardsMembershipTierName\" : \"aeiou\"\\n  },\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  },\\n  \"totalPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "packages-apply-coupon"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/m/trip/remove/coupon",
          "operationId" : "packages-remove-coupon",
          "returnType" : "apiCreateTripResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "apiCreateTripResponse",
          "summary" : "Remove Coupon",
          "notes" : "Mobile API Packages Remove Coupon",
          "baseName" : "Packages",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "tags" : [ "Packages" ],
          "responses" : [ {
            "code" : "200-OK",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "jsonCreateTripResponse",
            "baseType" : "jsonCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Api",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "apiCreateTripResponse",
            "baseType" : "apiCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Package",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "packageCreateTripResponse",
            "baseType" : "packageCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/packageCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/packageCreateTripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "apiCreateTripResponse", "jsonCreateTripResponse", "packageCreateTripResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"tealeafTransactionId\" : \"aeiou\",\\n  \"rewardsPoints\" : true,\\n  \"couponDiscount\" : null,\\n  \"rules\" : {\\n    \"RuleToUrlMap\" : \"aeiou\",\\n    \"RuleToTextMap\" : \"aeiou\"\\n  },\\n  \"activityId\" : \"aeiou\",\\n  \"validFormsOfPayment\" : [ {\\n    \"fee\" : \"aeiou\",\\n    \"feeCurrencyCode\" : \"aeiou\",\\n    \"formattedFee\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"totalFarePriceWithFee\" : \"aeiou\"\\n  } ],\\n  \"selectedInsuranceProduct\" : null,\\n  \"passengerCategories\" : [ \"aeiou\" ],\\n  \"details\" : {\\n    \"changedPrice\" : null,\\n    \"priceChangeAmount\" : \"aeiou\",\\n    \"oldOffer\" : null,\\n    \"flightRules\" : [ {\\n      \"enrouteRefundAllowedAmount\" : \"aeiou\",\\n      \"enrouteChangePenaltyAmount\" : \"aeiou\",\\n      \"isChangeAllowed\" : true,\\n      \"refundPenaltyAmount\" : \"aeiou\",\\n      \"currencyCode\" : \"aeiou\",\\n      \"isRefundable\" : true,\\n      \"enrouteRefundAllowedPrice\" : null,\\n      \"refundPenaltyPrice\" : null,\\n      \"changePenaltyPrice\" : null,\\n      \"isEnrouteRefundAllowed\" : true,\\n      \"isEnrouteChangeAllowed\" : true,\\n      \"enrouteChangePenaltyPrice\" : null,\\n      \"summaryText\" : \"aeiou\",\\n      \"changePenaltyAmount\" : \"aeiou\"\\n    } ],\\n    \"productKey\" : \"aeiou\",\\n    \"obFeeTotalAmount\" : \"aeiou\",\\n    \"obFeePrice\" : null,\\n    \"legs\" : [ {\\n      \"segments\" : [ {\\n        \"arrivalTimeEpochSeconds\" : 123,\\n        \"airlineName\" : \"aeiou\",\\n        \"departureTimeRaw\" : \"aeiou\",\\n        \"operatingAirlineName\" : \"aeiou\",\\n        \"flightNumber\" : \"aeiou\",\\n        \"onTimePercentage\" : \"aeiou\",\\n        \"departureTimeEpochSeconds\" : 123,\\n        \"arrivalTimeRaw\" : \"aeiou\",\\n        \"stops\" : 123,\\n        \"arrivalTimeZoneOffsetSeconds\" : 123,\\n        \"distance\" : 123,\\n        \"airlineCode\" : \"aeiou\",\\n        \"sameFlightAsPreviousSegment\" : true,\\n        \"operatingAirlineCode\" : \"aeiou\",\\n        \"departureAirportCode\" : \"aeiou\",\\n        \"arrivalAirportLocation\" : \"aeiou\",\\n        \"departureAirportLocation\" : \"aeiou\",\\n        \"meal\" : \"aeiou\",\\n        \"arrivalAirportCode\" : \"aeiou\",\\n        \"distanceUnits\" : \"aeiou\",\\n        \"departureTime\" : \"aeiou\",\\n        \"providerCode\" : \"aeiou\",\\n        \"duration\" : \"aeiou\",\\n        \"arrivalTime\" : \"aeiou\",\\n        \"equipmentDescription\" : \"aeiou\",\\n        \"departureTimeZoneOffsetSeconds\" : 123,\\n        \"equipmentCode\" : \"aeiou\"\\n      } ],\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"legId\" : \"aeiou\"\\n    } ],\\n    \"offer\" : {\\n      \"fareName\" : \"aeiou\",\\n      \"baseFare\" : \"aeiou\",\\n      \"hasBagFee\" : true,\\n      \"mayChargeOBFees\" : true,\\n      \"taxesPrice\" : null,\\n      \"numberOfTickets\" : 123,\\n      \"legIds\" : [ \"aeiou\" ],\\n      \"currency\" : \"aeiou\",\\n      \"seatsRemaining\" : 123,\\n      \"mobileShoppingKey\" : \"aeiou\",\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"averageTotalPricePerTicket\" : null,\\n      \"feesPrice\" : null,\\n      \"fareNameLink\" : \"aeiou\",\\n      \"fees\" : \"aeiou\",\\n      \"segmentAttributes\" : [ [ {\\n        \"cabinCode\" : \"aeiou\",\\n        \"bookingCode\" : \"aeiou\"\\n      } ] ],\\n      \"totalFarePrice\" : null,\\n      \"baseFarePrice\" : null,\\n      \"showFees\" : true,\\n      \"pricePerPassengerCategory\" : [ {\\n        \"passengerCategory\" : \"aeiou\",\\n        \"taxesPrice\" : null,\\n        \"basePrice\" : null,\\n        \"totalPrice\" : null\\n      } ],\\n      \"totalFare\" : \"aeiou\",\\n      \"productKey\" : \"aeiou\",\\n      \"hasNoBagFee\" : true,\\n      \"isInternational\" : true,\\n      \"fareType\" : \"aeiou\",\\n      \"taxes\" : \"aeiou\"\\n    }\\n  },\\n  \"isCustomerTitleRequired\" : \"aeiou\",\\n  \"availableInsuranceProducts\" : [ {\\n    \"selectedInsuranceAddOn\" : null,\\n    \"totalPriceWithoutAddOns\" : null,\\n    \"description\" : \"aeiou\",\\n    \"availableInsuranceAddOns\" : [ {\\n      \"price\" : null,\\n      \"insuranceTypeId\" : 123,\\n      \"description\" : \"aeiou\",\\n      \"displayPriceType\" : \"aeiou\",\\n      \"name\" : \"aeiou\",\\n      \"termsUrl\" : \"aeiou\",\\n      \"displayPrice\" : null\\n    } ],\\n    \"displayPriceType\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"termsUrl\" : \"aeiou\",\\n    \"policyNumber\" : \"aeiou\",\\n    \"displayPrice\" : null,\\n    \"totalPrice\" : null,\\n    \"productId\" : \"aeiou\"\\n  } ],\\n  \"coupon\" : {\\n    \"name\" : \"aeiou\",\\n    \"instanceId\" : 123,\\n    \"code\" : \"aeiou\"\\n  },\\n  \"expediaRewards\" : {\\n    \"totalPointsToEarn\" : 123,\\n    \"isActiveRewardsMember\" : true,\\n    \"rewardsMembershipTierName\" : \"aeiou\"\\n  },\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  },\\n  \"totalPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "packages-remove-coupon"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/packages/checkout",
          "operationId" : "packages-checkout",
          "returnType" : "apiCheckoutResponsePackageResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "apiCheckoutResponsePackageResponse",
          "summary" : "Checkout",
          "notes" : "Mobile API Packages Checkout",
          "baseName" : "Packages",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "hotel[0].primaryContactFullName",
            "paramName" : "hotel[0].primaryContactFullName",
            "dataType" : "String",
            "description" : "Full name of the person who will be checking in. This person must be 21 or older.",
            "jsonSchema" : "{\n  \"name\" : \"hotel[0].primaryContactFullName\",\n  \"in\" : \"formData\",\n  \"description\" : \"Full name of the person who will be checking in. This person must be 21 or older.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "hotel[0].bedTypeId",
            "paramName" : "hotel[0].bedTypeId",
            "dataType" : "String",
            "description" : "Indicates the selected bed Type. Defaults to the first available bed type of the hotel offer.",
            "jsonSchema" : "{\n  \"name\" : \"hotel[0].bedTypeId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Indicates the selected bed Type. Defaults to the first available bed type of the hotel offer.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].mainFlightPassenger[0].phoneCountryCode",
            "paramName" : "flight[0].mainFlightPassenger[0].phoneCountryCode",
            "dataType" : "String",
            "description" : "Country code of the phone of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].mainFlightPassenger[0].phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Country code of the phone of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].mainFlightPassenger[0].phone",
            "paramName" : "flight[0].mainFlightPassenger[0].phone",
            "dataType" : "String",
            "description" : "Phone number of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].mainFlightPassenger[0].phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"Phone number of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].mainFlightPassenger[0].email",
            "paramName" : "flight[0].mainFlightPassenger[0].email",
            "dataType" : "String",
            "description" : "Email address of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].mainFlightPassenger[0].email\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email address of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].mainFlightPassenger[0].password",
            "paramName" : "flight[0].mainFlightPassenger[0].password",
            "dataType" : "String",
            "description" : "Password of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].mainFlightPassenger[0].password\",\n  \"in\" : \"formData\",\n  \"description\" : \"Password of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].mainFlightPassenger[0].expediaEmailOptIn",
            "paramName" : "flight[0].mainFlightPassenger[0].expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "If the main flight passenger wishes to opt out for Expedia emails or not",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].mainFlightPassenger[0].expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"If the main flight passenger wishes to opt out for Expedia emails or not\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].title",
            "paramName" : "flight[0].associatedFlightPassengers[0].title",
            "dataType" : "String",
            "description" : "Title of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].title\",\n  \"in\" : \"formData\",\n  \"description\" : \"Title of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].gender",
            "paramName" : "flight[0].associatedFlightPassengers[0].gender",
            "dataType" : "String",
            "description" : "Gender of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].gender\",\n  \"in\" : \"formData\",\n  \"description\" : \"Gender of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].birthDate",
            "paramName" : "flight[0].associatedFlightPassengers[0].birthDate",
            "dataType" : "String",
            "description" : "Birth date of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].birthDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"Birth date of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].seatPreference",
            "paramName" : "flight[0].associatedFlightPassengers[0].seatPreference",
            "dataType" : "String",
            "description" : "Seat preference of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].seatPreference\",\n  \"in\" : \"formData\",\n  \"description\" : \"Seat preference of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].passengerCategory",
            "paramName" : "flight[0].associatedFlightPassengers[0].passengerCategory",
            "dataType" : "String",
            "description" : ":Passenger category of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].passengerCategory\",\n  \"in\" : \"formData\",\n  \"description\" : \":Passenger category of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].passportCountryCode",
            "paramName" : "flight[0].associatedFlightPassengers[0].passportCountryCode",
            "dataType" : "String",
            "description" : "Passport country code of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].passportCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passport country code of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].TSARedressNumber",
            "paramName" : "flight[0].associatedFlightPassengers[0].TSARedressNumber",
            "dataType" : "String",
            "description" : "TSA redress number of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].TSARedressNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"TSA redress number of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].specialAssistanceOption",
            "paramName" : "flight[0].associatedFlightPassengers[0].specialAssistanceOption",
            "dataType" : "String",
            "description" : "Special assistance option for the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].specialAssistanceOption\",\n  \"in\" : \"formData\",\n  \"description\" : \"Special assistance option for the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The trip ID of an existing trip, from /api/packages/createTrip.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The trip ID of an existing trip, from /api/packages/createTrip.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedTotalFare",
            "paramName" : "expectedTotalFare",
            "dataType" : "String",
            "description" : "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/packages/createTrip.",
            "jsonSchema" : "{\n  \"name\" : \"expectedTotalFare\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/packages/createTrip.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedFareCurrencyCode",
            "paramName" : "expectedFareCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/packages/createTrip.",
            "jsonSchema" : "{\n  \"name\" : \"expectedFareCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/packages/createTrip.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFee",
            "paramName" : "expectedCardFee",
            "dataType" : "String",
            "description" : "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFee\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFeeCurrencyCode",
            "paramName" : "expectedCardFeeCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFeeCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "doIThinkImSignedIn",
            "paramName" : "doIThinkImSignedIn",
            "dataType" : "Boolean",
            "description" : "As a client I am checking-out with the assumption that I am signed in",
            "jsonSchema" : "{\n  \"name\" : \"doIThinkImSignedIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"As a client I am checking-out with the assumption that I am signed in\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tealeafTransactionId",
            "paramName" : "tealeafTransactionId",
            "dataType" : "String",
            "description" : "The unique transaction ID used in TeaLeaf PSR tracking",
            "jsonSchema" : "{\n  \"name\" : \"tealeafTransactionId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The unique transaction ID used in TeaLeaf PSR tracking\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "omniturePartnerId",
            "paramName" : "omniturePartnerId",
            "dataType" : "String",
            "description" : "Omniture partner identification string",
            "jsonSchema" : "{\n  \"name\" : \"omniturePartnerId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Omniture partner identification string\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "nameOnCard",
            "paramName" : "nameOnCard",
            "dataType" : "String",
            "description" : "The card holder's name",
            "jsonSchema" : "{\n  \"name\" : \"nameOnCard\",\n  \"in\" : \"formData\",\n  \"description\" : \"The card holder's name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress",
            "paramName" : "streetAddress",
            "dataType" : "String",
            "description" : "The street part of the credit card owner's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress\",\n  \"in\" : \"formData\",\n  \"description\" : \"The street part of the credit card owner's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress2",
            "paramName" : "streetAddress2",
            "dataType" : "String",
            "description" : "Apartment or suite number of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress2\",\n  \"in\" : \"formData\",\n  \"description\" : \"Apartment or suite number of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "city",
            "paramName" : "city",
            "dataType" : "String",
            "description" : "The city of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"city\",\n  \"in\" : \"formData\",\n  \"description\" : \"The city of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "state",
            "paramName" : "state",
            "dataType" : "String",
            "description" : "The state (or province) of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"state\",\n  \"in\" : \"formData\",\n  \"description\" : \"The state (or province) of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "country",
            "paramName" : "country",
            "dataType" : "String",
            "description" : "The 3 letter country code of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"country\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 3 letter country code of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "postalCode",
            "paramName" : "postalCode",
            "dataType" : "String",
            "description" : "The postal code of the traveler's billing address. Required only postalCode only checkout.",
            "jsonSchema" : "{\n  \"name\" : \"postalCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The postal code of the traveler's billing address. Required only postalCode only checkout.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "creditCardNumber",
            "paramName" : "creditCardNumber",
            "dataType" : "String",
            "description" : "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"creditCardNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateYear",
            "paramName" : "expirationDateYear",
            "dataType" : "Integer",
            "description" : "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateYear\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateMonth",
            "paramName" : "expirationDateMonth",
            "dataType" : "Integer",
            "description" : "The expiration date month of the credit card used for this booking. This field is required guest for checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateMonth\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expiration date month of the credit card used for this booking. This field is required guest for checkout.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "cvv",
            "paramName" : "cvv",
            "dataType" : "String",
            "description" : "The CVV of the traveler's credit card used for this booking.",
            "jsonSchema" : "{\n  \"name\" : \"cvv\",\n  \"in\" : \"formData\",\n  \"description\" : \"The CVV of the traveler's credit card used for this booking.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storedCreditCardId",
            "paramName" : "storedCreditCardId",
            "dataType" : "String",
            "description" : "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.",
            "jsonSchema" : "{\n  \"name\" : \"storedCreditCardId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "storeCreditCardInUserProfile",
            "paramName" : "storeCreditCardInUserProfile",
            "dataType" : "Boolean",
            "description" : "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.",
            "jsonSchema" : "{\n  \"name\" : \"storeCreditCardInUserProfile\",\n  \"in\" : \"formData\",\n  \"description\" : \"Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "hotel[0].primaryContactFullName",
            "paramName" : "hotel[0].primaryContactFullName",
            "dataType" : "String",
            "description" : "Full name of the person who will be checking in. This person must be 21 or older.",
            "jsonSchema" : "{\n  \"name\" : \"hotel[0].primaryContactFullName\",\n  \"in\" : \"formData\",\n  \"description\" : \"Full name of the person who will be checking in. This person must be 21 or older.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "hotel[0].bedTypeId",
            "paramName" : "hotel[0].bedTypeId",
            "dataType" : "String",
            "description" : "Indicates the selected bed Type. Defaults to the first available bed type of the hotel offer.",
            "jsonSchema" : "{\n  \"name\" : \"hotel[0].bedTypeId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Indicates the selected bed Type. Defaults to the first available bed type of the hotel offer.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].mainFlightPassenger[0].phoneCountryCode",
            "paramName" : "flight[0].mainFlightPassenger[0].phoneCountryCode",
            "dataType" : "String",
            "description" : "Country code of the phone of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].mainFlightPassenger[0].phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Country code of the phone of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].mainFlightPassenger[0].phone",
            "paramName" : "flight[0].mainFlightPassenger[0].phone",
            "dataType" : "String",
            "description" : "Phone number of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].mainFlightPassenger[0].phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"Phone number of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].mainFlightPassenger[0].email",
            "paramName" : "flight[0].mainFlightPassenger[0].email",
            "dataType" : "String",
            "description" : "Email address of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].mainFlightPassenger[0].email\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email address of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].mainFlightPassenger[0].password",
            "paramName" : "flight[0].mainFlightPassenger[0].password",
            "dataType" : "String",
            "description" : "Password of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].mainFlightPassenger[0].password\",\n  \"in\" : \"formData\",\n  \"description\" : \"Password of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].mainFlightPassenger[0].expediaEmailOptIn",
            "paramName" : "flight[0].mainFlightPassenger[0].expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "If the main flight passenger wishes to opt out for Expedia emails or not",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].mainFlightPassenger[0].expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"If the main flight passenger wishes to opt out for Expedia emails or not\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].title",
            "paramName" : "flight[0].associatedFlightPassengers[0].title",
            "dataType" : "String",
            "description" : "Title of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].title\",\n  \"in\" : \"formData\",\n  \"description\" : \"Title of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].gender",
            "paramName" : "flight[0].associatedFlightPassengers[0].gender",
            "dataType" : "String",
            "description" : "Gender of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].gender\",\n  \"in\" : \"formData\",\n  \"description\" : \"Gender of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].birthDate",
            "paramName" : "flight[0].associatedFlightPassengers[0].birthDate",
            "dataType" : "String",
            "description" : "Birth date of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].birthDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"Birth date of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].seatPreference",
            "paramName" : "flight[0].associatedFlightPassengers[0].seatPreference",
            "dataType" : "String",
            "description" : "Seat preference of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].seatPreference\",\n  \"in\" : \"formData\",\n  \"description\" : \"Seat preference of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].passengerCategory",
            "paramName" : "flight[0].associatedFlightPassengers[0].passengerCategory",
            "dataType" : "String",
            "description" : ":Passenger category of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].passengerCategory\",\n  \"in\" : \"formData\",\n  \"description\" : \":Passenger category of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].passportCountryCode",
            "paramName" : "flight[0].associatedFlightPassengers[0].passportCountryCode",
            "dataType" : "String",
            "description" : "Passport country code of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].passportCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passport country code of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].TSARedressNumber",
            "paramName" : "flight[0].associatedFlightPassengers[0].TSARedressNumber",
            "dataType" : "String",
            "description" : "TSA redress number of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].TSARedressNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"TSA redress number of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "flight[0].associatedFlightPassengers[0].specialAssistanceOption",
            "paramName" : "flight[0].associatedFlightPassengers[0].specialAssistanceOption",
            "dataType" : "String",
            "description" : "Special assistance option for the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"flight[0].associatedFlightPassengers[0].specialAssistanceOption\",\n  \"in\" : \"formData\",\n  \"description\" : \"Special assistance option for the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The trip ID of an existing trip, from /api/packages/createTrip.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The trip ID of an existing trip, from /api/packages/createTrip.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedTotalFare",
            "paramName" : "expectedTotalFare",
            "dataType" : "String",
            "description" : "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/packages/createTrip.",
            "jsonSchema" : "{\n  \"name\" : \"expectedTotalFare\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/packages/createTrip.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedFareCurrencyCode",
            "paramName" : "expectedFareCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/packages/createTrip.",
            "jsonSchema" : "{\n  \"name\" : \"expectedFareCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/packages/createTrip.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFee",
            "paramName" : "expectedCardFee",
            "dataType" : "String",
            "description" : "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFee\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFeeCurrencyCode",
            "paramName" : "expectedCardFeeCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFeeCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "doIThinkImSignedIn",
            "paramName" : "doIThinkImSignedIn",
            "dataType" : "Boolean",
            "description" : "As a client I am checking-out with the assumption that I am signed in",
            "jsonSchema" : "{\n  \"name\" : \"doIThinkImSignedIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"As a client I am checking-out with the assumption that I am signed in\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tealeafTransactionId",
            "paramName" : "tealeafTransactionId",
            "dataType" : "String",
            "description" : "The unique transaction ID used in TeaLeaf PSR tracking",
            "jsonSchema" : "{\n  \"name\" : \"tealeafTransactionId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The unique transaction ID used in TeaLeaf PSR tracking\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "omniturePartnerId",
            "paramName" : "omniturePartnerId",
            "dataType" : "String",
            "description" : "Omniture partner identification string",
            "jsonSchema" : "{\n  \"name\" : \"omniturePartnerId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Omniture partner identification string\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "nameOnCard",
            "paramName" : "nameOnCard",
            "dataType" : "String",
            "description" : "The card holder's name",
            "jsonSchema" : "{\n  \"name\" : \"nameOnCard\",\n  \"in\" : \"formData\",\n  \"description\" : \"The card holder's name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress",
            "paramName" : "streetAddress",
            "dataType" : "String",
            "description" : "The street part of the credit card owner's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress\",\n  \"in\" : \"formData\",\n  \"description\" : \"The street part of the credit card owner's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress2",
            "paramName" : "streetAddress2",
            "dataType" : "String",
            "description" : "Apartment or suite number of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress2\",\n  \"in\" : \"formData\",\n  \"description\" : \"Apartment or suite number of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "city",
            "paramName" : "city",
            "dataType" : "String",
            "description" : "The city of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"city\",\n  \"in\" : \"formData\",\n  \"description\" : \"The city of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "state",
            "paramName" : "state",
            "dataType" : "String",
            "description" : "The state (or province) of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"state\",\n  \"in\" : \"formData\",\n  \"description\" : \"The state (or province) of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "country",
            "paramName" : "country",
            "dataType" : "String",
            "description" : "The 3 letter country code of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"country\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 3 letter country code of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "postalCode",
            "paramName" : "postalCode",
            "dataType" : "String",
            "description" : "The postal code of the traveler's billing address. Required only postalCode only checkout.",
            "jsonSchema" : "{\n  \"name\" : \"postalCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The postal code of the traveler's billing address. Required only postalCode only checkout.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "creditCardNumber",
            "paramName" : "creditCardNumber",
            "dataType" : "String",
            "description" : "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"creditCardNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateYear",
            "paramName" : "expirationDateYear",
            "dataType" : "Integer",
            "description" : "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateYear\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateMonth",
            "paramName" : "expirationDateMonth",
            "dataType" : "Integer",
            "description" : "The expiration date month of the credit card used for this booking. This field is required guest for checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateMonth\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expiration date month of the credit card used for this booking. This field is required guest for checkout.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "cvv",
            "paramName" : "cvv",
            "dataType" : "String",
            "description" : "The CVV of the traveler's credit card used for this booking.",
            "jsonSchema" : "{\n  \"name\" : \"cvv\",\n  \"in\" : \"formData\",\n  \"description\" : \"The CVV of the traveler's credit card used for this booking.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storedCreditCardId",
            "paramName" : "storedCreditCardId",
            "dataType" : "String",
            "description" : "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.",
            "jsonSchema" : "{\n  \"name\" : \"storedCreditCardId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "storeCreditCardInUserProfile",
            "paramName" : "storeCreditCardInUserProfile",
            "dataType" : "Boolean",
            "description" : "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.",
            "jsonSchema" : "{\n  \"name\" : \"storeCreditCardInUserProfile\",\n  \"in\" : \"formData\",\n  \"description\" : \"Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "tags" : [ "Packages" ],
          "responses" : [ {
            "code" : "200-Api",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "apiCheckoutResponsePackageResponse",
            "baseType" : "apiCheckoutResponsePackageResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCheckoutResponsePackageResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCheckoutResponsePackageResponse\"\n  }\n}"
          }, {
            "code" : "200-Package",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "packageCreateTripResponse",
            "baseType" : "packageCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/packageCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/packageCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Error",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "apiErrorJsonResponse",
            "baseType" : "apiErrorJsonResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiErrorJsonResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiErrorJsonResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "apiCheckoutResponsePackageResponse", "integer", "packageCreateTripResponse", "string", "apiErrorJsonResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"activityId\" : \"aeiou\",\\n  \"totalCharges\" : \"aeiou\",\\n  \"packagePricing\" : {\\n    \"packageTotal\" : null,\\n    \"hotelPrice\" : null,\\n    \"flightPrice\" : null,\\n    \"savings\" : null,\\n    \"couponDiscount\" : null,\\n    \"taxesAndFeesIncluded\" : true,\\n    \"packageTotalWithoutCoupon\" : null,\\n    \"totalTaxesAndFees\" : null,\\n    \"basePrice\" : null\\n  },\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"currencyCode\" : \"aeiou\",\\n  \"totalChargesPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  },\\n  \"debugTealeafInfo\" : \"aeiou\",\\n  \"orderId\" : \"aeiou\",\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "packages-checkout"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/packages/createTrip",
          "operationId" : "packages-create-trip",
          "returnType" : "packageCreateTripResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "packageCreateTripResponse",
          "summary" : "Create A Trip",
          "notes" : "Mobile API Packages Create Trip operation",
          "baseName" : "Packages",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product ID (piid) of the package you would like to get hotel offers for. It is obtained by calling /api/packages/hotelOffers",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"formData\",\n  \"description\" : \"The product ID (piid) of the package you would like to get hotel offers for. It is obtained by calling /api/packages/hotelOffers\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "destinationId",
            "paramName" : "destinationId",
            "dataType" : "String",
            "description" : "stubbed",
            "jsonSchema" : "{\n  \"name\" : \"destinationId\",\n  \"in\" : \"formData\",\n  \"description\" : \"stubbed\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tripName",
            "paramName" : "tripName",
            "dataType" : "String",
            "description" : "stubbed",
            "jsonSchema" : "{\n  \"name\" : \"tripName\",\n  \"in\" : \"formData\",\n  \"description\" : \"stubbed\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "roomOccupants[0].numberOfAdultGuests",
            "paramName" : "roomOccupants[0].numberOfAdultGuests",
            "dataType" : "Integer",
            "description" : "Number of adults staying in this room (default: 1)",
            "jsonSchema" : "{\n  \"name\" : \"roomOccupants[0].numberOfAdultGuests\",\n  \"in\" : \"formData\",\n  \"description\" : \"Number of adults staying in this room (default: 1)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "roomOccupants[0].infantsInSeat",
            "paramName" : "roomOccupants[0].infantsInSeat",
            "dataType" : "Boolean",
            "description" : "Any infants in seat.",
            "jsonSchema" : "{\n  \"name\" : \"roomOccupants[0].infantsInSeat\",\n  \"in\" : \"formData\",\n  \"description\" : \"Any infants in seat.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "roomOccupants[0].childGuestAge",
            "paramName" : "roomOccupants[0].childGuestAge",
            "dataType" : "Integer",
            "description" : "represents the age of a single child guest staying in this room. You should specify the age of all children staying in this room. Valid values are 0-17 (0 for an infant under the age of one year). For a single room with 1 adult and 3 child guests the ages of 1, 3 and 8 years",
            "jsonSchema" : "{\n  \"name\" : \"roomOccupants[0].childGuestAge\",\n  \"in\" : \"formData\",\n  \"description\" : \"represents the age of a single child guest staying in this room. You should specify the age of all children staying in this room. Valid values are 0-17 (0 for an infant under the age of one year). For a single room with 1 adult and 3 child guests the ages of 1, 3 and 8 years\",\n  \"required\" : false,\n  \"type\" : \"integer\",\n  \"items\" : {\n    \"type\" : \"integer\",\n    \"format\" : \"int32\"\n  }\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product ID (piid) of the package you would like to get hotel offers for. It is obtained by calling /api/packages/hotelOffers",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"formData\",\n  \"description\" : \"The product ID (piid) of the package you would like to get hotel offers for. It is obtained by calling /api/packages/hotelOffers\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "destinationId",
            "paramName" : "destinationId",
            "dataType" : "String",
            "description" : "stubbed",
            "jsonSchema" : "{\n  \"name\" : \"destinationId\",\n  \"in\" : \"formData\",\n  \"description\" : \"stubbed\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tripName",
            "paramName" : "tripName",
            "dataType" : "String",
            "description" : "stubbed",
            "jsonSchema" : "{\n  \"name\" : \"tripName\",\n  \"in\" : \"formData\",\n  \"description\" : \"stubbed\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "roomOccupants[0].numberOfAdultGuests",
            "paramName" : "roomOccupants[0].numberOfAdultGuests",
            "dataType" : "Integer",
            "description" : "Number of adults staying in this room (default: 1)",
            "jsonSchema" : "{\n  \"name\" : \"roomOccupants[0].numberOfAdultGuests\",\n  \"in\" : \"formData\",\n  \"description\" : \"Number of adults staying in this room (default: 1)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "roomOccupants[0].infantsInSeat",
            "paramName" : "roomOccupants[0].infantsInSeat",
            "dataType" : "Boolean",
            "description" : "Any infants in seat.",
            "jsonSchema" : "{\n  \"name\" : \"roomOccupants[0].infantsInSeat\",\n  \"in\" : \"formData\",\n  \"description\" : \"Any infants in seat.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "roomOccupants[0].childGuestAge",
            "paramName" : "roomOccupants[0].childGuestAge",
            "dataType" : "Integer",
            "description" : "represents the age of a single child guest staying in this room. You should specify the age of all children staying in this room. Valid values are 0-17 (0 for an infant under the age of one year). For a single room with 1 adult and 3 child guests the ages of 1, 3 and 8 years",
            "jsonSchema" : "{\n  \"name\" : \"roomOccupants[0].childGuestAge\",\n  \"in\" : \"formData\",\n  \"description\" : \"represents the age of a single child guest staying in this room. You should specify the age of all children staying in this room. Valid values are 0-17 (0 for an infant under the age of one year). For a single room with 1 adult and 3 child guests the ages of 1, 3 and 8 years\",\n  \"required\" : false,\n  \"type\" : \"integer\",\n  \"items\" : {\n    \"type\" : \"integer\",\n    \"format\" : \"int32\"\n  }\n}",
            "required" : false
          } ],
          "tags" : [ "Packages" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "packageCreateTripResponse",
            "baseType" : "packageCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/packageCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/packageCreateTripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "integer", "packageCreateTripResponse", "string" ],
          "examples" : [ {
            "example" : "{ }",
            "contentType" : "application/json"
          } ],
          "nickname" : "packages-create-trip"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "path" : "/api/packages/hotelOffers",
          "operationId" : "packages-offers",
          "returnType" : "packageHotelOfferResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "packageHotelOfferResponse",
          "summary" : "Get Package Offers",
          "notes" : "Mobile API Packages",
          "baseName" : "Packages",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product ID (piid) of the package you would like to get hotel offers for.",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"query\",\n  \"description\" : \"The product ID (piid) of the package you would like to get hotel offers for.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkInDate",
            "paramName" : "checkInDate",
            "dataType" : "String",
            "description" : "Date the traveler will be checking in to their hotel",
            "jsonSchema" : "{\n  \"name\" : \"checkInDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the traveler will be checking in to their hotel\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkOutDate",
            "paramName" : "checkOutDate",
            "dataType" : "String",
            "description" : "Date the traveler will be checking out of their hotel",
            "jsonSchema" : "{\n  \"name\" : \"checkOutDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the traveler will be checking out of their hotel\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "numberOfAdultTravelers",
            "paramName" : "numberOfAdultTravelers",
            "dataType" : "String",
            "description" : "Number of Adult Travelers (Default: 1)",
            "jsonSchema" : "{\n  \"name\" : \"numberOfAdultTravelers\",\n  \"in\" : \"query\",\n  \"description\" : \"Number of Adult Travelers (Default: 1)\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "childTravelerAge",
            "paramName" : "childTravelerAge",
            "dataType" : "String",
            "description" : "childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be traveling. Valid values are 0-17 (0 for an infant under the age of one year).",
            "jsonSchema" : "{\n  \"name\" : \"childTravelerAge\",\n  \"in\" : \"query\",\n  \"description\" : \"childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be traveling. Valid values are 0-17 (0 for an infant under the age of one year).\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "infantSeatingInLap",
            "paramName" : "infantSeatingInLap",
            "dataType" : "Boolean",
            "description" : "Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)",
            "jsonSchema" : "{\n  \"name\" : \"infantSeatingInLap\",\n  \"in\" : \"query\",\n  \"description\" : \"Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product ID (piid) of the package you would like to get hotel offers for.",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"query\",\n  \"description\" : \"The product ID (piid) of the package you would like to get hotel offers for.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkInDate",
            "paramName" : "checkInDate",
            "dataType" : "String",
            "description" : "Date the traveler will be checking in to their hotel",
            "jsonSchema" : "{\n  \"name\" : \"checkInDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the traveler will be checking in to their hotel\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkOutDate",
            "paramName" : "checkOutDate",
            "dataType" : "String",
            "description" : "Date the traveler will be checking out of their hotel",
            "jsonSchema" : "{\n  \"name\" : \"checkOutDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the traveler will be checking out of their hotel\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "numberOfAdultTravelers",
            "paramName" : "numberOfAdultTravelers",
            "dataType" : "String",
            "description" : "Number of Adult Travelers (Default: 1)",
            "jsonSchema" : "{\n  \"name\" : \"numberOfAdultTravelers\",\n  \"in\" : \"query\",\n  \"description\" : \"Number of Adult Travelers (Default: 1)\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "childTravelerAge",
            "paramName" : "childTravelerAge",
            "dataType" : "String",
            "description" : "childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be traveling. Valid values are 0-17 (0 for an infant under the age of one year).",
            "jsonSchema" : "{\n  \"name\" : \"childTravelerAge\",\n  \"in\" : \"query\",\n  \"description\" : \"childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be traveling. Valid values are 0-17 (0 for an infant under the age of one year).\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "infantSeatingInLap",
            "paramName" : "infantSeatingInLap",
            "dataType" : "Boolean",
            "description" : "Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)",
            "jsonSchema" : "{\n  \"name\" : \"infantSeatingInLap\",\n  \"in\" : \"query\",\n  \"description\" : \"Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Packages" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "packageHotelOfferResponse",
            "baseType" : "packageHotelOfferResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/packageHotelOfferResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/packageHotelOfferResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "packageHotelOfferResponse", "string" ],
          "examples" : [ {
            "example" : "{ }",
            "contentType" : "application/json"
          } ],
          "nickname" : "packages-offers"
        } ],
        "classname" : "PackagesApi"
      },
      "appDescription" : "Expedia Mobile API Documentation. <br><font color=\"blue\"> (Note: In case of authorization exception, just <a href=\"/static/mobile/swaggerui/#!/User/signin-user\">Sign-In</a>)</font>"
    }, {
      "hasMore" : "true",
      "modelPackage" : "",
      "classname" : "FlightsApi",
      "package" : "",
      "imports" : [ {
        "import" : "airportDropDownDataResponse"
      }, {
        "import" : "integer"
      }, {
        "import" : "string"
      }, {
        "import" : "apiCheckoutResponseFlightOkResponse"
      }, {
        "import" : "apiCheckoutResponseFlightPriceChangeResponse"
      }, {
        "import" : "flightDetailJsonResponse"
      }, {
        "import" : "imageJsonResponse"
      }, {
        "import" : "flightSearchResponse"
      }, {
        "import" : "apiCreateTripResponse"
      }, {
        "import" : "jsonCreateTripResponse"
      }, {
        "import" : "packageCreateTripResponse"
      } ],
      "version" : "0.0.1",
      "classVarName" : "flights",
      "basePath" : "https://localhost/",
      "appName" : "Flights, Hotels, Packages, Trips, User API",
      "baseName" : "Flights",
      "contextPath" : "/",
      "operations" : {
        "operation" : [ {
          "hasProduces" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/flight/airportDropDown",
          "operationId" : "flights-airport-dropdown",
          "returnType" : "airportDropDownDataResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "airportDropDownDataResponse",
          "summary" : "Airport Dropdown",
          "notes" : "Mobile API Flight Airport Dropdown Operation",
          "baseName" : "Flights",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Flights" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "airportDropDownDataResponse",
            "baseType" : "airportDropDownDataResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/airportDropDownDataResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/airportDropDownDataResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "airportDropDownDataResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"airport\" : [ {\\n    \"name\" : \"aeiou\",\\n    \"airportCode\" : \"aeiou\",\\n    \"country\" : \"aeiou\",\\n    \"regionId\" : \"aeiou\"\\n  } ],\\n  \"routes\" : [ {\\n    \"destinations\" : [ \"aeiou\" ],\\n    \"origin\" : \"aeiou\"\\n  } ]\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "flights-airport-dropdown"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/flight/checkout",
          "operationId" : "flights-checkout",
          "returnType" : "apiCheckoutResponseFlightOkResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "apiCheckoutResponseFlightOkResponse",
          "summary" : "Mobile Flight Checkout",
          "notes" : "Checkout a previously created flight trip, requiring payment fields, the trip id, and the passenger fields",
          "baseName" : "Flights",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The trip ID of an existing trip, from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The trip ID of an existing trip, from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedTotalFare",
            "paramName" : "expectedTotalFare",
            "dataType" : "String",
            "description" : "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedTotalFare\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedFareCurrencyCode",
            "paramName" : "expectedFareCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedFareCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFee",
            "paramName" : "expectedCardFee",
            "dataType" : "String",
            "description" : "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFee\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFeeCurrencyCode",
            "paramName" : "expectedCardFeeCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFeeCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "doIThinkImSignedIn",
            "paramName" : "doIThinkImSignedIn",
            "dataType" : "Boolean",
            "description" : "As a client I am checking-out with the assumption that I am signed in",
            "jsonSchema" : "{\n  \"name\" : \"doIThinkImSignedIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"As a client I am checking-out with the assumption that I am signed in\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tealeafTransactionId",
            "paramName" : "tealeafTransactionId",
            "dataType" : "String",
            "description" : "The unique transaction ID used in TeaLeaf PSR tracking",
            "jsonSchema" : "{\n  \"name\" : \"tealeafTransactionId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The unique transaction ID used in TeaLeaf PSR tracking\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "omniturePartnerId",
            "paramName" : "omniturePartnerId",
            "dataType" : "String",
            "description" : "Omniture partner identification string",
            "jsonSchema" : "{\n  \"name\" : \"omniturePartnerId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Omniture partner identification string\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainFlightPassenger[0].phoneCountryCode",
            "paramName" : "mainFlightPassenger[0].phoneCountryCode",
            "dataType" : "String",
            "description" : "Country code of the phone of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"mainFlightPassenger[0].phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Country code of the phone of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainFlightPassenger[0].phone",
            "paramName" : "mainFlightPassenger[0].phone",
            "dataType" : "String",
            "description" : "Phone number of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"mainFlightPassenger[0].phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"Phone number of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainFlightPassenger[0].email",
            "paramName" : "mainFlightPassenger[0].email",
            "dataType" : "String",
            "description" : "Email address of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"mainFlightPassenger[0].email\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email address of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainFlightPassenger[0].password",
            "paramName" : "mainFlightPassenger[0].password",
            "dataType" : "String",
            "description" : "Password of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"mainFlightPassenger[0].password\",\n  \"in\" : \"formData\",\n  \"description\" : \"Password of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainFlightPassenger[0].expediaEmailOptIn",
            "paramName" : "mainFlightPassenger[0].expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "If the main flight passenger wishes to opt out for Expedia emails or not",
            "jsonSchema" : "{\n  \"name\" : \"mainFlightPassenger[0].expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"If the main flight passenger wishes to opt out for Expedia emails or not\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].title",
            "paramName" : "associatedFlightPassengers[0].title",
            "dataType" : "String",
            "description" : "Title of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].title\",\n  \"in\" : \"formData\",\n  \"description\" : \"Title of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].gender",
            "paramName" : "associatedFlightPassengers[0].gender",
            "dataType" : "String",
            "description" : "Gender of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].gender\",\n  \"in\" : \"formData\",\n  \"description\" : \"Gender of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].birthDate",
            "paramName" : "associatedFlightPassengers[0].birthDate",
            "dataType" : "String",
            "description" : "Birth date of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].birthDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"Birth date of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].seatPreference",
            "paramName" : "associatedFlightPassengers[0].seatPreference",
            "dataType" : "String",
            "description" : "Seat preference of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].seatPreference\",\n  \"in\" : \"formData\",\n  \"description\" : \"Seat preference of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].passengerCategory",
            "paramName" : "associatedFlightPassengers[0].passengerCategory",
            "dataType" : "String",
            "description" : ":Passenger category of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].passengerCategory\",\n  \"in\" : \"formData\",\n  \"description\" : \":Passenger category of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].passportCountryCode",
            "paramName" : "associatedFlightPassengers[0].passportCountryCode",
            "dataType" : "String",
            "description" : "Passport country code of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].passportCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passport country code of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].TSARedressNumber",
            "paramName" : "associatedFlightPassengers[0].TSARedressNumber",
            "dataType" : "String",
            "description" : "TSA redress number of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].TSARedressNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"TSA redress number of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].specialAssistanceOption",
            "paramName" : "associatedFlightPassengers[0].specialAssistanceOption",
            "dataType" : "String",
            "description" : "Special assistance option for the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].specialAssistanceOption\",\n  \"in\" : \"formData\",\n  \"description\" : \"Special assistance option for the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "validateWithChildren",
            "paramName" : "validateWithChildren",
            "dataType" : "Boolean",
            "description" : "Set this flag to true to enable child validation logic on the server. If you wish to book with child passengers then you must set this flag to true. (default: false)",
            "jsonSchema" : "{\n  \"name\" : \"validateWithChildren\",\n  \"in\" : \"formData\",\n  \"description\" : \"Set this flag to true to enable child validation logic on the server. If you wish to book with child passengers then you must set this flag to true. (default: false)\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phoneCountryCode",
            "paramName" : "phoneCountryCode",
            "dataType" : "String",
            "description" : "Country code of the phone of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Country code of the phone of the main flight passenger\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phone",
            "paramName" : "phone",
            "dataType" : "String",
            "description" : "Phone number of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"Phone number of the main flight passenger\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "Email address of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email address of the main flight passenger\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "password",
            "paramName" : "password",
            "dataType" : "String",
            "description" : "Password of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"Password of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expediaEmailOptIn",
            "paramName" : "expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "If the main flight passenger wishes to opt out for Expedia emails or not",
            "jsonSchema" : "{\n  \"name\" : \"expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"If the main flight passenger wishes to opt out for Expedia emails or not\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "title",
            "paramName" : "title",
            "dataType" : "String",
            "description" : "Title of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"title\",\n  \"in\" : \"formData\",\n  \"description\" : \"Title of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "gender",
            "paramName" : "gender",
            "dataType" : "String",
            "description" : "Gender of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"gender\",\n  \"in\" : \"formData\",\n  \"description\" : \"Gender of the associated flight passenger fields.\",\n  \"required\" : true,\n  \"type\" : \"string\",\n  \"enum\" : [ \"MALE\", \"FEMALE\" ]\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "birthDate",
            "paramName" : "birthDate",
            "dataType" : "String",
            "description" : "Birth date of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"birthDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"Birth date of the associated flight passenger fields.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "seatPreference",
            "paramName" : "seatPreference",
            "dataType" : "String",
            "description" : "Seat preference of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"seatPreference\",\n  \"in\" : \"formData\",\n  \"description\" : \"Seat preference of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "passengerCategory",
            "paramName" : "passengerCategory",
            "dataType" : "String",
            "description" : ":Passenger category of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"passengerCategory\",\n  \"in\" : \"formData\",\n  \"description\" : \":Passenger category of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "passportCountryCode",
            "paramName" : "passportCountryCode",
            "dataType" : "String",
            "description" : "Passport country code of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"passportCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passport country code of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "TSARedressNumber",
            "paramName" : "TSARedressNumber",
            "dataType" : "String",
            "description" : "TSA redress number of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"TSARedressNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"TSA redress number of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "specialAssistanceOption",
            "paramName" : "specialAssistanceOption",
            "dataType" : "String",
            "description" : "Special assistance option for the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"specialAssistanceOption\",\n  \"in\" : \"formData\",\n  \"description\" : \"Special assistance option for the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "firstName",
            "paramName" : "firstName",
            "dataType" : "String",
            "description" : "The first name of the traveler",
            "jsonSchema" : "{\n  \"name\" : \"firstName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The first name of the traveler\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "middleName",
            "paramName" : "middleName",
            "dataType" : "String",
            "description" : "The middle name of the traveler. ",
            "jsonSchema" : "{\n  \"name\" : \"middleName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The middle name of the traveler. \",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "lastName",
            "paramName" : "lastName",
            "dataType" : "String",
            "description" : "The last name of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"lastName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The last name of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress",
            "paramName" : "streetAddress",
            "dataType" : "String",
            "description" : "The street part of the credit card owner's billing address..",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress\",\n  \"in\" : \"formData\",\n  \"description\" : \"The street part of the credit card owner's billing address..\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress2",
            "paramName" : "streetAddress2",
            "dataType" : "String",
            "description" : "Apartment or suite number of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress2\",\n  \"in\" : \"formData\",\n  \"description\" : \"Apartment or suite number of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "city",
            "paramName" : "city",
            "dataType" : "String",
            "description" : "The city of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"city\",\n  \"in\" : \"formData\",\n  \"description\" : \"The city of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "state",
            "paramName" : "state",
            "dataType" : "String",
            "description" : "The state (or province) of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"state\",\n  \"in\" : \"formData\",\n  \"description\" : \"The state (or province) of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "country",
            "paramName" : "country",
            "dataType" : "String",
            "description" : "The 3 letter country code of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"country\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 3 letter country code of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "postalCode",
            "paramName" : "postalCode",
            "dataType" : "String",
            "description" : "The postal code of the traveler's billing address. Required only postalCode only checkout.",
            "jsonSchema" : "{\n  \"name\" : \"postalCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The postal code of the traveler's billing address. Required only postalCode only checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "creditCardNumber",
            "paramName" : "creditCardNumber",
            "dataType" : "String",
            "description" : "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"creditCardNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateYear",
            "paramName" : "expirationDateYear",
            "dataType" : "Integer",
            "description" : "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateYear\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateMonth",
            "paramName" : "expirationDateMonth",
            "dataType" : "Integer",
            "description" : "The expiration date month of the credit card used for this booking. This field is required guest for checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateMonth\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expiration date month of the credit card used for this booking. This field is required guest for checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "cvv",
            "paramName" : "cvv",
            "dataType" : "String",
            "description" : "The CVV of the traveler's credit card used for this booking.",
            "jsonSchema" : "{\n  \"name\" : \"cvv\",\n  \"in\" : \"formData\",\n  \"description\" : \"The CVV of the traveler's credit card used for this booking.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storedCreditCardId",
            "paramName" : "storedCreditCardId",
            "dataType" : "String",
            "description" : "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.",
            "jsonSchema" : "{\n  \"name\" : \"storedCreditCardId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storeCreditCardInUserProfile",
            "paramName" : "storeCreditCardInUserProfile",
            "dataType" : "Boolean",
            "description" : "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.",
            "jsonSchema" : "{\n  \"name\" : \"storeCreditCardInUserProfile\",\n  \"in\" : \"formData\",\n  \"description\" : \"Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "nameOnCard",
            "paramName" : "nameOnCard",
            "dataType" : "String",
            "description" : "The card holder's name",
            "jsonSchema" : "{\n  \"name\" : \"nameOnCard\",\n  \"in\" : \"formData\",\n  \"description\" : \"The card holder's name\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "prettyPrint",
            "paramName" : "prettyPrint",
            "dataType" : "Boolean",
            "description" : "If true, return JSON with tabs, spaces and newlines to be human readable",
            "jsonSchema" : "{\n  \"name\" : \"prettyPrint\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, return JSON with tabs, spaces and newlines to be human readable\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "suppressFinalBooking",
            "paramName" : "suppressFinalBooking",
            "dataType" : "Boolean",
            "description" : "If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true",
            "jsonSchema" : "{\n  \"name\" : \"suppressFinalBooking\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The trip ID of an existing trip, from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The trip ID of an existing trip, from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedTotalFare",
            "paramName" : "expectedTotalFare",
            "dataType" : "String",
            "description" : "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedTotalFare\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedFareCurrencyCode",
            "paramName" : "expectedFareCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/flight/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedFareCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/flight/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFee",
            "paramName" : "expectedCardFee",
            "dataType" : "String",
            "description" : "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFee\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFeeCurrencyCode",
            "paramName" : "expectedCardFeeCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFeeCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "doIThinkImSignedIn",
            "paramName" : "doIThinkImSignedIn",
            "dataType" : "Boolean",
            "description" : "As a client I am checking-out with the assumption that I am signed in",
            "jsonSchema" : "{\n  \"name\" : \"doIThinkImSignedIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"As a client I am checking-out with the assumption that I am signed in\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tealeafTransactionId",
            "paramName" : "tealeafTransactionId",
            "dataType" : "String",
            "description" : "The unique transaction ID used in TeaLeaf PSR tracking",
            "jsonSchema" : "{\n  \"name\" : \"tealeafTransactionId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The unique transaction ID used in TeaLeaf PSR tracking\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "omniturePartnerId",
            "paramName" : "omniturePartnerId",
            "dataType" : "String",
            "description" : "Omniture partner identification string",
            "jsonSchema" : "{\n  \"name\" : \"omniturePartnerId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Omniture partner identification string\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainFlightPassenger[0].phoneCountryCode",
            "paramName" : "mainFlightPassenger[0].phoneCountryCode",
            "dataType" : "String",
            "description" : "Country code of the phone of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"mainFlightPassenger[0].phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Country code of the phone of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainFlightPassenger[0].phone",
            "paramName" : "mainFlightPassenger[0].phone",
            "dataType" : "String",
            "description" : "Phone number of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"mainFlightPassenger[0].phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"Phone number of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainFlightPassenger[0].email",
            "paramName" : "mainFlightPassenger[0].email",
            "dataType" : "String",
            "description" : "Email address of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"mainFlightPassenger[0].email\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email address of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainFlightPassenger[0].password",
            "paramName" : "mainFlightPassenger[0].password",
            "dataType" : "String",
            "description" : "Password of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"mainFlightPassenger[0].password\",\n  \"in\" : \"formData\",\n  \"description\" : \"Password of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mainFlightPassenger[0].expediaEmailOptIn",
            "paramName" : "mainFlightPassenger[0].expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "If the main flight passenger wishes to opt out for Expedia emails or not",
            "jsonSchema" : "{\n  \"name\" : \"mainFlightPassenger[0].expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"If the main flight passenger wishes to opt out for Expedia emails or not\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].title",
            "paramName" : "associatedFlightPassengers[0].title",
            "dataType" : "String",
            "description" : "Title of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].title\",\n  \"in\" : \"formData\",\n  \"description\" : \"Title of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].gender",
            "paramName" : "associatedFlightPassengers[0].gender",
            "dataType" : "String",
            "description" : "Gender of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].gender\",\n  \"in\" : \"formData\",\n  \"description\" : \"Gender of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].birthDate",
            "paramName" : "associatedFlightPassengers[0].birthDate",
            "dataType" : "String",
            "description" : "Birth date of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].birthDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"Birth date of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].seatPreference",
            "paramName" : "associatedFlightPassengers[0].seatPreference",
            "dataType" : "String",
            "description" : "Seat preference of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].seatPreference\",\n  \"in\" : \"formData\",\n  \"description\" : \"Seat preference of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].passengerCategory",
            "paramName" : "associatedFlightPassengers[0].passengerCategory",
            "dataType" : "String",
            "description" : ":Passenger category of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].passengerCategory\",\n  \"in\" : \"formData\",\n  \"description\" : \":Passenger category of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].passportCountryCode",
            "paramName" : "associatedFlightPassengers[0].passportCountryCode",
            "dataType" : "String",
            "description" : "Passport country code of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].passportCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passport country code of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].TSARedressNumber",
            "paramName" : "associatedFlightPassengers[0].TSARedressNumber",
            "dataType" : "String",
            "description" : "TSA redress number of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].TSARedressNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"TSA redress number of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "associatedFlightPassengers[0].specialAssistanceOption",
            "paramName" : "associatedFlightPassengers[0].specialAssistanceOption",
            "dataType" : "String",
            "description" : "Special assistance option for the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"associatedFlightPassengers[0].specialAssistanceOption\",\n  \"in\" : \"formData\",\n  \"description\" : \"Special assistance option for the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "validateWithChildren",
            "paramName" : "validateWithChildren",
            "dataType" : "Boolean",
            "description" : "Set this flag to true to enable child validation logic on the server. If you wish to book with child passengers then you must set this flag to true. (default: false)",
            "jsonSchema" : "{\n  \"name\" : \"validateWithChildren\",\n  \"in\" : \"formData\",\n  \"description\" : \"Set this flag to true to enable child validation logic on the server. If you wish to book with child passengers then you must set this flag to true. (default: false)\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phoneCountryCode",
            "paramName" : "phoneCountryCode",
            "dataType" : "String",
            "description" : "Country code of the phone of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Country code of the phone of the main flight passenger\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phone",
            "paramName" : "phone",
            "dataType" : "String",
            "description" : "Phone number of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"Phone number of the main flight passenger\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "Email address of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email address of the main flight passenger\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "password",
            "paramName" : "password",
            "dataType" : "String",
            "description" : "Password of the main flight passenger",
            "jsonSchema" : "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"Password of the main flight passenger\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expediaEmailOptIn",
            "paramName" : "expediaEmailOptIn",
            "dataType" : "Boolean",
            "description" : "If the main flight passenger wishes to opt out for Expedia emails or not",
            "jsonSchema" : "{\n  \"name\" : \"expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"If the main flight passenger wishes to opt out for Expedia emails or not\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "title",
            "paramName" : "title",
            "dataType" : "String",
            "description" : "Title of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"title\",\n  \"in\" : \"formData\",\n  \"description\" : \"Title of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "gender",
            "paramName" : "gender",
            "dataType" : "String",
            "description" : "Gender of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"gender\",\n  \"in\" : \"formData\",\n  \"description\" : \"Gender of the associated flight passenger fields.\",\n  \"required\" : true,\n  \"type\" : \"string\",\n  \"enum\" : [ \"MALE\", \"FEMALE\" ]\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "birthDate",
            "paramName" : "birthDate",
            "dataType" : "String",
            "description" : "Birth date of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"birthDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"Birth date of the associated flight passenger fields.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "seatPreference",
            "paramName" : "seatPreference",
            "dataType" : "String",
            "description" : "Seat preference of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"seatPreference\",\n  \"in\" : \"formData\",\n  \"description\" : \"Seat preference of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "passengerCategory",
            "paramName" : "passengerCategory",
            "dataType" : "String",
            "description" : ":Passenger category of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"passengerCategory\",\n  \"in\" : \"formData\",\n  \"description\" : \":Passenger category of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "passportCountryCode",
            "paramName" : "passportCountryCode",
            "dataType" : "String",
            "description" : "Passport country code of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"passportCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Passport country code of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "TSARedressNumber",
            "paramName" : "TSARedressNumber",
            "dataType" : "String",
            "description" : "TSA redress number of the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"TSARedressNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"TSA redress number of the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "specialAssistanceOption",
            "paramName" : "specialAssistanceOption",
            "dataType" : "String",
            "description" : "Special assistance option for the associated flight passenger fields.",
            "jsonSchema" : "{\n  \"name\" : \"specialAssistanceOption\",\n  \"in\" : \"formData\",\n  \"description\" : \"Special assistance option for the associated flight passenger fields.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "firstName",
            "paramName" : "firstName",
            "dataType" : "String",
            "description" : "The first name of the traveler",
            "jsonSchema" : "{\n  \"name\" : \"firstName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The first name of the traveler\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "middleName",
            "paramName" : "middleName",
            "dataType" : "String",
            "description" : "The middle name of the traveler. ",
            "jsonSchema" : "{\n  \"name\" : \"middleName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The middle name of the traveler. \",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "lastName",
            "paramName" : "lastName",
            "dataType" : "String",
            "description" : "The last name of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"lastName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The last name of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress",
            "paramName" : "streetAddress",
            "dataType" : "String",
            "description" : "The street part of the credit card owner's billing address..",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress\",\n  \"in\" : \"formData\",\n  \"description\" : \"The street part of the credit card owner's billing address..\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress2",
            "paramName" : "streetAddress2",
            "dataType" : "String",
            "description" : "Apartment or suite number of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress2\",\n  \"in\" : \"formData\",\n  \"description\" : \"Apartment or suite number of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "city",
            "paramName" : "city",
            "dataType" : "String",
            "description" : "The city of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"city\",\n  \"in\" : \"formData\",\n  \"description\" : \"The city of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "state",
            "paramName" : "state",
            "dataType" : "String",
            "description" : "The state (or province) of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"state\",\n  \"in\" : \"formData\",\n  \"description\" : \"The state (or province) of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "country",
            "paramName" : "country",
            "dataType" : "String",
            "description" : "The 3 letter country code of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"country\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 3 letter country code of the traveler's billing address.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "postalCode",
            "paramName" : "postalCode",
            "dataType" : "String",
            "description" : "The postal code of the traveler's billing address. Required only postalCode only checkout.",
            "jsonSchema" : "{\n  \"name\" : \"postalCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The postal code of the traveler's billing address. Required only postalCode only checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "creditCardNumber",
            "paramName" : "creditCardNumber",
            "dataType" : "String",
            "description" : "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"creditCardNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateYear",
            "paramName" : "expirationDateYear",
            "dataType" : "Integer",
            "description" : "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateYear\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateMonth",
            "paramName" : "expirationDateMonth",
            "dataType" : "Integer",
            "description" : "The expiration date month of the credit card used for this booking. This field is required guest for checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateMonth\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expiration date month of the credit card used for this booking. This field is required guest for checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "cvv",
            "paramName" : "cvv",
            "dataType" : "String",
            "description" : "The CVV of the traveler's credit card used for this booking.",
            "jsonSchema" : "{\n  \"name\" : \"cvv\",\n  \"in\" : \"formData\",\n  \"description\" : \"The CVV of the traveler's credit card used for this booking.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storedCreditCardId",
            "paramName" : "storedCreditCardId",
            "dataType" : "String",
            "description" : "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.",
            "jsonSchema" : "{\n  \"name\" : \"storedCreditCardId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storeCreditCardInUserProfile",
            "paramName" : "storeCreditCardInUserProfile",
            "dataType" : "Boolean",
            "description" : "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.",
            "jsonSchema" : "{\n  \"name\" : \"storeCreditCardInUserProfile\",\n  \"in\" : \"formData\",\n  \"description\" : \"Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "nameOnCard",
            "paramName" : "nameOnCard",
            "dataType" : "String",
            "description" : "The card holder's name",
            "jsonSchema" : "{\n  \"name\" : \"nameOnCard\",\n  \"in\" : \"formData\",\n  \"description\" : \"The card holder's name\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "prettyPrint",
            "paramName" : "prettyPrint",
            "dataType" : "Boolean",
            "description" : "If true, return JSON with tabs, spaces and newlines to be human readable",
            "jsonSchema" : "{\n  \"name\" : \"prettyPrint\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, return JSON with tabs, spaces and newlines to be human readable\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "suppressFinalBooking",
            "paramName" : "suppressFinalBooking",
            "dataType" : "Boolean",
            "description" : "If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true",
            "jsonSchema" : "{\n  \"name\" : \"suppressFinalBooking\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "tags" : [ "Flights" ],
          "responses" : [ {
            "code" : "200-OK",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "apiCheckoutResponseFlightOkResponse",
            "baseType" : "apiCheckoutResponseFlightOkResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCheckoutResponseFlightOkResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCheckoutResponseFlightOkResponse\"\n  }\n}"
          }, {
            "code" : "200-PriceChange",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "apiCheckoutResponseFlightPriceChangeResponse",
            "baseType" : "apiCheckoutResponseFlightPriceChangeResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCheckoutResponseFlightPriceChangeResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCheckoutResponseFlightPriceChangeResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "integer", "string", "apiCheckoutResponseFlightOkResponse", "apiCheckoutResponseFlightPriceChangeResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"activityId\" : \"aeiou\",\\n  \"totalCharges\" : \"aeiou\",\\n  \"currencyCode\" : \"aeiou\",\\n  \"mobileAirAttachQualifier\" : {\\n    \"offerExpires\" : \"aeiou\",\\n    \"airAttachQualified\" : true\\n  },\\n  \"totalChargesPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  },\\n  \"debugTealeafInfo\" : \"aeiou\",\\n  \"orderId\" : \"aeiou\",\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "flights-checkout"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/flight/details",
          "operationId" : "flights-details",
          "returnType" : "flightDetailJsonResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "flightDetailJsonResponse",
          "summary" : "Details",
          "notes" : "Mobile API Flight Details Operation",
          "baseName" : "Flights",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "departureDate",
            "paramName" : "departureDate",
            "dataType" : "String",
            "description" : "Date the customer wants to leave for their flight on, in ISO format.",
            "jsonSchema" : "{\n  \"name\" : \"departureDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the customer wants to leave for their flight on, in ISO format.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "returnDate",
            "paramName" : "returnDate",
            "dataType" : "String",
            "description" : "Date the customer wants to return on. If present indicates a round trip search. If not supplied, then it's a one-way search.",
            "jsonSchema" : "{\n  \"name\" : \"returnDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the customer wants to return on. If present indicates a round trip search. If not supplied, then it's a one-way search.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "A productKey, obtained from a call to flight search, within the past 20 minutes. Required. If the price has changed since the key was issued, a price change error will be thrown (eventually; not implemented yet). If the key has expired, this will (eventually, not implemented yet) return product key expired.",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"query\",\n  \"description\" : \"A productKey, obtained from a call to flight search, within the past 20 minutes. Required. If the price has changed since the key was issued, a price change error will be thrown (eventually; not implemented yet). If the key has expired, this will (eventually, not implemented yet) return product key expired.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "departureAirport",
            "paramName" : "departureAirport",
            "dataType" : "String",
            "description" : "The three letter airport code for where the customer is leaving from.",
            "jsonSchema" : "{\n  \"name\" : \"departureAirport\",\n  \"in\" : \"query\",\n  \"description\" : \"The three letter airport code for where the customer is leaving from.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "arrivalAirport",
            "paramName" : "arrivalAirport",
            "dataType" : "String",
            "description" : "The three letter airport code for where the customer is going.",
            "jsonSchema" : "{\n  \"name\" : \"arrivalAirport\",\n  \"in\" : \"query\",\n  \"description\" : \"The three letter airport code for where the customer is going.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "numberOfAdultTravelers",
            "paramName" : "numberOfAdultTravelers",
            "dataType" : "String",
            "description" : "Number of Adult Travelers (Default: 1)",
            "jsonSchema" : "{\n  \"name\" : \"numberOfAdultTravelers\",\n  \"in\" : \"query\",\n  \"description\" : \"Number of Adult Travelers (Default: 1)\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "childTravelerAge",
            "paramName" : "childTravelerAge",
            "dataType" : "String",
            "description" : "childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be flying. Valid values are 0-17 (0 for an infant under the age of one year).",
            "jsonSchema" : "{\n  \"name\" : \"childTravelerAge\",\n  \"in\" : \"query\",\n  \"description\" : \"childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be flying. Valid values are 0-17 (0 for an infant under the age of one year).\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "infantSeatingInLap",
            "paramName" : "infantSeatingInLap",
            "dataType" : "String",
            "description" : "Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)",
            "jsonSchema" : "{\n  \"name\" : \"infantSeatingInLap\",\n  \"in\" : \"query\",\n  \"description\" : \"Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "departureDate",
            "paramName" : "departureDate",
            "dataType" : "String",
            "description" : "Date the customer wants to leave for their flight on, in ISO format.",
            "jsonSchema" : "{\n  \"name\" : \"departureDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the customer wants to leave for their flight on, in ISO format.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "returnDate",
            "paramName" : "returnDate",
            "dataType" : "String",
            "description" : "Date the customer wants to return on. If present indicates a round trip search. If not supplied, then it's a one-way search.",
            "jsonSchema" : "{\n  \"name\" : \"returnDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the customer wants to return on. If present indicates a round trip search. If not supplied, then it's a one-way search.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "A productKey, obtained from a call to flight search, within the past 20 minutes. Required. If the price has changed since the key was issued, a price change error will be thrown (eventually; not implemented yet). If the key has expired, this will (eventually, not implemented yet) return product key expired.",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"query\",\n  \"description\" : \"A productKey, obtained from a call to flight search, within the past 20 minutes. Required. If the price has changed since the key was issued, a price change error will be thrown (eventually; not implemented yet). If the key has expired, this will (eventually, not implemented yet) return product key expired.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "departureAirport",
            "paramName" : "departureAirport",
            "dataType" : "String",
            "description" : "The three letter airport code for where the customer is leaving from.",
            "jsonSchema" : "{\n  \"name\" : \"departureAirport\",\n  \"in\" : \"query\",\n  \"description\" : \"The three letter airport code for where the customer is leaving from.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "arrivalAirport",
            "paramName" : "arrivalAirport",
            "dataType" : "String",
            "description" : "The three letter airport code for where the customer is going.",
            "jsonSchema" : "{\n  \"name\" : \"arrivalAirport\",\n  \"in\" : \"query\",\n  \"description\" : \"The three letter airport code for where the customer is going.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "numberOfAdultTravelers",
            "paramName" : "numberOfAdultTravelers",
            "dataType" : "String",
            "description" : "Number of Adult Travelers (Default: 1)",
            "jsonSchema" : "{\n  \"name\" : \"numberOfAdultTravelers\",\n  \"in\" : \"query\",\n  \"description\" : \"Number of Adult Travelers (Default: 1)\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "childTravelerAge",
            "paramName" : "childTravelerAge",
            "dataType" : "String",
            "description" : "childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be flying. Valid values are 0-17 (0 for an infant under the age of one year).",
            "jsonSchema" : "{\n  \"name\" : \"childTravelerAge\",\n  \"in\" : \"query\",\n  \"description\" : \"childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be flying. Valid values are 0-17 (0 for an infant under the age of one year).\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "infantSeatingInLap",
            "paramName" : "infantSeatingInLap",
            "dataType" : "String",
            "description" : "Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)",
            "jsonSchema" : "{\n  \"name\" : \"infantSeatingInLap\",\n  \"in\" : \"query\",\n  \"description\" : \"Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Flights" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "flightDetailJsonResponse",
            "baseType" : "flightDetailJsonResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/flightDetailJsonResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/flightDetailJsonResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "flightDetailJsonResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"changedPrice\" : null,\\n  \"priceChangeAmount\" : \"aeiou\",\\n  \"oldOffer\" : null,\\n  \"flightRules\" : [ {\\n    \"enrouteRefundAllowedAmount\" : \"aeiou\",\\n    \"enrouteChangePenaltyAmount\" : \"aeiou\",\\n    \"isChangeAllowed\" : true,\\n    \"refundPenaltyAmount\" : \"aeiou\",\\n    \"currencyCode\" : \"aeiou\",\\n    \"isRefundable\" : true,\\n    \"enrouteRefundAllowedPrice\" : null,\\n    \"refundPenaltyPrice\" : null,\\n    \"changePenaltyPrice\" : null,\\n    \"isEnrouteRefundAllowed\" : true,\\n    \"isEnrouteChangeAllowed\" : true,\\n    \"enrouteChangePenaltyPrice\" : null,\\n    \"summaryText\" : \"aeiou\",\\n    \"changePenaltyAmount\" : \"aeiou\"\\n  } ],\\n  \"productKey\" : \"aeiou\",\\n  \"obFeeTotalAmount\" : \"aeiou\",\\n  \"obFeePrice\" : null,\\n  \"legs\" : [ {\\n    \"segments\" : [ {\\n      \"arrivalTimeEpochSeconds\" : 123,\\n      \"airlineName\" : \"aeiou\",\\n      \"departureTimeRaw\" : \"aeiou\",\\n      \"operatingAirlineName\" : \"aeiou\",\\n      \"flightNumber\" : \"aeiou\",\\n      \"onTimePercentage\" : \"aeiou\",\\n      \"departureTimeEpochSeconds\" : 123,\\n      \"arrivalTimeRaw\" : \"aeiou\",\\n      \"stops\" : 123,\\n      \"arrivalTimeZoneOffsetSeconds\" : 123,\\n      \"distance\" : 123,\\n      \"airlineCode\" : \"aeiou\",\\n      \"sameFlightAsPreviousSegment\" : true,\\n      \"operatingAirlineCode\" : \"aeiou\",\\n      \"departureAirportCode\" : \"aeiou\",\\n      \"arrivalAirportLocation\" : \"aeiou\",\\n      \"departureAirportLocation\" : \"aeiou\",\\n      \"meal\" : \"aeiou\",\\n      \"arrivalAirportCode\" : \"aeiou\",\\n      \"distanceUnits\" : \"aeiou\",\\n      \"departureTime\" : \"aeiou\",\\n      \"providerCode\" : \"aeiou\",\\n      \"duration\" : \"aeiou\",\\n      \"arrivalTime\" : \"aeiou\",\\n      \"equipmentDescription\" : \"aeiou\",\\n      \"departureTimeZoneOffsetSeconds\" : 123,\\n      \"equipmentCode\" : \"aeiou\"\\n    } ],\\n    \"baggageFeesUrl\" : \"aeiou\",\\n    \"legId\" : \"aeiou\"\\n  } ],\\n  \"offer\" : {\\n    \"fareName\" : \"aeiou\",\\n    \"baseFare\" : \"aeiou\",\\n    \"hasBagFee\" : true,\\n    \"mayChargeOBFees\" : true,\\n    \"taxesPrice\" : null,\\n    \"numberOfTickets\" : 123,\\n    \"legIds\" : [ \"aeiou\" ],\\n    \"currency\" : \"aeiou\",\\n    \"seatsRemaining\" : 123,\\n    \"mobileShoppingKey\" : \"aeiou\",\\n    \"baggageFeesUrl\" : \"aeiou\",\\n    \"averageTotalPricePerTicket\" : null,\\n    \"feesPrice\" : null,\\n    \"fareNameLink\" : \"aeiou\",\\n    \"fees\" : \"aeiou\",\\n    \"segmentAttributes\" : [ [ {\\n      \"cabinCode\" : \"aeiou\",\\n      \"bookingCode\" : \"aeiou\"\\n    } ] ],\\n    \"totalFarePrice\" : null,\\n    \"baseFarePrice\" : {\\n      \"amount\" : \"aeiou\",\\n      \"formattedWholePrice\" : \"aeiou\",\\n      \"formattedPrice\" : \"aeiou\"\\n    },\\n    \"showFees\" : true,\\n    \"pricePerPassengerCategory\" : [ {\\n      \"passengerCategory\" : \"aeiou\",\\n      \"taxesPrice\" : null,\\n      \"basePrice\" : null,\\n      \"totalPrice\" : null\\n    } ],\\n    \"totalFare\" : \"aeiou\",\\n    \"productKey\" : \"aeiou\",\\n    \"hasNoBagFee\" : true,\\n    \"isInternational\" : true,\\n    \"fareType\" : \"aeiou\",\\n    \"taxes\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "flights-details"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/flight/image",
          "operationId" : "flights-image",
          "returnType" : "imageJsonResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "imageJsonResponse",
          "summary" : "Flight Image",
          "notes" : "Mobile API Flight Image Operation",
          "baseName" : "Flights",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "destinationCode",
            "paramName" : "destinationCode",
            "dataType" : "String",
            "description" : "The three letter airport code or metro code of the destination. ",
            "jsonSchema" : "{\n  \"name\" : \"destinationCode\",\n  \"in\" : \"query\",\n  \"description\" : \"The three letter airport code or metro code of the destination. \",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "imageWidth",
            "paramName" : "imageWidth",
            "dataType" : "Integer",
            "description" : "Requested width of the image.",
            "jsonSchema" : "{\n  \"name\" : \"imageWidth\",\n  \"in\" : \"query\",\n  \"description\" : \"Requested width of the image.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "imageHeight",
            "paramName" : "imageHeight",
            "dataType" : "Integer",
            "description" : "Requested height of the image.",
            "jsonSchema" : "{\n  \"name\" : \"imageHeight\",\n  \"in\" : \"query\",\n  \"description\" : \"Requested height of the image.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "destinationCode",
            "paramName" : "destinationCode",
            "dataType" : "String",
            "description" : "The three letter airport code or metro code of the destination. ",
            "jsonSchema" : "{\n  \"name\" : \"destinationCode\",\n  \"in\" : \"query\",\n  \"description\" : \"The three letter airport code or metro code of the destination. \",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "imageWidth",
            "paramName" : "imageWidth",
            "dataType" : "Integer",
            "description" : "Requested width of the image.",
            "jsonSchema" : "{\n  \"name\" : \"imageWidth\",\n  \"in\" : \"query\",\n  \"description\" : \"Requested width of the image.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "imageHeight",
            "paramName" : "imageHeight",
            "dataType" : "Integer",
            "description" : "Requested height of the image.",
            "jsonSchema" : "{\n  \"name\" : \"imageHeight\",\n  \"in\" : \"query\",\n  \"description\" : \"Requested height of the image.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Flights" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "imageJsonResponse",
            "baseType" : "imageJsonResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/imageJsonResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/imageJsonResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "imageJsonResponse", "integer", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"cacheKey\" : \"aeiou\",\\n  \"imageUrl\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "flights-image"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/flight/search",
          "operationId" : "flights-search",
          "returnType" : "flightSearchResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "flightSearchResponse",
          "summary" : "Search",
          "notes" : "Mobile API Flights",
          "baseName" : "Flights",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "departureDate",
            "paramName" : "departureDate",
            "dataType" : "String",
            "description" : "Date the customer wants to leave for their flight on, in ISO format.",
            "jsonSchema" : "{\n  \"name\" : \"departureDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the customer wants to leave for their flight on, in ISO format.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "returnDate",
            "paramName" : "returnDate",
            "dataType" : "String",
            "description" : "Date the customer wants to return on. If present indicates a round trip search. If not supplied, then it's a one-way search.",
            "jsonSchema" : "{\n  \"name\" : \"returnDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the customer wants to return on. If present indicates a round trip search. If not supplied, then it's a one-way search.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "departureAirport",
            "paramName" : "departureAirport",
            "dataType" : "String",
            "description" : "The three letter airport code for where the customer is leaving from.",
            "jsonSchema" : "{\n  \"name\" : \"departureAirport\",\n  \"in\" : \"query\",\n  \"description\" : \"The three letter airport code for where the customer is leaving from.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "arrivalAirport",
            "paramName" : "arrivalAirport",
            "dataType" : "String",
            "description" : "The three letter airport code to where the customer is going.",
            "jsonSchema" : "{\n  \"name\" : \"arrivalAirport\",\n  \"in\" : \"query\",\n  \"description\" : \"The three letter airport code to where the customer is going.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "prettyPrint",
            "paramName" : "prettyPrint",
            "dataType" : "Boolean",
            "description" : "Controls JSON response formatting. When set to true, its human-readable.",
            "jsonSchema" : "{\n  \"name\" : \"prettyPrint\",\n  \"in\" : \"query\",\n  \"description\" : \"Controls JSON response formatting. When set to true, its human-readable.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "numberOfAdultTravelers",
            "paramName" : "numberOfAdultTravelers",
            "dataType" : "Integer",
            "description" : "Number of Adult Travelers (Default: 1)",
            "jsonSchema" : "{\n  \"name\" : \"numberOfAdultTravelers\",\n  \"in\" : \"query\",\n  \"description\" : \"Number of Adult Travelers (Default: 1)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "childTravelerAge",
            "paramName" : "childTravelerAge",
            "dataType" : "Integer",
            "description" : "childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be flying. Valid values are 0-17 (0 for an infant under the age of one year).",
            "jsonSchema" : "{\n  \"name\" : \"childTravelerAge\",\n  \"in\" : \"query\",\n  \"description\" : \"childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be flying. Valid values are 0-17 (0 for an infant under the age of one year).\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "infantSeatingInLap",
            "paramName" : "infantSeatingInLap",
            "dataType" : "Boolean",
            "description" : "Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)",
            "jsonSchema" : "{\n  \"name\" : \"infantSeatingInLap\",\n  \"in\" : \"query\",\n  \"description\" : \"Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "lccAndMerchantFareCheckoutAllowed",
            "paramName" : "lccAndMerchantFareCheckoutAllowed",
            "dataType" : "Boolean",
            "description" : "flag to indicate whether lcc and merchant fares should be returned in search response",
            "jsonSchema" : "{\n  \"name\" : \"lccAndMerchantFareCheckoutAllowed\",\n  \"in\" : \"query\",\n  \"description\" : \"flag to indicate whether lcc and merchant fares should be returned in search response\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "correlationId",
            "paramName" : "correlationId",
            "dataType" : "String",
            "description" : "Optional parameter to define a correlation between a hotel search and a flight search",
            "jsonSchema" : "{\n  \"name\" : \"correlationId\",\n  \"in\" : \"query\",\n  \"description\" : \"Optional parameter to define a correlation between a hotel search and a flight search\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "maxOfferCount",
            "paramName" : "maxOfferCount",
            "dataType" : "Integer",
            "description" : "Maximum number of offers to return. (Default: 111, Max: 2000)",
            "jsonSchema" : "{\n  \"name\" : \"maxOfferCount\",\n  \"in\" : \"query\",\n  \"description\" : \"Maximum number of offers to return. (Default: 111, Max: 2000)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "departureDate",
            "paramName" : "departureDate",
            "dataType" : "String",
            "description" : "Date the customer wants to leave for their flight on, in ISO format.",
            "jsonSchema" : "{\n  \"name\" : \"departureDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the customer wants to leave for their flight on, in ISO format.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "returnDate",
            "paramName" : "returnDate",
            "dataType" : "String",
            "description" : "Date the customer wants to return on. If present indicates a round trip search. If not supplied, then it's a one-way search.",
            "jsonSchema" : "{\n  \"name\" : \"returnDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Date the customer wants to return on. If present indicates a round trip search. If not supplied, then it's a one-way search.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "departureAirport",
            "paramName" : "departureAirport",
            "dataType" : "String",
            "description" : "The three letter airport code for where the customer is leaving from.",
            "jsonSchema" : "{\n  \"name\" : \"departureAirport\",\n  \"in\" : \"query\",\n  \"description\" : \"The three letter airport code for where the customer is leaving from.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "arrivalAirport",
            "paramName" : "arrivalAirport",
            "dataType" : "String",
            "description" : "The three letter airport code to where the customer is going.",
            "jsonSchema" : "{\n  \"name\" : \"arrivalAirport\",\n  \"in\" : \"query\",\n  \"description\" : \"The three letter airport code to where the customer is going.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "prettyPrint",
            "paramName" : "prettyPrint",
            "dataType" : "Boolean",
            "description" : "Controls JSON response formatting. When set to true, its human-readable.",
            "jsonSchema" : "{\n  \"name\" : \"prettyPrint\",\n  \"in\" : \"query\",\n  \"description\" : \"Controls JSON response formatting. When set to true, its human-readable.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "numberOfAdultTravelers",
            "paramName" : "numberOfAdultTravelers",
            "dataType" : "Integer",
            "description" : "Number of Adult Travelers (Default: 1)",
            "jsonSchema" : "{\n  \"name\" : \"numberOfAdultTravelers\",\n  \"in\" : \"query\",\n  \"description\" : \"Number of Adult Travelers (Default: 1)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "childTravelerAge",
            "paramName" : "childTravelerAge",
            "dataType" : "Integer",
            "description" : "childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be flying. Valid values are 0-17 (0 for an infant under the age of one year).",
            "jsonSchema" : "{\n  \"name\" : \"childTravelerAge\",\n  \"in\" : \"query\",\n  \"description\" : \"childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be flying. Valid values are 0-17 (0 for an infant under the age of one year).\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "infantSeatingInLap",
            "paramName" : "infantSeatingInLap",
            "dataType" : "Boolean",
            "description" : "Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)",
            "jsonSchema" : "{\n  \"name\" : \"infantSeatingInLap\",\n  \"in\" : \"query\",\n  \"description\" : \"Set to true if infant(s) are without a reserved seat (in an adult's lap).(Default: false - Infant(s) in a reserved seat)\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "lccAndMerchantFareCheckoutAllowed",
            "paramName" : "lccAndMerchantFareCheckoutAllowed",
            "dataType" : "Boolean",
            "description" : "flag to indicate whether lcc and merchant fares should be returned in search response",
            "jsonSchema" : "{\n  \"name\" : \"lccAndMerchantFareCheckoutAllowed\",\n  \"in\" : \"query\",\n  \"description\" : \"flag to indicate whether lcc and merchant fares should be returned in search response\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "correlationId",
            "paramName" : "correlationId",
            "dataType" : "String",
            "description" : "Optional parameter to define a correlation between a hotel search and a flight search",
            "jsonSchema" : "{\n  \"name\" : \"correlationId\",\n  \"in\" : \"query\",\n  \"description\" : \"Optional parameter to define a correlation between a hotel search and a flight search\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "maxOfferCount",
            "paramName" : "maxOfferCount",
            "dataType" : "Integer",
            "description" : "Maximum number of offers to return. (Default: 111, Max: 2000)",
            "jsonSchema" : "{\n  \"name\" : \"maxOfferCount\",\n  \"in\" : \"query\",\n  \"description\" : \"Maximum number of offers to return. (Default: 111, Max: 2000)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Flights" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "flightSearchResponse",
            "baseType" : "flightSearchResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/flightSearchResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/flightSearchResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "integer", "flightSearchResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"activityId\" : \"aeiou\",\\n  \"percentDelaysCancellationsURL\" : \"aeiou\",\\n  \"searchCities\" : [ {\\n    \"province\" : \"aeiou\",\\n    \"searchType\" : \"aeiou\",\\n    \"code\" : \"aeiou\",\\n    \"country\" : \"aeiou\",\\n    \"city\" : \"aeiou\"\\n  } ],\\n  \"obFeesDetails\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"offers\" : [ {\\n    \"fareName\" : \"aeiou\",\\n    \"baseFare\" : \"aeiou\",\\n    \"hasBagFee\" : true,\\n    \"mayChargeOBFees\" : true,\\n    \"taxesPrice\" : null,\\n    \"numberOfTickets\" : 123,\\n    \"legIds\" : [ \"aeiou\" ],\\n    \"currency\" : \"aeiou\",\\n    \"seatsRemaining\" : 123,\\n    \"mobileShoppingKey\" : \"aeiou\",\\n    \"baggageFeesUrl\" : \"aeiou\",\\n    \"averageTotalPricePerTicket\" : null,\\n    \"feesPrice\" : null,\\n    \"fareNameLink\" : \"aeiou\",\\n    \"fees\" : \"aeiou\",\\n    \"segmentAttributes\" : [ [ {\\n      \"cabinCode\" : \"aeiou\",\\n      \"bookingCode\" : \"aeiou\"\\n    } ] ],\\n    \"totalFarePrice\" : null,\\n    \"baseFarePrice\" : {\\n      \"amount\" : \"aeiou\",\\n      \"formattedWholePrice\" : \"aeiou\",\\n      \"formattedPrice\" : \"aeiou\"\\n    },\\n    \"showFees\" : true,\\n    \"pricePerPassengerCategory\" : [ {\\n      \"passengerCategory\" : \"aeiou\",\\n      \"taxesPrice\" : null,\\n      \"basePrice\" : null,\\n      \"totalPrice\" : null\\n    } ],\\n    \"totalFare\" : \"aeiou\",\\n    \"productKey\" : \"aeiou\",\\n    \"hasNoBagFee\" : true,\\n    \"isInternational\" : true,\\n    \"fareType\" : \"aeiou\",\\n    \"taxes\" : \"aeiou\"\\n  } ],\\n  \"legs\" : [ {\\n    \"segments\" : [ {\\n      \"arrivalTimeEpochSeconds\" : 123,\\n      \"airlineName\" : \"aeiou\",\\n      \"departureTimeRaw\" : \"aeiou\",\\n      \"operatingAirlineName\" : \"aeiou\",\\n      \"flightNumber\" : \"aeiou\",\\n      \"onTimePercentage\" : \"aeiou\",\\n      \"departureTimeEpochSeconds\" : 123,\\n      \"arrivalTimeRaw\" : \"aeiou\",\\n      \"stops\" : 123,\\n      \"arrivalTimeZoneOffsetSeconds\" : 123,\\n      \"distance\" : 123,\\n      \"airlineCode\" : \"aeiou\",\\n      \"sameFlightAsPreviousSegment\" : true,\\n      \"operatingAirlineCode\" : \"aeiou\",\\n      \"departureAirportCode\" : \"aeiou\",\\n      \"arrivalAirportLocation\" : \"aeiou\",\\n      \"departureAirportLocation\" : \"aeiou\",\\n      \"meal\" : \"aeiou\",\\n      \"arrivalAirportCode\" : \"aeiou\",\\n      \"distanceUnits\" : \"aeiou\",\\n      \"departureTime\" : \"aeiou\",\\n      \"providerCode\" : \"aeiou\",\\n      \"duration\" : \"aeiou\",\\n      \"arrivalTime\" : \"aeiou\",\\n      \"equipmentDescription\" : \"aeiou\",\\n      \"departureTimeZoneOffsetSeconds\" : 123,\\n      \"equipmentCode\" : \"aeiou\"\\n    } ],\\n    \"baggageFeesUrl\" : \"aeiou\",\\n    \"legId\" : \"aeiou\"\\n  } ]\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "flights-search"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/flight/trip/create",
          "operationId" : "flights-create-trip",
          "returnType" : "apiCreateTripResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "apiCreateTripResponse",
          "summary" : "Create A Trip",
          "notes" : "Mobile API Flights Create Trip Operation",
          "baseName" : "Flights",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product key, obtained from /api/flight/search, we are going to create a trip for. The productKey or mobileShoppingKey is required.",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"formData\",\n  \"description\" : \"The product key, obtained from /api/flight/search, we are going to create a trip for. The productKey or mobileShoppingKey is required.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mobileShoppingKey",
            "paramName" : "mobileShoppingKey",
            "dataType" : "String",
            "description" : "The mobile shopping key we are going to create a trip for. The productKey or mobileShoppingKey is required.",
            "jsonSchema" : "{\n  \"name\" : \"mobileShoppingKey\",\n  \"in\" : \"formData\",\n  \"description\" : \"The mobile shopping key we are going to create a trip for. The productKey or mobileShoppingKey is required.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tripTitle",
            "paramName" : "tripTitle",
            "dataType" : "String",
            "description" : "The name of this itinerary as it will appear to customer service and in the itinerary list. Upto 255 characters that must be one of these: .,a-zA-Z0-9'- #",
            "jsonSchema" : "{\n  \"name\" : \"tripTitle\",\n  \"in\" : \"formData\",\n  \"description\" : \"The name of this itinerary as it will appear to customer service and in the itinerary list. Upto 255 characters that must be one of these: .,a-zA-Z0-9'- #\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "withInsurance",
            "paramName" : "withInsurance",
            "dataType" : "Boolean",
            "description" : "Whether to return the available insurance options for this trip. Currently this only works for flights. (Default: false)",
            "jsonSchema" : "{\n  \"name\" : \"withInsurance\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to return the available insurance options for this trip. Currently this only works for flights. (Default: false)\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "qualifyAirAttach",
            "paramName" : "qualifyAirAttach",
            "dataType" : "Boolean",
            "description" : "Whether to return a qualified air attach product for this trip. It will use the same rate plan and room type codes as the productKey sent in the request. But the product key that will be used to get the air attached product will be different.",
            "jsonSchema" : "{\n  \"name\" : \"qualifyAirAttach\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to return a qualified air attach product for this trip. It will use the same rate plan and room type codes as the productKey sent in the request. But the product key that will be used to get the air attached product will be different.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product key, obtained from /api/flight/search, we are going to create a trip for. The productKey or mobileShoppingKey is required.",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"formData\",\n  \"description\" : \"The product key, obtained from /api/flight/search, we are going to create a trip for. The productKey or mobileShoppingKey is required.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "mobileShoppingKey",
            "paramName" : "mobileShoppingKey",
            "dataType" : "String",
            "description" : "The mobile shopping key we are going to create a trip for. The productKey or mobileShoppingKey is required.",
            "jsonSchema" : "{\n  \"name\" : \"mobileShoppingKey\",\n  \"in\" : \"formData\",\n  \"description\" : \"The mobile shopping key we are going to create a trip for. The productKey or mobileShoppingKey is required.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tripTitle",
            "paramName" : "tripTitle",
            "dataType" : "String",
            "description" : "The name of this itinerary as it will appear to customer service and in the itinerary list. Upto 255 characters that must be one of these: .,a-zA-Z0-9'- #",
            "jsonSchema" : "{\n  \"name\" : \"tripTitle\",\n  \"in\" : \"formData\",\n  \"description\" : \"The name of this itinerary as it will appear to customer service and in the itinerary list. Upto 255 characters that must be one of these: .,a-zA-Z0-9'- #\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "withInsurance",
            "paramName" : "withInsurance",
            "dataType" : "Boolean",
            "description" : "Whether to return the available insurance options for this trip. Currently this only works for flights. (Default: false)",
            "jsonSchema" : "{\n  \"name\" : \"withInsurance\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to return the available insurance options for this trip. Currently this only works for flights. (Default: false)\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "qualifyAirAttach",
            "paramName" : "qualifyAirAttach",
            "dataType" : "Boolean",
            "description" : "Whether to return a qualified air attach product for this trip. It will use the same rate plan and room type codes as the productKey sent in the request. But the product key that will be used to get the air attached product will be different.",
            "jsonSchema" : "{\n  \"name\" : \"qualifyAirAttach\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to return a qualified air attach product for this trip. It will use the same rate plan and room type codes as the productKey sent in the request. But the product key that will be used to get the air attached product will be different.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "tags" : [ "Flights" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "apiCreateTripResponse",
            "baseType" : "apiCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCreateTripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "apiCreateTripResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"tealeafTransactionId\" : \"aeiou\",\\n  \"rewardsPoints\" : true,\\n  \"couponDiscount\" : null,\\n  \"rules\" : {\\n    \"RuleToUrlMap\" : \"aeiou\",\\n    \"RuleToTextMap\" : \"aeiou\"\\n  },\\n  \"activityId\" : \"aeiou\",\\n  \"validFormsOfPayment\" : [ {\\n    \"fee\" : \"aeiou\",\\n    \"feeCurrencyCode\" : \"aeiou\",\\n    \"formattedFee\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"totalFarePriceWithFee\" : \"aeiou\"\\n  } ],\\n  \"selectedInsuranceProduct\" : null,\\n  \"passengerCategories\" : [ \"aeiou\" ],\\n  \"details\" : {\\n    \"changedPrice\" : null,\\n    \"priceChangeAmount\" : \"aeiou\",\\n    \"oldOffer\" : null,\\n    \"flightRules\" : [ {\\n      \"enrouteRefundAllowedAmount\" : \"aeiou\",\\n      \"enrouteChangePenaltyAmount\" : \"aeiou\",\\n      \"isChangeAllowed\" : true,\\n      \"refundPenaltyAmount\" : \"aeiou\",\\n      \"currencyCode\" : \"aeiou\",\\n      \"isRefundable\" : true,\\n      \"enrouteRefundAllowedPrice\" : null,\\n      \"refundPenaltyPrice\" : null,\\n      \"changePenaltyPrice\" : null,\\n      \"isEnrouteRefundAllowed\" : true,\\n      \"isEnrouteChangeAllowed\" : true,\\n      \"enrouteChangePenaltyPrice\" : null,\\n      \"summaryText\" : \"aeiou\",\\n      \"changePenaltyAmount\" : \"aeiou\"\\n    } ],\\n    \"productKey\" : \"aeiou\",\\n    \"obFeeTotalAmount\" : \"aeiou\",\\n    \"obFeePrice\" : null,\\n    \"legs\" : [ {\\n      \"segments\" : [ {\\n        \"arrivalTimeEpochSeconds\" : 123,\\n        \"airlineName\" : \"aeiou\",\\n        \"departureTimeRaw\" : \"aeiou\",\\n        \"operatingAirlineName\" : \"aeiou\",\\n        \"flightNumber\" : \"aeiou\",\\n        \"onTimePercentage\" : \"aeiou\",\\n        \"departureTimeEpochSeconds\" : 123,\\n        \"arrivalTimeRaw\" : \"aeiou\",\\n        \"stops\" : 123,\\n        \"arrivalTimeZoneOffsetSeconds\" : 123,\\n        \"distance\" : 123,\\n        \"airlineCode\" : \"aeiou\",\\n        \"sameFlightAsPreviousSegment\" : true,\\n        \"operatingAirlineCode\" : \"aeiou\",\\n        \"departureAirportCode\" : \"aeiou\",\\n        \"arrivalAirportLocation\" : \"aeiou\",\\n        \"departureAirportLocation\" : \"aeiou\",\\n        \"meal\" : \"aeiou\",\\n        \"arrivalAirportCode\" : \"aeiou\",\\n        \"distanceUnits\" : \"aeiou\",\\n        \"departureTime\" : \"aeiou\",\\n        \"providerCode\" : \"aeiou\",\\n        \"duration\" : \"aeiou\",\\n        \"arrivalTime\" : \"aeiou\",\\n        \"equipmentDescription\" : \"aeiou\",\\n        \"departureTimeZoneOffsetSeconds\" : 123,\\n        \"equipmentCode\" : \"aeiou\"\\n      } ],\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"legId\" : \"aeiou\"\\n    } ],\\n    \"offer\" : {\\n      \"fareName\" : \"aeiou\",\\n      \"baseFare\" : \"aeiou\",\\n      \"hasBagFee\" : true,\\n      \"mayChargeOBFees\" : true,\\n      \"taxesPrice\" : null,\\n      \"numberOfTickets\" : 123,\\n      \"legIds\" : [ \"aeiou\" ],\\n      \"currency\" : \"aeiou\",\\n      \"seatsRemaining\" : 123,\\n      \"mobileShoppingKey\" : \"aeiou\",\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"averageTotalPricePerTicket\" : null,\\n      \"feesPrice\" : null,\\n      \"fareNameLink\" : \"aeiou\",\\n      \"fees\" : \"aeiou\",\\n      \"segmentAttributes\" : [ [ {\\n        \"cabinCode\" : \"aeiou\",\\n        \"bookingCode\" : \"aeiou\"\\n      } ] ],\\n      \"totalFarePrice\" : null,\\n      \"baseFarePrice\" : null,\\n      \"showFees\" : true,\\n      \"pricePerPassengerCategory\" : [ {\\n        \"passengerCategory\" : \"aeiou\",\\n        \"taxesPrice\" : null,\\n        \"basePrice\" : null,\\n        \"totalPrice\" : null\\n      } ],\\n      \"totalFare\" : \"aeiou\",\\n      \"productKey\" : \"aeiou\",\\n      \"hasNoBagFee\" : true,\\n      \"isInternational\" : true,\\n      \"fareType\" : \"aeiou\",\\n      \"taxes\" : \"aeiou\"\\n    }\\n  },\\n  \"isCustomerTitleRequired\" : \"aeiou\",\\n  \"availableInsuranceProducts\" : [ {\\n    \"selectedInsuranceAddOn\" : null,\\n    \"totalPriceWithoutAddOns\" : null,\\n    \"description\" : \"aeiou\",\\n    \"availableInsuranceAddOns\" : [ {\\n      \"price\" : null,\\n      \"insuranceTypeId\" : 123,\\n      \"description\" : \"aeiou\",\\n      \"displayPriceType\" : \"aeiou\",\\n      \"name\" : \"aeiou\",\\n      \"termsUrl\" : \"aeiou\",\\n      \"displayPrice\" : null\\n    } ],\\n    \"displayPriceType\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"termsUrl\" : \"aeiou\",\\n    \"policyNumber\" : \"aeiou\",\\n    \"displayPrice\" : null,\\n    \"totalPrice\" : null,\\n    \"productId\" : \"aeiou\"\\n  } ],\\n  \"coupon\" : {\\n    \"name\" : \"aeiou\",\\n    \"instanceId\" : 123,\\n    \"code\" : \"aeiou\"\\n  },\\n  \"expediaRewards\" : {\\n    \"totalPointsToEarn\" : 123,\\n    \"isActiveRewardsMember\" : true,\\n    \"rewardsMembershipTierName\" : \"aeiou\"\\n  },\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  },\\n  \"totalPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "flights-create-trip"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/m/trip/coupon",
          "operationId" : "packages-apply-coupon",
          "returnType" : "apiCreateTripResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "apiCreateTripResponse",
          "summary" : "Apply Coupon",
          "notes" : "Mobile API Packages Apply Coupon",
          "baseName" : "Flights",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.name",
            "paramName" : "coupon.name",
            "dataType" : "String",
            "description" : "Coupon Name",
            "jsonSchema" : "{\n  \"name\" : \"coupon.name\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.code",
            "paramName" : "coupon.code",
            "dataType" : "String",
            "description" : "Coupon Code",
            "jsonSchema" : "{\n  \"name\" : \"coupon.code\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Code\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.name",
            "paramName" : "coupon.name",
            "dataType" : "String",
            "description" : "Coupon Name",
            "jsonSchema" : "{\n  \"name\" : \"coupon.name\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.code",
            "paramName" : "coupon.code",
            "dataType" : "String",
            "description" : "Coupon Code",
            "jsonSchema" : "{\n  \"name\" : \"coupon.code\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Code\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "tags" : [ "Flights" ],
          "responses" : [ {
            "code" : "200-OK",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "jsonCreateTripResponse",
            "baseType" : "jsonCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Api",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "apiCreateTripResponse",
            "baseType" : "apiCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Package",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "packageCreateTripResponse",
            "baseType" : "packageCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/packageCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/packageCreateTripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "apiCreateTripResponse", "jsonCreateTripResponse", "packageCreateTripResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"tealeafTransactionId\" : \"aeiou\",\\n  \"rewardsPoints\" : true,\\n  \"couponDiscount\" : null,\\n  \"rules\" : {\\n    \"RuleToUrlMap\" : \"aeiou\",\\n    \"RuleToTextMap\" : \"aeiou\"\\n  },\\n  \"activityId\" : \"aeiou\",\\n  \"validFormsOfPayment\" : [ {\\n    \"fee\" : \"aeiou\",\\n    \"feeCurrencyCode\" : \"aeiou\",\\n    \"formattedFee\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"totalFarePriceWithFee\" : \"aeiou\"\\n  } ],\\n  \"selectedInsuranceProduct\" : null,\\n  \"passengerCategories\" : [ \"aeiou\" ],\\n  \"details\" : {\\n    \"changedPrice\" : null,\\n    \"priceChangeAmount\" : \"aeiou\",\\n    \"oldOffer\" : null,\\n    \"flightRules\" : [ {\\n      \"enrouteRefundAllowedAmount\" : \"aeiou\",\\n      \"enrouteChangePenaltyAmount\" : \"aeiou\",\\n      \"isChangeAllowed\" : true,\\n      \"refundPenaltyAmount\" : \"aeiou\",\\n      \"currencyCode\" : \"aeiou\",\\n      \"isRefundable\" : true,\\n      \"enrouteRefundAllowedPrice\" : null,\\n      \"refundPenaltyPrice\" : null,\\n      \"changePenaltyPrice\" : null,\\n      \"isEnrouteRefundAllowed\" : true,\\n      \"isEnrouteChangeAllowed\" : true,\\n      \"enrouteChangePenaltyPrice\" : null,\\n      \"summaryText\" : \"aeiou\",\\n      \"changePenaltyAmount\" : \"aeiou\"\\n    } ],\\n    \"productKey\" : \"aeiou\",\\n    \"obFeeTotalAmount\" : \"aeiou\",\\n    \"obFeePrice\" : null,\\n    \"legs\" : [ {\\n      \"segments\" : [ {\\n        \"arrivalTimeEpochSeconds\" : 123,\\n        \"airlineName\" : \"aeiou\",\\n        \"departureTimeRaw\" : \"aeiou\",\\n        \"operatingAirlineName\" : \"aeiou\",\\n        \"flightNumber\" : \"aeiou\",\\n        \"onTimePercentage\" : \"aeiou\",\\n        \"departureTimeEpochSeconds\" : 123,\\n        \"arrivalTimeRaw\" : \"aeiou\",\\n        \"stops\" : 123,\\n        \"arrivalTimeZoneOffsetSeconds\" : 123,\\n        \"distance\" : 123,\\n        \"airlineCode\" : \"aeiou\",\\n        \"sameFlightAsPreviousSegment\" : true,\\n        \"operatingAirlineCode\" : \"aeiou\",\\n        \"departureAirportCode\" : \"aeiou\",\\n        \"arrivalAirportLocation\" : \"aeiou\",\\n        \"departureAirportLocation\" : \"aeiou\",\\n        \"meal\" : \"aeiou\",\\n        \"arrivalAirportCode\" : \"aeiou\",\\n        \"distanceUnits\" : \"aeiou\",\\n        \"departureTime\" : \"aeiou\",\\n        \"providerCode\" : \"aeiou\",\\n        \"duration\" : \"aeiou\",\\n        \"arrivalTime\" : \"aeiou\",\\n        \"equipmentDescription\" : \"aeiou\",\\n        \"departureTimeZoneOffsetSeconds\" : 123,\\n        \"equipmentCode\" : \"aeiou\"\\n      } ],\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"legId\" : \"aeiou\"\\n    } ],\\n    \"offer\" : {\\n      \"fareName\" : \"aeiou\",\\n      \"baseFare\" : \"aeiou\",\\n      \"hasBagFee\" : true,\\n      \"mayChargeOBFees\" : true,\\n      \"taxesPrice\" : null,\\n      \"numberOfTickets\" : 123,\\n      \"legIds\" : [ \"aeiou\" ],\\n      \"currency\" : \"aeiou\",\\n      \"seatsRemaining\" : 123,\\n      \"mobileShoppingKey\" : \"aeiou\",\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"averageTotalPricePerTicket\" : null,\\n      \"feesPrice\" : null,\\n      \"fareNameLink\" : \"aeiou\",\\n      \"fees\" : \"aeiou\",\\n      \"segmentAttributes\" : [ [ {\\n        \"cabinCode\" : \"aeiou\",\\n        \"bookingCode\" : \"aeiou\"\\n      } ] ],\\n      \"totalFarePrice\" : null,\\n      \"baseFarePrice\" : null,\\n      \"showFees\" : true,\\n      \"pricePerPassengerCategory\" : [ {\\n        \"passengerCategory\" : \"aeiou\",\\n        \"taxesPrice\" : null,\\n        \"basePrice\" : null,\\n        \"totalPrice\" : null\\n      } ],\\n      \"totalFare\" : \"aeiou\",\\n      \"productKey\" : \"aeiou\",\\n      \"hasNoBagFee\" : true,\\n      \"isInternational\" : true,\\n      \"fareType\" : \"aeiou\",\\n      \"taxes\" : \"aeiou\"\\n    }\\n  },\\n  \"isCustomerTitleRequired\" : \"aeiou\",\\n  \"availableInsuranceProducts\" : [ {\\n    \"selectedInsuranceAddOn\" : null,\\n    \"totalPriceWithoutAddOns\" : null,\\n    \"description\" : \"aeiou\",\\n    \"availableInsuranceAddOns\" : [ {\\n      \"price\" : null,\\n      \"insuranceTypeId\" : 123,\\n      \"description\" : \"aeiou\",\\n      \"displayPriceType\" : \"aeiou\",\\n      \"name\" : \"aeiou\",\\n      \"termsUrl\" : \"aeiou\",\\n      \"displayPrice\" : null\\n    } ],\\n    \"displayPriceType\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"termsUrl\" : \"aeiou\",\\n    \"policyNumber\" : \"aeiou\",\\n    \"displayPrice\" : null,\\n    \"totalPrice\" : null,\\n    \"productId\" : \"aeiou\"\\n  } ],\\n  \"coupon\" : {\\n    \"name\" : \"aeiou\",\\n    \"instanceId\" : 123,\\n    \"code\" : \"aeiou\"\\n  },\\n  \"expediaRewards\" : {\\n    \"totalPointsToEarn\" : 123,\\n    \"isActiveRewardsMember\" : true,\\n    \"rewardsMembershipTierName\" : \"aeiou\"\\n  },\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  },\\n  \"totalPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "packages-apply-coupon"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/m/trip/remove/coupon",
          "operationId" : "packages-remove-coupon",
          "returnType" : "apiCreateTripResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "apiCreateTripResponse",
          "summary" : "Remove Coupon",
          "notes" : "Mobile API Packages Remove Coupon",
          "baseName" : "Flights",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "tags" : [ "Flights" ],
          "responses" : [ {
            "code" : "200-OK",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "jsonCreateTripResponse",
            "baseType" : "jsonCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Api",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "apiCreateTripResponse",
            "baseType" : "apiCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Package",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "packageCreateTripResponse",
            "baseType" : "packageCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/packageCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/packageCreateTripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "apiCreateTripResponse", "jsonCreateTripResponse", "packageCreateTripResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"tealeafTransactionId\" : \"aeiou\",\\n  \"rewardsPoints\" : true,\\n  \"couponDiscount\" : null,\\n  \"rules\" : {\\n    \"RuleToUrlMap\" : \"aeiou\",\\n    \"RuleToTextMap\" : \"aeiou\"\\n  },\\n  \"activityId\" : \"aeiou\",\\n  \"validFormsOfPayment\" : [ {\\n    \"fee\" : \"aeiou\",\\n    \"feeCurrencyCode\" : \"aeiou\",\\n    \"formattedFee\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"totalFarePriceWithFee\" : \"aeiou\"\\n  } ],\\n  \"selectedInsuranceProduct\" : null,\\n  \"passengerCategories\" : [ \"aeiou\" ],\\n  \"details\" : {\\n    \"changedPrice\" : null,\\n    \"priceChangeAmount\" : \"aeiou\",\\n    \"oldOffer\" : null,\\n    \"flightRules\" : [ {\\n      \"enrouteRefundAllowedAmount\" : \"aeiou\",\\n      \"enrouteChangePenaltyAmount\" : \"aeiou\",\\n      \"isChangeAllowed\" : true,\\n      \"refundPenaltyAmount\" : \"aeiou\",\\n      \"currencyCode\" : \"aeiou\",\\n      \"isRefundable\" : true,\\n      \"enrouteRefundAllowedPrice\" : null,\\n      \"refundPenaltyPrice\" : null,\\n      \"changePenaltyPrice\" : null,\\n      \"isEnrouteRefundAllowed\" : true,\\n      \"isEnrouteChangeAllowed\" : true,\\n      \"enrouteChangePenaltyPrice\" : null,\\n      \"summaryText\" : \"aeiou\",\\n      \"changePenaltyAmount\" : \"aeiou\"\\n    } ],\\n    \"productKey\" : \"aeiou\",\\n    \"obFeeTotalAmount\" : \"aeiou\",\\n    \"obFeePrice\" : null,\\n    \"legs\" : [ {\\n      \"segments\" : [ {\\n        \"arrivalTimeEpochSeconds\" : 123,\\n        \"airlineName\" : \"aeiou\",\\n        \"departureTimeRaw\" : \"aeiou\",\\n        \"operatingAirlineName\" : \"aeiou\",\\n        \"flightNumber\" : \"aeiou\",\\n        \"onTimePercentage\" : \"aeiou\",\\n        \"departureTimeEpochSeconds\" : 123,\\n        \"arrivalTimeRaw\" : \"aeiou\",\\n        \"stops\" : 123,\\n        \"arrivalTimeZoneOffsetSeconds\" : 123,\\n        \"distance\" : 123,\\n        \"airlineCode\" : \"aeiou\",\\n        \"sameFlightAsPreviousSegment\" : true,\\n        \"operatingAirlineCode\" : \"aeiou\",\\n        \"departureAirportCode\" : \"aeiou\",\\n        \"arrivalAirportLocation\" : \"aeiou\",\\n        \"departureAirportLocation\" : \"aeiou\",\\n        \"meal\" : \"aeiou\",\\n        \"arrivalAirportCode\" : \"aeiou\",\\n        \"distanceUnits\" : \"aeiou\",\\n        \"departureTime\" : \"aeiou\",\\n        \"providerCode\" : \"aeiou\",\\n        \"duration\" : \"aeiou\",\\n        \"arrivalTime\" : \"aeiou\",\\n        \"equipmentDescription\" : \"aeiou\",\\n        \"departureTimeZoneOffsetSeconds\" : 123,\\n        \"equipmentCode\" : \"aeiou\"\\n      } ],\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"legId\" : \"aeiou\"\\n    } ],\\n    \"offer\" : {\\n      \"fareName\" : \"aeiou\",\\n      \"baseFare\" : \"aeiou\",\\n      \"hasBagFee\" : true,\\n      \"mayChargeOBFees\" : true,\\n      \"taxesPrice\" : null,\\n      \"numberOfTickets\" : 123,\\n      \"legIds\" : [ \"aeiou\" ],\\n      \"currency\" : \"aeiou\",\\n      \"seatsRemaining\" : 123,\\n      \"mobileShoppingKey\" : \"aeiou\",\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"averageTotalPricePerTicket\" : null,\\n      \"feesPrice\" : null,\\n      \"fareNameLink\" : \"aeiou\",\\n      \"fees\" : \"aeiou\",\\n      \"segmentAttributes\" : [ [ {\\n        \"cabinCode\" : \"aeiou\",\\n        \"bookingCode\" : \"aeiou\"\\n      } ] ],\\n      \"totalFarePrice\" : null,\\n      \"baseFarePrice\" : null,\\n      \"showFees\" : true,\\n      \"pricePerPassengerCategory\" : [ {\\n        \"passengerCategory\" : \"aeiou\",\\n        \"taxesPrice\" : null,\\n        \"basePrice\" : null,\\n        \"totalPrice\" : null\\n      } ],\\n      \"totalFare\" : \"aeiou\",\\n      \"productKey\" : \"aeiou\",\\n      \"hasNoBagFee\" : true,\\n      \"isInternational\" : true,\\n      \"fareType\" : \"aeiou\",\\n      \"taxes\" : \"aeiou\"\\n    }\\n  },\\n  \"isCustomerTitleRequired\" : \"aeiou\",\\n  \"availableInsuranceProducts\" : [ {\\n    \"selectedInsuranceAddOn\" : null,\\n    \"totalPriceWithoutAddOns\" : null,\\n    \"description\" : \"aeiou\",\\n    \"availableInsuranceAddOns\" : [ {\\n      \"price\" : null,\\n      \"insuranceTypeId\" : 123,\\n      \"description\" : \"aeiou\",\\n      \"displayPriceType\" : \"aeiou\",\\n      \"name\" : \"aeiou\",\\n      \"termsUrl\" : \"aeiou\",\\n      \"displayPrice\" : null\\n    } ],\\n    \"displayPriceType\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"termsUrl\" : \"aeiou\",\\n    \"policyNumber\" : \"aeiou\",\\n    \"displayPrice\" : null,\\n    \"totalPrice\" : null,\\n    \"productId\" : \"aeiou\"\\n  } ],\\n  \"coupon\" : {\\n    \"name\" : \"aeiou\",\\n    \"instanceId\" : 123,\\n    \"code\" : \"aeiou\"\\n  },\\n  \"expediaRewards\" : {\\n    \"totalPointsToEarn\" : 123,\\n    \"isActiveRewardsMember\" : true,\\n    \"rewardsMembershipTierName\" : \"aeiou\"\\n  },\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  },\\n  \"totalPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "packages-remove-coupon"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "path" : "/api/mobile/image",
          "operationId" : "flights-mobile-image",
          "returnType" : "imageJsonResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "imageJsonResponse",
          "summary" : "Mobile Image",
          "notes" : "Mobile API Flight Mobile Image Operation",
          "baseName" : "Flights",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "imageCode",
            "paramName" : "imageCode",
            "dataType" : "String",
            "description" : "image primary key, for example CAR:ECONOMY ACTIVITY:DISNEY DESTINATION:JFK DESTINATIONMOBILEWEB:JFK CARMOBILEWEB:MINI",
            "jsonSchema" : "{\n  \"name\" : \"imageCode\",\n  \"in\" : \"query\",\n  \"description\" : \"image primary key, for example CAR:ECONOMY ACTIVITY:DISNEY DESTINATION:JFK DESTINATIONMOBILEWEB:JFK CARMOBILEWEB:MINI\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "imageType",
            "paramName" : "imageType",
            "dataType" : "String",
            "description" : "type of image. examples DESTINATION DESTINATIONMOBILEWEB CAR CARMOBILEWEB ACTIVITY",
            "jsonSchema" : "{\n  \"name\" : \"imageType\",\n  \"in\" : \"query\",\n  \"description\" : \"type of image. examples DESTINATION DESTINATIONMOBILEWEB CAR CARMOBILEWEB ACTIVITY\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "imageWidth",
            "paramName" : "imageWidth",
            "dataType" : "Integer",
            "description" : "Requested width of the image.",
            "jsonSchema" : "{\n  \"name\" : \"imageWidth\",\n  \"in\" : \"query\",\n  \"description\" : \"Requested width of the image.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "imageHeight",
            "paramName" : "imageHeight",
            "dataType" : "Integer",
            "description" : "Requested height of the image.",
            "jsonSchema" : "{\n  \"name\" : \"imageHeight\",\n  \"in\" : \"query\",\n  \"description\" : \"Requested height of the image.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "imageCode",
            "paramName" : "imageCode",
            "dataType" : "String",
            "description" : "image primary key, for example CAR:ECONOMY ACTIVITY:DISNEY DESTINATION:JFK DESTINATIONMOBILEWEB:JFK CARMOBILEWEB:MINI",
            "jsonSchema" : "{\n  \"name\" : \"imageCode\",\n  \"in\" : \"query\",\n  \"description\" : \"image primary key, for example CAR:ECONOMY ACTIVITY:DISNEY DESTINATION:JFK DESTINATIONMOBILEWEB:JFK CARMOBILEWEB:MINI\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "imageType",
            "paramName" : "imageType",
            "dataType" : "String",
            "description" : "type of image. examples DESTINATION DESTINATIONMOBILEWEB CAR CARMOBILEWEB ACTIVITY",
            "jsonSchema" : "{\n  \"name\" : \"imageType\",\n  \"in\" : \"query\",\n  \"description\" : \"type of image. examples DESTINATION DESTINATIONMOBILEWEB CAR CARMOBILEWEB ACTIVITY\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "imageWidth",
            "paramName" : "imageWidth",
            "dataType" : "Integer",
            "description" : "Requested width of the image.",
            "jsonSchema" : "{\n  \"name\" : \"imageWidth\",\n  \"in\" : \"query\",\n  \"description\" : \"Requested width of the image.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "imageHeight",
            "paramName" : "imageHeight",
            "dataType" : "Integer",
            "description" : "Requested height of the image.",
            "jsonSchema" : "{\n  \"name\" : \"imageHeight\",\n  \"in\" : \"query\",\n  \"description\" : \"Requested height of the image.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Flights" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "imageJsonResponse",
            "baseType" : "imageJsonResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/imageJsonResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/imageJsonResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "imageJsonResponse", "integer", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"cacheKey\" : \"aeiou\",\\n  \"imageUrl\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "flights-mobile-image"
        } ],
        "classname" : "FlightsApi"
      },
      "appDescription" : "Expedia Mobile API Documentation. <br><font color=\"blue\"> (Note: In case of authorization exception, just <a href=\"/static/mobile/swaggerui/#!/User/signin-user\">Sign-In</a>)</font>"
    }, {
      "hasMore" : "true",
      "modelPackage" : "",
      "classname" : "TripsApi",
      "package" : "",
      "imports" : [ {
        "import" : "integer"
      }, {
        "import" : "string"
      }, {
        "import" : "tripResponse"
      }, {
        "import" : "tripTitleDescriptionUpdateResponse"
      } ],
      "version" : "0.0.1",
      "classVarName" : "trips",
      "basePath" : "https://localhost/",
      "appName" : "Flights, Hotels, Packages, Trips, User API",
      "baseName" : "Trips",
      "contextPath" : "/",
      "operations" : {
        "operation" : [ {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/trips",
          "operationId" : "trips-search",
          "returnType" : "tripResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "tripResponse",
          "summary" : "Get Trips",
          "notes" : "Mobile API Trips",
          "baseName" : "Trips",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "filterBookingStatus",
            "paramName" : "filterBookingStatus",
            "dataType" : "String",
            "description" : "An optional parameter to filter by booking status. Note: You can specify this parameter more than once.",
            "jsonSchema" : "{\n  \"name\" : \"filterBookingStatus\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional parameter to filter by booking status. Note: You can specify this parameter more than once.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"SAVED\", \"PENDING\", \"BOOKED\", \"CANCELLED\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterTimePeriod",
            "paramName" : "filterTimePeriod",
            "dataType" : "String",
            "description" : "An optional parameter to filter by time period. Note: You can specify this parameter more than once.",
            "jsonSchema" : "{\n  \"name\" : \"filterTimePeriod\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional parameter to filter by time period. Note: You can specify this parameter more than once.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"UPCOMING\", \"INPROGRESS\", \"COMPLETED\", \"RECENTLY_COMPLETED\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterLineOfBusiness",
            "paramName" : "filterLineOfBusiness",
            "dataType" : "String",
            "description" : "An optional parameters to filter by line of business. Note: You can specify this parameter more than once.",
            "jsonSchema" : "{\n  \"name\" : \"filterLineOfBusiness\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional parameters to filter by line of business. Note: You can specify this parameter more than once.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"AIR\", \"HOTEL\", \"CAR\", \"PACKAGE\", \"TRAIN\", \"ACTIVITY\", \"INSURANCE\", \"CRUISE\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sort",
            "paramName" : "sort",
            "dataType" : "String",
            "description" : "An optional parameter to sort by date.",
            "jsonSchema" : "{\n  \"name\" : \"sort\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional parameter to sort by date.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"SORT_STARTDATE_ASCENDING\", \"SORT_STARTDATE_DESCENDING\", \"SORT_ENDDATE_ASCENDING\", \"SORT_ENDDATE_DESCENDING\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "getCachedDetails",
            "paramName" : "getCachedDetails",
            "dataType" : "Integer",
            "description" : "Optionally get full details for the first N trips.",
            "jsonSchema" : "{\n  \"name\" : \"getCachedDetails\",\n  \"in\" : \"query\",\n  \"description\" : \"Optionally get full details for the first N trips.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "filterBookingStatus",
            "paramName" : "filterBookingStatus",
            "dataType" : "String",
            "description" : "An optional parameter to filter by booking status. Note: You can specify this parameter more than once.",
            "jsonSchema" : "{\n  \"name\" : \"filterBookingStatus\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional parameter to filter by booking status. Note: You can specify this parameter more than once.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"SAVED\", \"PENDING\", \"BOOKED\", \"CANCELLED\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterTimePeriod",
            "paramName" : "filterTimePeriod",
            "dataType" : "String",
            "description" : "An optional parameter to filter by time period. Note: You can specify this parameter more than once.",
            "jsonSchema" : "{\n  \"name\" : \"filterTimePeriod\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional parameter to filter by time period. Note: You can specify this parameter more than once.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"UPCOMING\", \"INPROGRESS\", \"COMPLETED\", \"RECENTLY_COMPLETED\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterLineOfBusiness",
            "paramName" : "filterLineOfBusiness",
            "dataType" : "String",
            "description" : "An optional parameters to filter by line of business. Note: You can specify this parameter more than once.",
            "jsonSchema" : "{\n  \"name\" : \"filterLineOfBusiness\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional parameters to filter by line of business. Note: You can specify this parameter more than once.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"AIR\", \"HOTEL\", \"CAR\", \"PACKAGE\", \"TRAIN\", \"ACTIVITY\", \"INSURANCE\", \"CRUISE\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sort",
            "paramName" : "sort",
            "dataType" : "String",
            "description" : "An optional parameter to sort by date.",
            "jsonSchema" : "{\n  \"name\" : \"sort\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional parameter to sort by date.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"SORT_STARTDATE_ASCENDING\", \"SORT_STARTDATE_DESCENDING\", \"SORT_ENDDATE_ASCENDING\", \"SORT_ENDDATE_DESCENDING\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "getCachedDetails",
            "paramName" : "getCachedDetails",
            "dataType" : "Integer",
            "description" : "Optionally get full details for the first N trips.",
            "jsonSchema" : "{\n  \"name\" : \"getCachedDetails\",\n  \"in\" : \"query\",\n  \"description\" : \"Optionally get full details for the first N trips.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Trips" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "tripResponse",
            "baseType" : "tripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/tripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/tripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "integer", "string", "tripResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"responseData\" : [ {\\n    \"insurance\" : [ {\\n      \"startDate\" : \"2015-03-20T04:51:51.601+0000\",\\n      \"endDate\" : \"2015-03-20T04:51:51.601+0000\",\\n      \"comment\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"startDate\" : \"aeiou\",\\n    \"endDate\" : \"aeiou\",\\n    \"endDateLocalized\" : \"aeiou\",\\n    \"endTime\" : null,\\n    \"hotels\" : [ {\\n      \"numberOfNights\" : 123,\\n      \"inventorySource\" : \"aeiou\",\\n      \"checkOutDateTime\" : null,\\n      \"hotelPropertyInfo\" : {\\n        \"restrictionPolicies\" : [ \"aeiou\" ],\\n        \"checkInEndTimePolicy\" : null,\\n        \"isVipAccess\" : true,\\n        \"checkOutTimePolicy\" : null,\\n        \"checkInPolicies\" : [ \"aeiou\" ],\\n        \"fees\" : [ \"aeiou\" ],\\n        \"formattedPhoneNumbers\" : \"aeiou\",\\n        \"tollFreePhone\" : \"aeiou\",\\n        \"specialCheckInInstructions\" : [ \"aeiou\" ],\\n        \"checkInStartTimePolicy\" : {\\n          \"value\" : \"aeiou\",\\n          \"label\" : \"aeiou\"\\n        },\\n        \"starRating\" : \"aeiou\",\\n        \"mandatoryFees\" : [ \"aeiou\" ],\\n        \"photoThumbnail1000pixURL\" : \"aeiou\",\\n        \"localPhone\" : \"aeiou\",\\n        \"address\" : {\\n          \"countryName\" : \"aeiou\",\\n          \"fullAddress\" : \"aeiou\",\\n          \"cityLocalized\" : \"aeiou\",\\n          \"countryCode\" : \"aeiou\",\\n          \"addressLine5\" : \"aeiou\",\\n          \"addressLine4\" : \"aeiou\",\\n          \"addressLine3\" : \"aeiou\",\\n          \"companyName\" : \"aeiou\",\\n          \"addressLine2\" : \"aeiou\",\\n          \"addressLine1\" : \"aeiou\",\\n          \"city\" : \"aeiou\",\\n          \"postalCode\" : \"aeiou\",\\n          \"countrySubdivisionCode\" : \"aeiou\"\\n        },\\n        \"googleMapsLink\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"generalRules\" : [ \"aeiou\" ],\\n        \"photoThumbnail500pixURL\" : \"aeiou\",\\n        \"photoThumbnailURL\" : \"aeiou\"\\n      },\\n      \"paymentsAndCreditFees\" : {\\n        \"isPaymentsCreditsVisible\" : true,\\n        \"isFullyCancelled\" : true,\\n        \"isDirectAgency\" : true,\\n        \"paymentsCreditsDAHotelAnyRoomCancelled\" : \"aeiou\",\\n        \"paymentsDepositRequired\" : \"aeiou\",\\n        \"isGDS\" : true,\\n        \"isDepositRequired\" : true,\\n        \"isAnyRoomCancelled\" : true,\\n        \"noFeesStaticText\" : \"aeiou\",\\n        \"paymentsCreditsGDSHotelAnyRoomCancelled\" : \"aeiou\",\\n        \"paymentsHotelFeesAndDepositsDisclaimer\" : \"aeiou\"\\n      },\\n      \"endTime\" : null,\\n      \"hotelId\" : \"aeiou\",\\n      \"startTime\" : null,\\n      \"isFreeCancellationAvailable\" : true,\\n      \"inventoryType\" : \"aeiou\",\\n      \"appliedCoupons\" : [ {\\n        \"description\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"code\" : \"aeiou\",\\n        \"couponValue\" : null\\n      } ],\\n      \"rooms\" : [ {\\n        \"roomTypeCode\" : \"aeiou\",\\n        \"drrRateDiscountDescription\" : \"aeiou\",\\n        \"availableOnAllDates\" : \"aeiou\",\\n        \"amenities\" : [ \"aeiou\" ],\\n        \"uniqueID\" : \"aeiou\",\\n        \"averagePriceDetails\" : null,\\n        \"refundabilityStatus\" : \"aeiou\",\\n        \"roomPreferences\" : {\\n          \"otherOccupantInfo\" : {\\n            \"childCount\" : 123,\\n            \"adultCount\" : 123,\\n            \"infantCount\" : 123,\\n            \"childAndInfantAges\" : [ 123 ]\\n          },\\n          \"occupantSelectedRoomOptions\" : {\\n            \"hasExtraBedInfant\" : true,\\n            \"bedTypeName\" : \"aeiou\",\\n            \"isRoomOptionsAvailable\" : true,\\n            \"defaultBedTypeName\" : \"aeiou\",\\n            \"specialRequest\" : \"aeiou\",\\n            \"smokingPreference\" : \"aeiou\",\\n            \"isSmokingPreferenceSelected\" : true,\\n            \"hasExtraBedChild\" : true,\\n            \"hasExtraBedAdult\" : true,\\n            \"accessibilityOptions\" : [ \"aeiou\" ]\\n          },\\n          \"availableRoomOptions\" : {\\n            \"isNonSmokingRoomAvailable\" : true,\\n            \"bedTypes\" : [ {\\n              \"id\" : \"aeiou\",\\n              \"selected\" : true,\\n              \"description\" : \"aeiou\"\\n            } ],\\n            \"isSmokingRoomAvailable\" : true,\\n            \"accessibilityOptions\" : [ {\\n              \"id\" : \"aeiou\",\\n              \"selected\" : true,\\n              \"description\" : \"aeiou\"\\n            } ]\\n          },\\n          \"primaryOccupant\" : {\\n            \"frequentFlyerPlanName\" : \"aeiou\",\\n            \"phone\" : \"aeiou\",\\n            \"primaryPhone\" : \"aeiou\",\\n            \"email\" : \"aeiou\",\\n            \"frequentGuestPlanName\" : \"aeiou\",\\n            \"frequentGuestMembershipCode\" : \"aeiou\",\\n            \"fullName\" : \"aeiou\",\\n            \"frequentFlyerMembershipCode\" : \"aeiou\",\\n            \"firstName\" : \"aeiou\"\\n          }\\n        },\\n        \"totalPriceDetails\" : null,\\n        \"ratePlanCode\" : \"aeiou\",\\n        \"hotelConfirmationNumber\" : \"aeiou\",\\n        \"cancelRefundDetails\" : {\\n          \"refundAmount\" : \"aeiou\",\\n          \"currencyCode\" : \"aeiou\",\\n          \"penaltyAmountFormatted\" : \"aeiou\",\\n          \"condition\" : \"aeiou\",\\n          \"penaltyAmount\" : \"aeiou\",\\n          \"refundAmountFormatted\" : \"aeiou\"\\n        },\\n        \"roomCancelLink\" : \"aeiou\",\\n        \"roomChangeLink\" : \"aeiou\",\\n        \"orderLineNumber\" : \"aeiou\",\\n        \"hotelCancellationId\" : \"aeiou\",\\n        \"bookingStatus\" : \"aeiou\",\\n        \"bookingStatusEnum\" : \"aeiou\",\\n        \"roomRatePlanDescription\" : \"aeiou\"\\n      } ],\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"checkInDate\" : \"aeiou\",\\n      \"checkOutDate\" : \"aeiou\",\\n      \"checkOutDateLocalized\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"infositeURL\" : \"aeiou\",\\n      \"averagePriceDetails\" : null,\\n      \"checkInDateLocalized\" : \"aeiou\",\\n      \"rules\" : {\\n        \"loyaltyPointsDisclaimer\" : \"aeiou\",\\n        \"paymentPolicies\" : [ \"aeiou\" ],\\n        \"occupancyPolicies\" : [ \"aeiou\" ],\\n        \"cancellationWindowTime\" : null,\\n        \"quebecResidentsIndemnityFund\" : \"aeiou\",\\n        \"currencyConversionDisclaimer\" : \"aeiou\",\\n        \"currencyDisclaimer\" : \"aeiou\",\\n        \"aarpCheckIn\" : \"aeiou\",\\n        \"accessibilityText\" : \"aeiou\",\\n        \"roomRequestDisclaimer\" : \"aeiou\",\\n        \"cancelChangeRules\" : [ \"aeiou\" ],\\n        \"opaquePolicies\" : [ \"aeiou\" ],\\n        \"cancelChangeRulesIntroduction\" : \"aeiou\",\\n        \"extraGuestPolicies\" : [ \"aeiou\" ],\\n        \"opaqueRules\" : [ \"aeiou\" ],\\n        \"cancelChangeWarning\" : \"aeiou\",\\n        \"lateArrivalInstructions\" : \"aeiou\"\\n      },\\n      \"inventoryVisibility\" : \"aeiou\",\\n      \"totalPriceDetails\" : null,\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"checkInDateTime\" : null,\\n      \"roomChangeLink\" : \"aeiou\",\\n      \"orderNumber\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"bookingStatusText\" : \"aeiou\"\\n    } ],\\n    \"startTime\" : null,\\n    \"title\" : \"aeiou\",\\n    \"levelOfDetail\" : \"aeiou\",\\n    \"sharableDetailsURL\" : \"aeiou\",\\n    \"flights\" : [ {\\n      \"isSeatMapAvailable\" : true,\\n      \"startDate\" : \"aeiou\",\\n      \"flightType\" : \"aeiou\",\\n      \"fareTotal\" : {\\n        \"insurance\" : \"aeiou\",\\n        \"expediaServiceFeeFormatted\" : \"aeiou\",\\n        \"subTotal\" : \"aeiou\",\\n        \"expediaServiceFee\" : \"aeiou\",\\n        \"airlineCardFee\" : \"aeiou\",\\n        \"airlineCardFeeFormatted\" : \"aeiou\",\\n        \"subTotalFormatted\" : \"aeiou\",\\n        \"couponDiscount\" : \"aeiou\",\\n        \"couponDiscountFormatted\" : \"aeiou\",\\n        \"insuranceFormatted\" : \"aeiou\"\\n      },\\n      \"endDate\" : \"aeiou\",\\n      \"isLccOrCharter\" : true,\\n      \"farePerPassenger\" : [ {\\n        \"total\" : \"aeiou\",\\n        \"passengerIndex\" : 123,\\n        \"ancillaryFees\" : [ {\\n          \"listOfLegsAncillaryAppliedTo\" : [ \"aeiou\" ],\\n          \"weight\" : {\\n            \"unit\" : \"aeiou\"\\n          },\\n          \"quantity\" : 123,\\n          \"addToTotal\" : true\\n        } ],\\n        \"passengerTypeCodeLocalized\" : \"aeiou\",\\n        \"baseFormatted\" : \"aeiou\",\\n        \"passengerTypeCode\" : \"aeiou\",\\n        \"totalFormatted\" : \"aeiou\",\\n        \"fees\" : [ {\\n          \"amount\" : \"aeiou\",\\n          \"amountFormatted\" : \"aeiou\",\\n          \"localizedName\" : \"aeiou\"\\n        } ],\\n        \"currency\" : \"aeiou\",\\n        \"taxesFormatted\" : \"aeiou\",\\n        \"base\" : \"aeiou\",\\n        \"fromToAirportCodes\" : \"aeiou\",\\n        \"taxes\" : \"aeiou\"\\n      } ],\\n      \"expediaBookingId\" : \"aeiou\",\\n      \"passengers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"dateOfBirth\" : null,\\n        \"lastName\" : \"aeiou\",\\n        \"TSARedressNumber\" : \"aeiou\",\\n        \"passportAddress\" : \"aeiou\",\\n        \"typeCode\" : \"aeiou\",\\n        \"phoneNumbers\" : [ {\\n          \"phone\" : \"aeiou\",\\n          \"countryCode\" : \"aeiou\"\\n        } ],\\n        \"specialAssistanceOptions\" : [ \"aeiou\" ],\\n        \"title\" : \"aeiou\",\\n        \"typeLocalized\" : \"aeiou\",\\n        \"ticketNumbers\" : [ \"aeiou\" ],\\n        \"gender\" : \"aeiou\",\\n        \"passportCountryCode\" : \"aeiou\",\\n        \"seats\" : [ {\\n          \"requested\" : \"aeiou\",\\n          \"seatPreference\" : \"aeiou\",\\n          \"legIndex\" : 123,\\n          \"seatPreferenceLocalized\" : \"aeiou\",\\n          \"smokingAllowed\" : true,\\n          \"assigned\" : \"aeiou\",\\n          \"ticketingStatus\" : \"aeiou\",\\n          \"segmentIndex\" : 123\\n        } ],\\n        \"fullName\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\",\\n        \"frequentFlyerPlans\" : [ {\\n          \"airlineCode\" : \"aeiou\",\\n          \"programCode\" : \"aeiou\",\\n          \"membershipNumber\" : \"aeiou\",\\n          \"programName\" : \"aeiou\"\\n        } ],\\n        \"cancelledTicketNumbers\" : [ \"aeiou\" ]\\n      } ],\\n      \"fulfillmentMethod\" : \"aeiou\",\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"hasTrainTransfer\" : true,\\n      \"ticketingTime\" : null,\\n      \"paymentModel\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"airRecordLocator\" : \"aeiou\",\\n      \"webChangePathURL\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"ticketingStatus\" : \"aeiou\",\\n      \"rules\" : {\\n        \"airlineLiabilityLimitationsEnglishOnlyCaveatText\" : \"aeiou\",\\n        \"onlineCheckinReminderText\" : \"aeiou\",\\n        \"refundabilityText\" : \"aeiou\",\\n        \"cancelChangeIntroductionText\" : \"aeiou\",\\n        \"changePenaltyText\" : \"aeiou\",\\n        \"bookingFeeText\" : \"aeiou\",\\n        \"insuranceTerms\" : null,\\n        \"bargainFareStandbyText\" : \"aeiou\",\\n        \"bargainFairUpgradesText\" : \"aeiou\",\\n        \"flightRulesLCCImportantMessage\" : null,\\n        \"cancellationFeeLegalText\" : \"aeiou\",\\n        \"flightRulesLCCServiceLite\" : null,\\n        \"lccPartnerConfEmailsForSplitTicketText\" : [ \"aeiou\" ],\\n        \"manageMyFlightRulesLCCImportantMessage\" : null,\\n        \"internationalPassportNoteText\" : \"aeiou\",\\n        \"quebecResidentsIndemnityFundText\" : \"aeiou\",\\n        \"airlineLiabilityLimitations\" : null,\\n        \"travelingToUSText\" : \"aeiou\",\\n        \"lccPartnerConfEmailsText\" : [ \"aeiou\" ],\\n        \"airlineCheckInInstructionText\" : \"aeiou\",\\n        \"faresNotGuaranteedText\" : \"aeiou\",\\n        \"splitTicketingMessage\" : \"aeiou\",\\n        \"ticketingAgencyText\" : \"aeiou\",\\n        \"bookingFeeLegalText\" : \"aeiou\",\\n        \"feeChangeRefundIntroductionText\" : \"aeiou\",\\n        \"additionalAirlineFees\" : null,\\n        \"completePenaltyRules\" : {\\n          \"apiURL\" : \"aeiou\",\\n          \"text\" : \"aeiou\",\\n          \"textAndURL\" : \"aeiou\",\\n          \"url\" : \"aeiou\"\\n        },\\n        \"firstCharterImportantMessage\" : null,\\n        \"secondCharterImportantMessage\" : null,\\n        \"flightRulesLCCPrecheckinAdvice\" : null\\n      },\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"ticketingAirCarrierNames\" : [ \"aeiou\" ],\\n      \"confirmationNumbers\" : {\\n        \"airlineName\" : \"aeiou\",\\n        \"number\" : \"aeiou\"\\n      },\\n      \"updateFrequentFlyerPathURL\" : \"aeiou\",\\n      \"isInternational\" : true,\\n      \"orderNumber\" : \"aeiou\",\\n      \"isSplitTicket\" : true,\\n      \"fareType\" : \"aeiou\",\\n      \"legs\" : [ {\\n        \"duration\" : \"aeiou\",\\n        \"segments\" : [ {\\n          \"isSeatMapAvailable\" : true,\\n          \"arrivalType\" : \"aeiou\",\\n          \"flightIdForSeatMap\" : \"aeiou\",\\n          \"airlineName\" : \"aeiou\",\\n          \"confirmationNUmber\" : \"aeiou\",\\n          \"onTimePercentage\" : \"aeiou\",\\n          \"flightNumber\" : \"aeiou\",\\n          \"segmentChangeMessageLegacy\" : \"aeiou\",\\n          \"bookingCode\" : \"aeiou\",\\n          \"airSegmentStatusCode\" : \"aeiou\",\\n          \"checkinAirlineName\" : \"aeiou\",\\n          \"airlineCode\" : \"aeiou\",\\n          \"cabinCodeLocalized\" : \"aeiou\",\\n          \"cabinCode\" : \"aeiou\",\\n          \"airOriginDestinationReferenceIndex\" : 123,\\n          \"departureGate\" : \"aeiou\",\\n          \"arrivalLocation\" : null,\\n          \"transportationType\" : \"aeiou\",\\n          \"operatedByAirCarrierName\" : \"aeiou\",\\n          \"distanceUnits\" : \"aeiou\",\\n          \"status\" : \"aeiou\",\\n          \"arrivalGate\" : \"aeiou\",\\n          \"delays\" : {\\n            \"departureGateDelay\" : \"aeiou\",\\n            \"arrivalGateDelay\" : \"aeiou\"\\n          },\\n          \"departureTerminal\" : \"aeiou\",\\n          \"departureTime\" : null,\\n          \"departureLocation\" : {\\n            \"fullAddress\" : \"aeiou\",\\n            \"airportMetroCode\" : \"aeiou\",\\n            \"airportCode\" : \"aeiou\",\\n            \"name\" : \"aeiou\",\\n            \"countryCode\" : \"aeiou\",\\n            \"longName\" : \"aeiou\",\\n            \"countrySubdivisionCode\" : \"aeiou\",\\n            \"city\" : \"aeiou\"\\n          },\\n          \"providerCode\" : \"aeiou\",\\n          \"segmentChangeMessage\" : \"aeiou\",\\n          \"isHidden\" : true,\\n          \"duration\" : \"aeiou\",\\n          \"checkinAirlineCode\" : \"aeiou\",\\n          \"arrivalTerminal\" : \"aeiou\",\\n          \"arrivalTime\" : null,\\n          \"externalAirlineCode\" : \"aeiou\",\\n          \"layoverDuration\" : \"aeiou\",\\n          \"formattedDuration\" : \"aeiou\",\\n          \"equipmentDescription\" : \"aeiou\",\\n          \"departureType\" : \"aeiou\",\\n          \"equipmentCode\" : \"aeiou\",\\n          \"confirmationAirline\" : \"aeiou\"\\n        } ],\\n        \"airlineLogoURL\" : \"aeiou\",\\n        \"sharableFlightLegURL\" : \"aeiou\",\\n        \"state\" : \"aeiou\",\\n        \"numberOfStops\" : 123,\\n        \"type\" : \"aeiou\",\\n        \"segmentChangeMessage\" : \"aeiou\"\\n      } ],\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"bookingProvider\" : \"aeiou\"\\n    } ],\\n    \"startDateLocalized\" : \"aeiou\",\\n    \"cars\" : [ {\\n      \"bookingId\" : \"aeiou\",\\n      \"carVendor\" : {\\n        \"localPhoneNumber\" : \"aeiou\",\\n        \"longName\" : \"aeiou\",\\n        \"code\" : \"aeiou\",\\n        \"shortName\" : \"aeiou\"\\n      },\\n      \"confirmationNumber\" : \"aeiou\",\\n      \"pickupTime\" : null,\\n      \"carTypeAttributes\" : [ {\\n        \"wheelDriveTypeLocalized\" : \"aeiou\",\\n        \"airConditioningType\" : \"aeiou\",\\n        \"fuelType\" : \"aeiou\",\\n        \"transmissionType\" : \"aeiou\",\\n        \"wheelDriveType\" : \"aeiou\",\\n        \"transmissionTypeLocalized\" : \"aeiou\",\\n        \"airConditioningTypeLocalized\" : \"aeiou\",\\n        \"fuelTypeLocalized\" : \"aeiou\",\\n        \"vehicleTypeLocalized\" : \"aeiou\"\\n      } ],\\n      \"carType\" : \"aeiou\",\\n      \"passengers\" : [ {\\n        \"closingDateTime\" : null,\\n        \"openingDateTime\" : null\\n      } ],\\n      \"dropOffDateOpenHoursSummaryString\" : \"aeiou\",\\n      \"carCategory\" : \"aeiou\",\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"carTypeLocalized\" : \"aeiou\",\\n      \"carCategoryLocalized\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"reservationGuaranteePolicy\" : \"aeiou\",\\n      \"webGetCarCancelDetailPathURL\" : \"aeiou\",\\n      \"specialEquipmentRequests\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"rules\" : {\\n        \"ruleType\" : \"aeiou\",\\n        \"ruleName\" : \"aeiou\"\\n      },\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"dropOffDateOpenHours\" : [ null ],\\n      \"price\" : null,\\n      \"pickupLocation\" : {\\n        \"locationCode\" : true,\\n        \"postalCode\" : \"aeiou\",\\n        \"locationDescription\" : \"aeiou\",\\n        \"cityName\" : \"aeiou\",\\n        \"locationType\" : \"aeiou\",\\n        \"countryCode\" : \"aeiou\",\\n        \"airportInstructions\" : \"aeiou\",\\n        \"addressLine5\" : \"aeiou\",\\n        \"addressLine4\" : \"aeiou\",\\n        \"addressLine3\" : \"aeiou\",\\n        \"addressLine2\" : \"aeiou\",\\n        \"provinceStateName\" : \"aeiou\",\\n        \"addressLine1\" : \"aeiou\"\\n      },\\n      \"dropOffTime\" : null,\\n      \"carCategoryImageURL\" : \"aeiou\",\\n      \"specialEquipmentRequestCaveatText\" : \"aeiou\",\\n      \"webCarRulesPageURL\" : \"aeiou\",\\n      \"travelers\" : {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      },\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"dropOffLocation\" : null,\\n      \"pickupDateOpenHoursSummaryString\" : \"aeiou\"\\n    } ],\\n    \"description\" : \"aeiou\",\\n    \"apiDetailsURL\" : \"aeiou\",\\n    \"isBookedUsingForeignCurrency\" : true,\\n    \"readTripError\" : \"\",\\n    \"activities\" : [ {\\n      \"vendorCustomerServiceOffices\" : [ {\\n        \"hoursOfOperation\" : [ {\\n          \"startTime\" : \"aeiou\",\\n          \"day\" : \"aeiou\",\\n          \"endTime\" : \"aeiou\"\\n        } ],\\n        \"phoneNumber\" : \"aeiou\",\\n        \"phoneCountryCode\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"hoursOfOperationText\" : \"aeiou\",\\n        \"emailAddress\" : \"aeiou\",\\n        \"phoneNumbers\" : [ {\\n          \"formatted\" : \"aeiou\",\\n          \"useText\" : \"aeiou\",\\n          \"costText\" : \"aeiou\"\\n        } ]\\n      } ],\\n      \"redemptionLocations\" : [ null ],\\n      \"activityDetailsURL\" : \"aeiou\",\\n      \"voucherPrintURL\" : \"aeiou\",\\n      \"endTime\" : null,\\n      \"startTime\" : null,\\n      \"supplierReferenceNumber\" : \"aeiou\",\\n      \"activityTitle\" : \"aeiou\",\\n      \"activityItemTitle\" : \"aeiou\",\\n      \"activityLocation\" : {\\n        \"name1\" : \"aeiou\",\\n        \"name2\" : \"aeiou\"\\n      },\\n      \"travelerCountDescription\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"bookingDate\" : null,\\n      \"activityItemDescription\" : \"aeiou\",\\n      \"vendorName\" : \"aeiou\",\\n      \"activityDescription\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"termsAndConditions\" : {\\n        \"knowBeforeYouGo\" : \"aeiou\",\\n        \"cancellationAddendum\" : \"aeiou\",\\n        \"instructions\" : \"aeiou\",\\n        \"generalDisclaimer\" : \"aeiou\",\\n        \"terms\" : \"aeiou\",\\n        \"howToRedeem\" : \"aeiou\",\\n        \"quebecResidentsIndemnityFund\" : \"aeiou\"\\n      },\\n      \"vendorCustomerServiceEmail\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"vouchers\" : [ {\\n        \"supplierReferenceCode\" : \"aeiou\",\\n        \"securityCode\" : \"aeiou\",\\n        \"id\" : \"aeiou\",\\n        \"barcodeImageURL\" : \"aeiou\",\\n        \"validForRedemerTypeLocalized\" : \"aeiou\",\\n        \"validForRedemerTypeEnglish\" : \"aeiou\",\\n        \"barcodeNumber\" : \"aeiou\"\\n      } ],\\n      \"activityItemTitleEnglish\" : \"aeiou\",\\n      \"price\" : {\\n        \"pricePerCategory\" : \"aeiou\",\\n        \"localisedPriceAndPassengerCount\" : [ {\\n          \"localisedPassengerTypeAndCount\" : \"aeiou\",\\n          \"totalBasePriceForSorting\" : null,\\n          \"localisedPrice\" : \"aeiou\"\\n        } ]\\n      },\\n      \"webGetLXCancelDetailPathURL\" : \"aeiou\",\\n      \"travelers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"isRedeemer\" : true,\\n        \"gender\" : \"aeiou\",\\n        \"nationalityCountry\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      } ],\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"trains\" : [ null ],\\n    \"customerSupport\" : {\\n      \"termsAndConditionsURL\" : \"aeiou\",\\n      \"customerSupportPhoneNumberInternational\" : \"aeiou\",\\n      \"customerSupportPhoneNumberDomestic\" : \"aeiou\",\\n      \"customerSupportPhoneInfo\" : [ \"aeiou\" ],\\n      \"customerSupportPhoneInfoForEmail\" : [ \"aeiou\" ],\\n      \"customerSupportPhoneNumberDomesticAfterHours\" : \"aeiou\",\\n      \"customerSupportURL\" : \"aeiou\"\\n    },\\n    \"timePeriod\" : \"aeiou\",\\n    \"packages\" : [ {\\n      \"startDate\" : \"aeiou\",\\n      \"isChangeable\" : true,\\n      \"uniqueID\" : \"aeiou\",\\n      \"endDate\" : \"aeiou\",\\n      \"endTime\" : null,\\n      \"hotels\" : null,\\n      \"startTime\" : null,\\n      \"price\" : {\\n        \"insurance\" : \"aeiou\",\\n        \"total\" : \"aeiou\",\\n        \"taxesAndFees\" : \"aeiou\",\\n        \"totalFormatted\" : \"aeiou\",\\n        \"obfee\" : \"aeiou\",\\n        \"savings\" : \"aeiou\",\\n        \"taxesAndFeesFormatted\" : \"aeiou\",\\n        \"currency\" : \"aeiou\",\\n        \"obfeeFormatted\" : \"aeiou\",\\n        \"subTotal\" : \"aeiou\",\\n        \"savingsFormatted\" : \"aeiou\",\\n        \"bookingFee\" : \"aeiou\",\\n        \"subTotalFormatted\" : \"aeiou\",\\n        \"bookingFeeFormatted\" : \"aeiou\",\\n        \"coupon\" : \"aeiou\",\\n        \"insuranceFormatted\" : \"aeiou\",\\n        \"couponFormatted\" : \"aeiou\"\\n      },\\n      \"flights\" : null,\\n      \"cars\" : null,\\n      \"orderNumber\" : \"aeiou\",\\n      \"isLegacy\" : true,\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"activities\" : null,\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"tripUpdatedTime\" : null,\\n    \"externalCruises\" : [ null ],\\n    \"tripId\" : \"aeiou\",\\n    \"cruises\" : [ {\\n      \"departureDate\" : \"aeiou\",\\n      \"childPassengers\" : [ null ],\\n      \"promotions\" : [ {\\n        \"cruiseCardName\" : \"aeiou\",\\n        \"promotionId\" : 123,\\n        \"rank\" : 123,\\n        \"campaignId\" : 123,\\n        \"fullDescription\" : \"aeiou\",\\n        \"shortDescription\" : \"aeiou\",\\n        \"promotionCode\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"termsAndConditions\" : \"aeiou\"\\n      } ],\\n      \"pricingSummary\" : { },\\n      \"shipName\" : \"aeiou\",\\n      \"invoiceNumber\" : \"aeiou\",\\n      \"adultPassengers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"titleCode\" : \"aeiou\",\\n        \"passengerNumber\" : 123,\\n        \"gender\" : \"aeiou\",\\n        \"citizenship\" : \"aeiou\",\\n        \"birthDate\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      } ],\\n      \"paymentHistory\" : {\\n        \"finalPaymentDueDate\" : \"aeiou\",\\n        \"totalAmountReceivedInd\" : \"aeiou\",\\n        \"currency\" : \"aeiou\"\\n      },\\n      \"cabinDetails\" : \"aeiou\",\\n      \"returnDate\" : \"aeiou\",\\n      \"rulesAndRestrictionsLink\" : \"aeiou\",\\n      \"email\" : \"aeiou\",\\n      \"cruiseLineWebsiteLink\" : \"aeiou\",\\n      \"cruiseLineName\" : \"aeiou\",\\n      \"cruiseLineBkgConfNumber\" : \"aeiou\",\\n      \"customerCareNumber\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"rewards\" : {\\n      \"basePoints\" : 123,\\n      \"logoUrl\" : \"aeiou\",\\n      \"viewStatementURL\" : \"aeiou\",\\n      \"bonusPoints\" : [ {\\n        \"m_status\" : \"aeiou\",\\n        \"m_pointDescription\" : \"aeiou\",\\n        \"m_pointType\" : \"aeiou\"\\n      } ],\\n      \"totalPoints\" : 123\\n    },\\n    \"tripCreatedTime\" : null,\\n    \"webDetailsURL\" : \"aeiou\",\\n    \"updateTripNameDescPathURL\" : \"aeiou\",\\n    \"tripCacheUpdatedTime\" : null,\\n    \"bookingStatus\" : \"aeiou\"\\n  } ],\\n  \"apiVersion\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"message\" : \"aeiou\",\\n    \"changeErrorResponse\" : {\\n      \"priceChangeResponse\" : {\\n        \"newTotalPrice\" : null,\\n        \"priceIncreased\" : true,\\n        \"newTotal\" : \"aeiou\",\\n        \"previousTotalPrice\" : {\\n          \"currency\" : {\\n            \"defaultFractionDigits\" : 123,\\n            \"numericCode\" : 123,\\n            \"currencyCode\" : \"aeiou\",\\n            \"available\" : [ null ],\\n            \"instances\" : \"aeiou\"\\n          }\\n        },\\n        \"previousTotal\" : \"aeiou\",\\n        \"previousTotalFormatted\" : \"aeiou\",\\n        \"rateInfo\" : {\\n          \"total\" : \"aeiou\",\\n          \"drrRateDiscountDescription\" : \"aeiou\",\\n          \"averagePricePerDayFormatted\" : \"aeiou\",\\n          \"baseFormatted\" : \"aeiou\",\\n          \"primaryCurrencyCode\" : \"aeiou\",\\n          \"totalExpediaCollectAmountFormatted\" : \"aeiou\",\\n          \"adjustmentForCouponFormatted\" : \"aeiou\",\\n          \"averageTaxPerDay\" : \"aeiou\",\\n          \"hotelDeposits\" : \"aeiou\",\\n          \"adjustmentForAgentFormatted\" : \"aeiou\",\\n          \"subTotalAfterDepositsPOS\" : \"aeiou\",\\n          \"hotelDepositsAfterRefundFormatted\" : \"aeiou\",\\n          \"adjustmentForDRRRateDiscount\" : \"aeiou\",\\n          \"adjustmentForAgent\" : \"aeiou\",\\n          \"adjustmentForEmployeeDiscountFormatted\" : \"aeiou\",\\n          \"penalty\" : \"aeiou\",\\n          \"hotelDepositsAfterRefundPOS\" : \"aeiou\",\\n          \"subTotalBeforeCouponFormatted\" : \"aeiou\",\\n          \"hotelDepositsAfterRefund\" : \"aeiou\",\\n          \"baseWithAdjustmentForDRRRateDiscount\" : \"aeiou\",\\n          \"extraGuestCharges\" : \"aeiou\",\\n          \"taxesAndFeesFormatted\" : \"aeiou\",\\n          \"refundPOS\" : \"aeiou\",\\n          \"subTotalAfterDepositsFormatted\" : \"aeiou\",\\n          \"adjustmentForLoyalty\" : \"aeiou\",\\n          \"baseWithAdjustmentForDRRRateDiscountFormatted\" : \"aeiou\",\\n          \"adjustmentForEmployeeDiscount\" : \"aeiou\",\\n          \"comment\" : \"aeiou\",\\n          \"hotelDepositsPOS\" : \"aeiou\",\\n          \"subTotalAfterDeposits\" : \"aeiou\",\\n          \"taxesAndFees\" : \"aeiou\",\\n          \"isSameRateForAllNights\" : true,\\n          \"totalPOSFormatted\" : \"aeiou\",\\n          \"refundPOSFormatted\" : \"aeiou\",\\n          \"hasFees\" : true,\\n          \"priceDetailsPerDay\" : [ {\\n            \"amount\" : \"aeiou\",\\n            \"amountFormatted\" : \"aeiou\",\\n            \"primaryCurrencyCode\" : \"aeiou\",\\n            \"day\" : {\\n              \"raw\" : \"aeiou\",\\n              \"timeZoneOffsetSeconds\" : \"aeiou\",\\n              \"localizedShortDate\" : \"aeiou\",\\n              \"epochSeconds\" : \"aeiou\",\\n              \"localized\" : \"aeiou\"\\n            }\\n          } ],\\n          \"hotelDepositsAfterRefundPOSFormatted\" : \"aeiou\",\\n          \"mandatoryHotelFees\" : \"aeiou\",\\n          \"refund\" : \"aeiou\",\\n          \"hotelDepositsFormatted\" : \"aeiou\",\\n          \"averagePricePerDay\" : \"aeiou\",\\n          \"subTotalAfterDepositsPOSFormatted\" : \"aeiou\",\\n          \"expediaChangeFeeFormatted\" : \"aeiou\",\\n          \"hotelDepositsPOSFormatted\" : \"aeiou\",\\n          \"adjustmentForDRRRateDiscountFormatted\" : \"aeiou\",\\n          \"extraGuestChargesFormatted\" : \"aeiou\",\\n          \"taxStatus\" : \"aeiou\",\\n          \"adjustmentForLoyaltyFormatted\" : \"aeiou\",\\n          \"totalFormatted\" : \"aeiou\",\\n          \"adjustmentForCoupon\" : \"aeiou\",\\n          \"totalPOSCurrencyCode\" : \"aeiou\",\\n          \"expediaChangeFee\" : \"aeiou\",\\n          \"totalExpediaCollectAmount\" : \"aeiou\",\\n          \"averageTaxPerDayFormatted\" : \"aeiou\",\\n          \"totalPOS\" : \"aeiou\",\\n          \"subTotalBeforeCoupon\" : \"aeiou\",\\n          \"mandatoryHotelFeesFormatted\" : \"aeiou\",\\n          \"base\" : \"aeiou\",\\n          \"penaltyFormatted\" : \"aeiou\",\\n          \"refundFormatted\" : \"aeiou\"\\n        },\\n        \"productType\" : {\\n          \"m_productType\" : \"aeiou\",\\n          \"travelocityType\" : \"aeiou\"\\n        },\\n        \"newTotalFormatted\" : \"aeiou\"\\n      },\\n      \"userErrorMessage\" : {\\n        \"hasPageLevelError\" : true,\\n        \"hasModuleLevelError\" : true,\\n        \"moduleName\" : \"aeiou\",\\n        \"moduleLevelErrorMessage\" : \"aeiou\",\\n        \"errorKey\" : \"aeiou\",\\n        \"pageLevelErrorMessage\" : \"aeiou\"\\n      },\\n      \"serviceErrorCode\" : \"aeiou\"\\n    },\\n    \"errorType\" : \"aeiou\",\\n    \"errorCategory\" : \"aeiou\",\\n    \"errorCode\" : 123,\\n    \"fields\" : [ \"aeiou\" ],\\n    \"stackTrace\" : \"aeiou\"\\n  } ],\\n  \"responseType\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "trips-search"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/trips/{tripId}",
          "operationId" : "trips-search-id",
          "returnType" : "tripResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "tripResponse",
          "summary" : "Trips by tripId",
          "notes" : "Mobile API Trips",
          "baseName" : "Trips",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isPathParam" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The trip ID",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"path\",\n  \"description\" : \"The trip ID\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "To pull a guest itinerary specify the email address associated with the trip.",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"query\",\n  \"description\" : \"To pull a guest itinerary specify the email address associated with the trip.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "decorator",
            "paramName" : "decorator",
            "dataType" : "String",
            "description" : "Nullifies complex elements of a Trip with exception of Price related elements and their parents. This is an expensive approach because data is stripped after it has been retrieved or calculated.",
            "jsonSchema" : "{\n  \"name\" : \"decorator\",\n  \"in\" : \"query\",\n  \"description\" : \"Nullifies complex elements of a Trip with exception of Price related elements and their parents. This is an expensive approach because data is stripped after it has been retrieved or calculated.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "useCache",
            "paramName" : "useCache",
            "dataType" : "Boolean",
            "description" : "An optional flag to make a cached read trip call.",
            "jsonSchema" : "{\n  \"name\" : \"useCache\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional flag to make a cached read trip call.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "currencyCode",
            "paramName" : "currencyCode",
            "dataType" : "String",
            "description" : "Currency parameter",
            "jsonSchema" : "{\n  \"name\" : \"currencyCode\",\n  \"in\" : \"query\",\n  \"description\" : \"Currency parameter\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedAmount",
            "paramName" : "expectedAmount",
            "dataType" : "String",
            "description" : "Expected Amount during car cancellation.",
            "jsonSchema" : "{\n  \"name\" : \"expectedAmount\",\n  \"in\" : \"query\",\n  \"description\" : \"Expected Amount during car cancellation.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "decimalPlaceCount",
            "paramName" : "decimalPlaceCount",
            "dataType" : "String",
            "description" : "Decimal place count for the expected amount.",
            "jsonSchema" : "{\n  \"name\" : \"decimalPlaceCount\",\n  \"in\" : \"query\",\n  \"description\" : \"Decimal place count for the expected amount.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ {
            "isPathParam" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The trip ID",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"path\",\n  \"description\" : \"The trip ID\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "To pull a guest itinerary specify the email address associated with the trip.",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"query\",\n  \"description\" : \"To pull a guest itinerary specify the email address associated with the trip.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "decorator",
            "paramName" : "decorator",
            "dataType" : "String",
            "description" : "Nullifies complex elements of a Trip with exception of Price related elements and their parents. This is an expensive approach because data is stripped after it has been retrieved or calculated.",
            "jsonSchema" : "{\n  \"name\" : \"decorator\",\n  \"in\" : \"query\",\n  \"description\" : \"Nullifies complex elements of a Trip with exception of Price related elements and their parents. This is an expensive approach because data is stripped after it has been retrieved or calculated.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "useCache",
            "paramName" : "useCache",
            "dataType" : "Boolean",
            "description" : "An optional flag to make a cached read trip call.",
            "jsonSchema" : "{\n  \"name\" : \"useCache\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional flag to make a cached read trip call.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "currencyCode",
            "paramName" : "currencyCode",
            "dataType" : "String",
            "description" : "Currency parameter",
            "jsonSchema" : "{\n  \"name\" : \"currencyCode\",\n  \"in\" : \"query\",\n  \"description\" : \"Currency parameter\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedAmount",
            "paramName" : "expectedAmount",
            "dataType" : "String",
            "description" : "Expected Amount during car cancellation.",
            "jsonSchema" : "{\n  \"name\" : \"expectedAmount\",\n  \"in\" : \"query\",\n  \"description\" : \"Expected Amount during car cancellation.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "decimalPlaceCount",
            "paramName" : "decimalPlaceCount",
            "dataType" : "String",
            "description" : "Decimal place count for the expected amount.",
            "jsonSchema" : "{\n  \"name\" : \"decimalPlaceCount\",\n  \"in\" : \"query\",\n  \"description\" : \"Decimal place count for the expected amount.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Trips" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "tripResponse",
            "baseType" : "tripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/tripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/tripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "string", "tripResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"responseData\" : [ {\\n    \"insurance\" : [ {\\n      \"startDate\" : \"2015-03-20T04:51:51.608+0000\",\\n      \"endDate\" : \"2015-03-20T04:51:51.608+0000\",\\n      \"comment\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"startDate\" : \"aeiou\",\\n    \"endDate\" : \"aeiou\",\\n    \"endDateLocalized\" : \"aeiou\",\\n    \"endTime\" : null,\\n    \"hotels\" : [ {\\n      \"numberOfNights\" : 123,\\n      \"inventorySource\" : \"aeiou\",\\n      \"checkOutDateTime\" : null,\\n      \"hotelPropertyInfo\" : {\\n        \"restrictionPolicies\" : [ \"aeiou\" ],\\n        \"checkInEndTimePolicy\" : null,\\n        \"isVipAccess\" : true,\\n        \"checkOutTimePolicy\" : null,\\n        \"checkInPolicies\" : [ \"aeiou\" ],\\n        \"fees\" : [ \"aeiou\" ],\\n        \"formattedPhoneNumbers\" : \"aeiou\",\\n        \"tollFreePhone\" : \"aeiou\",\\n        \"specialCheckInInstructions\" : [ \"aeiou\" ],\\n        \"checkInStartTimePolicy\" : {\\n          \"value\" : \"aeiou\",\\n          \"label\" : \"aeiou\"\\n        },\\n        \"starRating\" : \"aeiou\",\\n        \"mandatoryFees\" : [ \"aeiou\" ],\\n        \"photoThumbnail1000pixURL\" : \"aeiou\",\\n        \"localPhone\" : \"aeiou\",\\n        \"address\" : {\\n          \"countryName\" : \"aeiou\",\\n          \"fullAddress\" : \"aeiou\",\\n          \"cityLocalized\" : \"aeiou\",\\n          \"countryCode\" : \"aeiou\",\\n          \"addressLine5\" : \"aeiou\",\\n          \"addressLine4\" : \"aeiou\",\\n          \"addressLine3\" : \"aeiou\",\\n          \"companyName\" : \"aeiou\",\\n          \"addressLine2\" : \"aeiou\",\\n          \"addressLine1\" : \"aeiou\",\\n          \"city\" : \"aeiou\",\\n          \"postalCode\" : \"aeiou\",\\n          \"countrySubdivisionCode\" : \"aeiou\"\\n        },\\n        \"googleMapsLink\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"generalRules\" : [ \"aeiou\" ],\\n        \"photoThumbnail500pixURL\" : \"aeiou\",\\n        \"photoThumbnailURL\" : \"aeiou\"\\n      },\\n      \"paymentsAndCreditFees\" : {\\n        \"isPaymentsCreditsVisible\" : true,\\n        \"isFullyCancelled\" : true,\\n        \"isDirectAgency\" : true,\\n        \"paymentsCreditsDAHotelAnyRoomCancelled\" : \"aeiou\",\\n        \"paymentsDepositRequired\" : \"aeiou\",\\n        \"isGDS\" : true,\\n        \"isDepositRequired\" : true,\\n        \"isAnyRoomCancelled\" : true,\\n        \"noFeesStaticText\" : \"aeiou\",\\n        \"paymentsCreditsGDSHotelAnyRoomCancelled\" : \"aeiou\",\\n        \"paymentsHotelFeesAndDepositsDisclaimer\" : \"aeiou\"\\n      },\\n      \"endTime\" : null,\\n      \"hotelId\" : \"aeiou\",\\n      \"startTime\" : null,\\n      \"isFreeCancellationAvailable\" : true,\\n      \"inventoryType\" : \"aeiou\",\\n      \"appliedCoupons\" : [ {\\n        \"description\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"code\" : \"aeiou\",\\n        \"couponValue\" : null\\n      } ],\\n      \"rooms\" : [ {\\n        \"roomTypeCode\" : \"aeiou\",\\n        \"drrRateDiscountDescription\" : \"aeiou\",\\n        \"availableOnAllDates\" : \"aeiou\",\\n        \"amenities\" : [ \"aeiou\" ],\\n        \"uniqueID\" : \"aeiou\",\\n        \"averagePriceDetails\" : null,\\n        \"refundabilityStatus\" : \"aeiou\",\\n        \"roomPreferences\" : {\\n          \"otherOccupantInfo\" : {\\n            \"childCount\" : 123,\\n            \"adultCount\" : 123,\\n            \"infantCount\" : 123,\\n            \"childAndInfantAges\" : [ 123 ]\\n          },\\n          \"occupantSelectedRoomOptions\" : {\\n            \"hasExtraBedInfant\" : true,\\n            \"bedTypeName\" : \"aeiou\",\\n            \"isRoomOptionsAvailable\" : true,\\n            \"defaultBedTypeName\" : \"aeiou\",\\n            \"specialRequest\" : \"aeiou\",\\n            \"smokingPreference\" : \"aeiou\",\\n            \"isSmokingPreferenceSelected\" : true,\\n            \"hasExtraBedChild\" : true,\\n            \"hasExtraBedAdult\" : true,\\n            \"accessibilityOptions\" : [ \"aeiou\" ]\\n          },\\n          \"availableRoomOptions\" : {\\n            \"isNonSmokingRoomAvailable\" : true,\\n            \"bedTypes\" : [ {\\n              \"id\" : \"aeiou\",\\n              \"selected\" : true,\\n              \"description\" : \"aeiou\"\\n            } ],\\n            \"isSmokingRoomAvailable\" : true,\\n            \"accessibilityOptions\" : [ {\\n              \"id\" : \"aeiou\",\\n              \"selected\" : true,\\n              \"description\" : \"aeiou\"\\n            } ]\\n          },\\n          \"primaryOccupant\" : {\\n            \"frequentFlyerPlanName\" : \"aeiou\",\\n            \"phone\" : \"aeiou\",\\n            \"primaryPhone\" : \"aeiou\",\\n            \"email\" : \"aeiou\",\\n            \"frequentGuestPlanName\" : \"aeiou\",\\n            \"frequentGuestMembershipCode\" : \"aeiou\",\\n            \"fullName\" : \"aeiou\",\\n            \"frequentFlyerMembershipCode\" : \"aeiou\",\\n            \"firstName\" : \"aeiou\"\\n          }\\n        },\\n        \"totalPriceDetails\" : null,\\n        \"ratePlanCode\" : \"aeiou\",\\n        \"hotelConfirmationNumber\" : \"aeiou\",\\n        \"cancelRefundDetails\" : {\\n          \"refundAmount\" : \"aeiou\",\\n          \"currencyCode\" : \"aeiou\",\\n          \"penaltyAmountFormatted\" : \"aeiou\",\\n          \"condition\" : \"aeiou\",\\n          \"penaltyAmount\" : \"aeiou\",\\n          \"refundAmountFormatted\" : \"aeiou\"\\n        },\\n        \"roomCancelLink\" : \"aeiou\",\\n        \"roomChangeLink\" : \"aeiou\",\\n        \"orderLineNumber\" : \"aeiou\",\\n        \"hotelCancellationId\" : \"aeiou\",\\n        \"bookingStatus\" : \"aeiou\",\\n        \"bookingStatusEnum\" : \"aeiou\",\\n        \"roomRatePlanDescription\" : \"aeiou\"\\n      } ],\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"checkInDate\" : \"aeiou\",\\n      \"checkOutDate\" : \"aeiou\",\\n      \"checkOutDateLocalized\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"infositeURL\" : \"aeiou\",\\n      \"averagePriceDetails\" : null,\\n      \"checkInDateLocalized\" : \"aeiou\",\\n      \"rules\" : {\\n        \"loyaltyPointsDisclaimer\" : \"aeiou\",\\n        \"paymentPolicies\" : [ \"aeiou\" ],\\n        \"occupancyPolicies\" : [ \"aeiou\" ],\\n        \"cancellationWindowTime\" : null,\\n        \"quebecResidentsIndemnityFund\" : \"aeiou\",\\n        \"currencyConversionDisclaimer\" : \"aeiou\",\\n        \"currencyDisclaimer\" : \"aeiou\",\\n        \"aarpCheckIn\" : \"aeiou\",\\n        \"accessibilityText\" : \"aeiou\",\\n        \"roomRequestDisclaimer\" : \"aeiou\",\\n        \"cancelChangeRules\" : [ \"aeiou\" ],\\n        \"opaquePolicies\" : [ \"aeiou\" ],\\n        \"cancelChangeRulesIntroduction\" : \"aeiou\",\\n        \"extraGuestPolicies\" : [ \"aeiou\" ],\\n        \"opaqueRules\" : [ \"aeiou\" ],\\n        \"cancelChangeWarning\" : \"aeiou\",\\n        \"lateArrivalInstructions\" : \"aeiou\"\\n      },\\n      \"inventoryVisibility\" : \"aeiou\",\\n      \"totalPriceDetails\" : null,\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"checkInDateTime\" : null,\\n      \"roomChangeLink\" : \"aeiou\",\\n      \"orderNumber\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"bookingStatusText\" : \"aeiou\"\\n    } ],\\n    \"startTime\" : null,\\n    \"title\" : \"aeiou\",\\n    \"levelOfDetail\" : \"aeiou\",\\n    \"sharableDetailsURL\" : \"aeiou\",\\n    \"flights\" : [ {\\n      \"isSeatMapAvailable\" : true,\\n      \"startDate\" : \"aeiou\",\\n      \"flightType\" : \"aeiou\",\\n      \"fareTotal\" : {\\n        \"insurance\" : \"aeiou\",\\n        \"expediaServiceFeeFormatted\" : \"aeiou\",\\n        \"subTotal\" : \"aeiou\",\\n        \"expediaServiceFee\" : \"aeiou\",\\n        \"airlineCardFee\" : \"aeiou\",\\n        \"airlineCardFeeFormatted\" : \"aeiou\",\\n        \"subTotalFormatted\" : \"aeiou\",\\n        \"couponDiscount\" : \"aeiou\",\\n        \"couponDiscountFormatted\" : \"aeiou\",\\n        \"insuranceFormatted\" : \"aeiou\"\\n      },\\n      \"endDate\" : \"aeiou\",\\n      \"isLccOrCharter\" : true,\\n      \"farePerPassenger\" : [ {\\n        \"total\" : \"aeiou\",\\n        \"passengerIndex\" : 123,\\n        \"ancillaryFees\" : [ {\\n          \"listOfLegsAncillaryAppliedTo\" : [ \"aeiou\" ],\\n          \"weight\" : {\\n            \"unit\" : \"aeiou\"\\n          },\\n          \"quantity\" : 123,\\n          \"addToTotal\" : true\\n        } ],\\n        \"passengerTypeCodeLocalized\" : \"aeiou\",\\n        \"baseFormatted\" : \"aeiou\",\\n        \"passengerTypeCode\" : \"aeiou\",\\n        \"totalFormatted\" : \"aeiou\",\\n        \"fees\" : [ {\\n          \"amount\" : \"aeiou\",\\n          \"amountFormatted\" : \"aeiou\",\\n          \"localizedName\" : \"aeiou\"\\n        } ],\\n        \"currency\" : \"aeiou\",\\n        \"taxesFormatted\" : \"aeiou\",\\n        \"base\" : \"aeiou\",\\n        \"fromToAirportCodes\" : \"aeiou\",\\n        \"taxes\" : \"aeiou\"\\n      } ],\\n      \"expediaBookingId\" : \"aeiou\",\\n      \"passengers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"dateOfBirth\" : null,\\n        \"lastName\" : \"aeiou\",\\n        \"TSARedressNumber\" : \"aeiou\",\\n        \"passportAddress\" : \"aeiou\",\\n        \"typeCode\" : \"aeiou\",\\n        \"phoneNumbers\" : [ {\\n          \"phone\" : \"aeiou\",\\n          \"countryCode\" : \"aeiou\"\\n        } ],\\n        \"specialAssistanceOptions\" : [ \"aeiou\" ],\\n        \"title\" : \"aeiou\",\\n        \"typeLocalized\" : \"aeiou\",\\n        \"ticketNumbers\" : [ \"aeiou\" ],\\n        \"gender\" : \"aeiou\",\\n        \"passportCountryCode\" : \"aeiou\",\\n        \"seats\" : [ {\\n          \"requested\" : \"aeiou\",\\n          \"seatPreference\" : \"aeiou\",\\n          \"legIndex\" : 123,\\n          \"seatPreferenceLocalized\" : \"aeiou\",\\n          \"smokingAllowed\" : true,\\n          \"assigned\" : \"aeiou\",\\n          \"ticketingStatus\" : \"aeiou\",\\n          \"segmentIndex\" : 123\\n        } ],\\n        \"fullName\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\",\\n        \"frequentFlyerPlans\" : [ {\\n          \"airlineCode\" : \"aeiou\",\\n          \"programCode\" : \"aeiou\",\\n          \"membershipNumber\" : \"aeiou\",\\n          \"programName\" : \"aeiou\"\\n        } ],\\n        \"cancelledTicketNumbers\" : [ \"aeiou\" ]\\n      } ],\\n      \"fulfillmentMethod\" : \"aeiou\",\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"hasTrainTransfer\" : true,\\n      \"ticketingTime\" : null,\\n      \"paymentModel\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"airRecordLocator\" : \"aeiou\",\\n      \"webChangePathURL\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"ticketingStatus\" : \"aeiou\",\\n      \"rules\" : {\\n        \"airlineLiabilityLimitationsEnglishOnlyCaveatText\" : \"aeiou\",\\n        \"onlineCheckinReminderText\" : \"aeiou\",\\n        \"refundabilityText\" : \"aeiou\",\\n        \"cancelChangeIntroductionText\" : \"aeiou\",\\n        \"changePenaltyText\" : \"aeiou\",\\n        \"bookingFeeText\" : \"aeiou\",\\n        \"insuranceTerms\" : null,\\n        \"bargainFareStandbyText\" : \"aeiou\",\\n        \"bargainFairUpgradesText\" : \"aeiou\",\\n        \"flightRulesLCCImportantMessage\" : null,\\n        \"cancellationFeeLegalText\" : \"aeiou\",\\n        \"flightRulesLCCServiceLite\" : null,\\n        \"lccPartnerConfEmailsForSplitTicketText\" : [ \"aeiou\" ],\\n        \"manageMyFlightRulesLCCImportantMessage\" : null,\\n        \"internationalPassportNoteText\" : \"aeiou\",\\n        \"quebecResidentsIndemnityFundText\" : \"aeiou\",\\n        \"airlineLiabilityLimitations\" : null,\\n        \"travelingToUSText\" : \"aeiou\",\\n        \"lccPartnerConfEmailsText\" : [ \"aeiou\" ],\\n        \"airlineCheckInInstructionText\" : \"aeiou\",\\n        \"faresNotGuaranteedText\" : \"aeiou\",\\n        \"splitTicketingMessage\" : \"aeiou\",\\n        \"ticketingAgencyText\" : \"aeiou\",\\n        \"bookingFeeLegalText\" : \"aeiou\",\\n        \"feeChangeRefundIntroductionText\" : \"aeiou\",\\n        \"additionalAirlineFees\" : null,\\n        \"completePenaltyRules\" : {\\n          \"apiURL\" : \"aeiou\",\\n          \"text\" : \"aeiou\",\\n          \"textAndURL\" : \"aeiou\",\\n          \"url\" : \"aeiou\"\\n        },\\n        \"firstCharterImportantMessage\" : null,\\n        \"secondCharterImportantMessage\" : null,\\n        \"flightRulesLCCPrecheckinAdvice\" : null\\n      },\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"ticketingAirCarrierNames\" : [ \"aeiou\" ],\\n      \"confirmationNumbers\" : {\\n        \"airlineName\" : \"aeiou\",\\n        \"number\" : \"aeiou\"\\n      },\\n      \"updateFrequentFlyerPathURL\" : \"aeiou\",\\n      \"isInternational\" : true,\\n      \"orderNumber\" : \"aeiou\",\\n      \"isSplitTicket\" : true,\\n      \"fareType\" : \"aeiou\",\\n      \"legs\" : [ {\\n        \"duration\" : \"aeiou\",\\n        \"segments\" : [ {\\n          \"isSeatMapAvailable\" : true,\\n          \"arrivalType\" : \"aeiou\",\\n          \"flightIdForSeatMap\" : \"aeiou\",\\n          \"airlineName\" : \"aeiou\",\\n          \"confirmationNUmber\" : \"aeiou\",\\n          \"onTimePercentage\" : \"aeiou\",\\n          \"flightNumber\" : \"aeiou\",\\n          \"segmentChangeMessageLegacy\" : \"aeiou\",\\n          \"bookingCode\" : \"aeiou\",\\n          \"airSegmentStatusCode\" : \"aeiou\",\\n          \"checkinAirlineName\" : \"aeiou\",\\n          \"airlineCode\" : \"aeiou\",\\n          \"cabinCodeLocalized\" : \"aeiou\",\\n          \"cabinCode\" : \"aeiou\",\\n          \"airOriginDestinationReferenceIndex\" : 123,\\n          \"departureGate\" : \"aeiou\",\\n          \"arrivalLocation\" : null,\\n          \"transportationType\" : \"aeiou\",\\n          \"operatedByAirCarrierName\" : \"aeiou\",\\n          \"distanceUnits\" : \"aeiou\",\\n          \"status\" : \"aeiou\",\\n          \"arrivalGate\" : \"aeiou\",\\n          \"delays\" : {\\n            \"departureGateDelay\" : \"aeiou\",\\n            \"arrivalGateDelay\" : \"aeiou\"\\n          },\\n          \"departureTerminal\" : \"aeiou\",\\n          \"departureTime\" : null,\\n          \"departureLocation\" : {\\n            \"fullAddress\" : \"aeiou\",\\n            \"airportMetroCode\" : \"aeiou\",\\n            \"airportCode\" : \"aeiou\",\\n            \"name\" : \"aeiou\",\\n            \"countryCode\" : \"aeiou\",\\n            \"longName\" : \"aeiou\",\\n            \"countrySubdivisionCode\" : \"aeiou\",\\n            \"city\" : \"aeiou\"\\n          },\\n          \"providerCode\" : \"aeiou\",\\n          \"segmentChangeMessage\" : \"aeiou\",\\n          \"isHidden\" : true,\\n          \"duration\" : \"aeiou\",\\n          \"checkinAirlineCode\" : \"aeiou\",\\n          \"arrivalTerminal\" : \"aeiou\",\\n          \"arrivalTime\" : null,\\n          \"externalAirlineCode\" : \"aeiou\",\\n          \"layoverDuration\" : \"aeiou\",\\n          \"formattedDuration\" : \"aeiou\",\\n          \"equipmentDescription\" : \"aeiou\",\\n          \"departureType\" : \"aeiou\",\\n          \"equipmentCode\" : \"aeiou\",\\n          \"confirmationAirline\" : \"aeiou\"\\n        } ],\\n        \"airlineLogoURL\" : \"aeiou\",\\n        \"sharableFlightLegURL\" : \"aeiou\",\\n        \"state\" : \"aeiou\",\\n        \"numberOfStops\" : 123,\\n        \"type\" : \"aeiou\",\\n        \"segmentChangeMessage\" : \"aeiou\"\\n      } ],\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"bookingProvider\" : \"aeiou\"\\n    } ],\\n    \"startDateLocalized\" : \"aeiou\",\\n    \"cars\" : [ {\\n      \"bookingId\" : \"aeiou\",\\n      \"carVendor\" : {\\n        \"localPhoneNumber\" : \"aeiou\",\\n        \"longName\" : \"aeiou\",\\n        \"code\" : \"aeiou\",\\n        \"shortName\" : \"aeiou\"\\n      },\\n      \"confirmationNumber\" : \"aeiou\",\\n      \"pickupTime\" : null,\\n      \"carTypeAttributes\" : [ {\\n        \"wheelDriveTypeLocalized\" : \"aeiou\",\\n        \"airConditioningType\" : \"aeiou\",\\n        \"fuelType\" : \"aeiou\",\\n        \"transmissionType\" : \"aeiou\",\\n        \"wheelDriveType\" : \"aeiou\",\\n        \"transmissionTypeLocalized\" : \"aeiou\",\\n        \"airConditioningTypeLocalized\" : \"aeiou\",\\n        \"fuelTypeLocalized\" : \"aeiou\",\\n        \"vehicleTypeLocalized\" : \"aeiou\"\\n      } ],\\n      \"carType\" : \"aeiou\",\\n      \"passengers\" : [ {\\n        \"closingDateTime\" : null,\\n        \"openingDateTime\" : null\\n      } ],\\n      \"dropOffDateOpenHoursSummaryString\" : \"aeiou\",\\n      \"carCategory\" : \"aeiou\",\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"carTypeLocalized\" : \"aeiou\",\\n      \"carCategoryLocalized\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"reservationGuaranteePolicy\" : \"aeiou\",\\n      \"webGetCarCancelDetailPathURL\" : \"aeiou\",\\n      \"specialEquipmentRequests\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"rules\" : {\\n        \"ruleType\" : \"aeiou\",\\n        \"ruleName\" : \"aeiou\"\\n      },\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"dropOffDateOpenHours\" : [ null ],\\n      \"price\" : null,\\n      \"pickupLocation\" : {\\n        \"locationCode\" : true,\\n        \"postalCode\" : \"aeiou\",\\n        \"locationDescription\" : \"aeiou\",\\n        \"cityName\" : \"aeiou\",\\n        \"locationType\" : \"aeiou\",\\n        \"countryCode\" : \"aeiou\",\\n        \"airportInstructions\" : \"aeiou\",\\n        \"addressLine5\" : \"aeiou\",\\n        \"addressLine4\" : \"aeiou\",\\n        \"addressLine3\" : \"aeiou\",\\n        \"addressLine2\" : \"aeiou\",\\n        \"provinceStateName\" : \"aeiou\",\\n        \"addressLine1\" : \"aeiou\"\\n      },\\n      \"dropOffTime\" : null,\\n      \"carCategoryImageURL\" : \"aeiou\",\\n      \"specialEquipmentRequestCaveatText\" : \"aeiou\",\\n      \"webCarRulesPageURL\" : \"aeiou\",\\n      \"travelers\" : {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      },\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"dropOffLocation\" : null,\\n      \"pickupDateOpenHoursSummaryString\" : \"aeiou\"\\n    } ],\\n    \"description\" : \"aeiou\",\\n    \"apiDetailsURL\" : \"aeiou\",\\n    \"isBookedUsingForeignCurrency\" : true,\\n    \"readTripError\" : \"\",\\n    \"activities\" : [ {\\n      \"vendorCustomerServiceOffices\" : [ {\\n        \"hoursOfOperation\" : [ {\\n          \"startTime\" : \"aeiou\",\\n          \"day\" : \"aeiou\",\\n          \"endTime\" : \"aeiou\"\\n        } ],\\n        \"phoneNumber\" : \"aeiou\",\\n        \"phoneCountryCode\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"hoursOfOperationText\" : \"aeiou\",\\n        \"emailAddress\" : \"aeiou\",\\n        \"phoneNumbers\" : [ {\\n          \"formatted\" : \"aeiou\",\\n          \"useText\" : \"aeiou\",\\n          \"costText\" : \"aeiou\"\\n        } ]\\n      } ],\\n      \"redemptionLocations\" : [ null ],\\n      \"activityDetailsURL\" : \"aeiou\",\\n      \"voucherPrintURL\" : \"aeiou\",\\n      \"endTime\" : null,\\n      \"startTime\" : null,\\n      \"supplierReferenceNumber\" : \"aeiou\",\\n      \"activityTitle\" : \"aeiou\",\\n      \"activityItemTitle\" : \"aeiou\",\\n      \"activityLocation\" : {\\n        \"name1\" : \"aeiou\",\\n        \"name2\" : \"aeiou\"\\n      },\\n      \"travelerCountDescription\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"bookingDate\" : null,\\n      \"activityItemDescription\" : \"aeiou\",\\n      \"vendorName\" : \"aeiou\",\\n      \"activityDescription\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"termsAndConditions\" : {\\n        \"knowBeforeYouGo\" : \"aeiou\",\\n        \"cancellationAddendum\" : \"aeiou\",\\n        \"instructions\" : \"aeiou\",\\n        \"generalDisclaimer\" : \"aeiou\",\\n        \"terms\" : \"aeiou\",\\n        \"howToRedeem\" : \"aeiou\",\\n        \"quebecResidentsIndemnityFund\" : \"aeiou\"\\n      },\\n      \"vendorCustomerServiceEmail\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"vouchers\" : [ {\\n        \"supplierReferenceCode\" : \"aeiou\",\\n        \"securityCode\" : \"aeiou\",\\n        \"id\" : \"aeiou\",\\n        \"barcodeImageURL\" : \"aeiou\",\\n        \"validForRedemerTypeLocalized\" : \"aeiou\",\\n        \"validForRedemerTypeEnglish\" : \"aeiou\",\\n        \"barcodeNumber\" : \"aeiou\"\\n      } ],\\n      \"activityItemTitleEnglish\" : \"aeiou\",\\n      \"price\" : {\\n        \"pricePerCategory\" : \"aeiou\",\\n        \"localisedPriceAndPassengerCount\" : [ {\\n          \"localisedPassengerTypeAndCount\" : \"aeiou\",\\n          \"totalBasePriceForSorting\" : null,\\n          \"localisedPrice\" : \"aeiou\"\\n        } ]\\n      },\\n      \"webGetLXCancelDetailPathURL\" : \"aeiou\",\\n      \"travelers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"isRedeemer\" : true,\\n        \"gender\" : \"aeiou\",\\n        \"nationalityCountry\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      } ],\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"trains\" : [ null ],\\n    \"customerSupport\" : {\\n      \"termsAndConditionsURL\" : \"aeiou\",\\n      \"customerSupportPhoneNumberInternational\" : \"aeiou\",\\n      \"customerSupportPhoneNumberDomestic\" : \"aeiou\",\\n      \"customerSupportPhoneInfo\" : [ \"aeiou\" ],\\n      \"customerSupportPhoneInfoForEmail\" : [ \"aeiou\" ],\\n      \"customerSupportPhoneNumberDomesticAfterHours\" : \"aeiou\",\\n      \"customerSupportURL\" : \"aeiou\"\\n    },\\n    \"timePeriod\" : \"aeiou\",\\n    \"packages\" : [ {\\n      \"startDate\" : \"aeiou\",\\n      \"isChangeable\" : true,\\n      \"uniqueID\" : \"aeiou\",\\n      \"endDate\" : \"aeiou\",\\n      \"endTime\" : null,\\n      \"hotels\" : null,\\n      \"startTime\" : null,\\n      \"price\" : {\\n        \"insurance\" : \"aeiou\",\\n        \"total\" : \"aeiou\",\\n        \"taxesAndFees\" : \"aeiou\",\\n        \"totalFormatted\" : \"aeiou\",\\n        \"obfee\" : \"aeiou\",\\n        \"savings\" : \"aeiou\",\\n        \"taxesAndFeesFormatted\" : \"aeiou\",\\n        \"currency\" : \"aeiou\",\\n        \"obfeeFormatted\" : \"aeiou\",\\n        \"subTotal\" : \"aeiou\",\\n        \"savingsFormatted\" : \"aeiou\",\\n        \"bookingFee\" : \"aeiou\",\\n        \"subTotalFormatted\" : \"aeiou\",\\n        \"bookingFeeFormatted\" : \"aeiou\",\\n        \"coupon\" : \"aeiou\",\\n        \"insuranceFormatted\" : \"aeiou\",\\n        \"couponFormatted\" : \"aeiou\"\\n      },\\n      \"flights\" : null,\\n      \"cars\" : null,\\n      \"orderNumber\" : \"aeiou\",\\n      \"isLegacy\" : true,\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"activities\" : null,\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"tripUpdatedTime\" : null,\\n    \"externalCruises\" : [ null ],\\n    \"tripId\" : \"aeiou\",\\n    \"cruises\" : [ {\\n      \"departureDate\" : \"aeiou\",\\n      \"childPassengers\" : [ null ],\\n      \"promotions\" : [ {\\n        \"cruiseCardName\" : \"aeiou\",\\n        \"promotionId\" : 123,\\n        \"rank\" : 123,\\n        \"campaignId\" : 123,\\n        \"fullDescription\" : \"aeiou\",\\n        \"shortDescription\" : \"aeiou\",\\n        \"promotionCode\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"termsAndConditions\" : \"aeiou\"\\n      } ],\\n      \"pricingSummary\" : { },\\n      \"shipName\" : \"aeiou\",\\n      \"invoiceNumber\" : \"aeiou\",\\n      \"adultPassengers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"titleCode\" : \"aeiou\",\\n        \"passengerNumber\" : 123,\\n        \"gender\" : \"aeiou\",\\n        \"citizenship\" : \"aeiou\",\\n        \"birthDate\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      } ],\\n      \"paymentHistory\" : {\\n        \"finalPaymentDueDate\" : \"aeiou\",\\n        \"totalAmountReceivedInd\" : \"aeiou\",\\n        \"currency\" : \"aeiou\"\\n      },\\n      \"cabinDetails\" : \"aeiou\",\\n      \"returnDate\" : \"aeiou\",\\n      \"rulesAndRestrictionsLink\" : \"aeiou\",\\n      \"email\" : \"aeiou\",\\n      \"cruiseLineWebsiteLink\" : \"aeiou\",\\n      \"cruiseLineName\" : \"aeiou\",\\n      \"cruiseLineBkgConfNumber\" : \"aeiou\",\\n      \"customerCareNumber\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"rewards\" : {\\n      \"basePoints\" : 123,\\n      \"logoUrl\" : \"aeiou\",\\n      \"viewStatementURL\" : \"aeiou\",\\n      \"bonusPoints\" : [ {\\n        \"m_status\" : \"aeiou\",\\n        \"m_pointDescription\" : \"aeiou\",\\n        \"m_pointType\" : \"aeiou\"\\n      } ],\\n      \"totalPoints\" : 123\\n    },\\n    \"tripCreatedTime\" : null,\\n    \"webDetailsURL\" : \"aeiou\",\\n    \"updateTripNameDescPathURL\" : \"aeiou\",\\n    \"tripCacheUpdatedTime\" : null,\\n    \"bookingStatus\" : \"aeiou\"\\n  } ],\\n  \"apiVersion\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"message\" : \"aeiou\",\\n    \"changeErrorResponse\" : {\\n      \"priceChangeResponse\" : {\\n        \"newTotalPrice\" : null,\\n        \"priceIncreased\" : true,\\n        \"newTotal\" : \"aeiou\",\\n        \"previousTotalPrice\" : {\\n          \"currency\" : {\\n            \"defaultFractionDigits\" : 123,\\n            \"numericCode\" : 123,\\n            \"currencyCode\" : \"aeiou\",\\n            \"available\" : [ null ],\\n            \"instances\" : \"aeiou\"\\n          }\\n        },\\n        \"previousTotal\" : \"aeiou\",\\n        \"previousTotalFormatted\" : \"aeiou\",\\n        \"rateInfo\" : {\\n          \"total\" : \"aeiou\",\\n          \"drrRateDiscountDescription\" : \"aeiou\",\\n          \"averagePricePerDayFormatted\" : \"aeiou\",\\n          \"baseFormatted\" : \"aeiou\",\\n          \"primaryCurrencyCode\" : \"aeiou\",\\n          \"totalExpediaCollectAmountFormatted\" : \"aeiou\",\\n          \"adjustmentForCouponFormatted\" : \"aeiou\",\\n          \"averageTaxPerDay\" : \"aeiou\",\\n          \"hotelDeposits\" : \"aeiou\",\\n          \"adjustmentForAgentFormatted\" : \"aeiou\",\\n          \"subTotalAfterDepositsPOS\" : \"aeiou\",\\n          \"hotelDepositsAfterRefundFormatted\" : \"aeiou\",\\n          \"adjustmentForDRRRateDiscount\" : \"aeiou\",\\n          \"adjustmentForAgent\" : \"aeiou\",\\n          \"adjustmentForEmployeeDiscountFormatted\" : \"aeiou\",\\n          \"penalty\" : \"aeiou\",\\n          \"hotelDepositsAfterRefundPOS\" : \"aeiou\",\\n          \"subTotalBeforeCouponFormatted\" : \"aeiou\",\\n          \"hotelDepositsAfterRefund\" : \"aeiou\",\\n          \"baseWithAdjustmentForDRRRateDiscount\" : \"aeiou\",\\n          \"extraGuestCharges\" : \"aeiou\",\\n          \"taxesAndFeesFormatted\" : \"aeiou\",\\n          \"refundPOS\" : \"aeiou\",\\n          \"subTotalAfterDepositsFormatted\" : \"aeiou\",\\n          \"adjustmentForLoyalty\" : \"aeiou\",\\n          \"baseWithAdjustmentForDRRRateDiscountFormatted\" : \"aeiou\",\\n          \"adjustmentForEmployeeDiscount\" : \"aeiou\",\\n          \"comment\" : \"aeiou\",\\n          \"hotelDepositsPOS\" : \"aeiou\",\\n          \"subTotalAfterDeposits\" : \"aeiou\",\\n          \"taxesAndFees\" : \"aeiou\",\\n          \"isSameRateForAllNights\" : true,\\n          \"totalPOSFormatted\" : \"aeiou\",\\n          \"refundPOSFormatted\" : \"aeiou\",\\n          \"hasFees\" : true,\\n          \"priceDetailsPerDay\" : [ {\\n            \"amount\" : \"aeiou\",\\n            \"amountFormatted\" : \"aeiou\",\\n            \"primaryCurrencyCode\" : \"aeiou\",\\n            \"day\" : {\\n              \"raw\" : \"aeiou\",\\n              \"timeZoneOffsetSeconds\" : \"aeiou\",\\n              \"localizedShortDate\" : \"aeiou\",\\n              \"epochSeconds\" : \"aeiou\",\\n              \"localized\" : \"aeiou\"\\n            }\\n          } ],\\n          \"hotelDepositsAfterRefundPOSFormatted\" : \"aeiou\",\\n          \"mandatoryHotelFees\" : \"aeiou\",\\n          \"refund\" : \"aeiou\",\\n          \"hotelDepositsFormatted\" : \"aeiou\",\\n          \"averagePricePerDay\" : \"aeiou\",\\n          \"subTotalAfterDepositsPOSFormatted\" : \"aeiou\",\\n          \"expediaChangeFeeFormatted\" : \"aeiou\",\\n          \"hotelDepositsPOSFormatted\" : \"aeiou\",\\n          \"adjustmentForDRRRateDiscountFormatted\" : \"aeiou\",\\n          \"extraGuestChargesFormatted\" : \"aeiou\",\\n          \"taxStatus\" : \"aeiou\",\\n          \"adjustmentForLoyaltyFormatted\" : \"aeiou\",\\n          \"totalFormatted\" : \"aeiou\",\\n          \"adjustmentForCoupon\" : \"aeiou\",\\n          \"totalPOSCurrencyCode\" : \"aeiou\",\\n          \"expediaChangeFee\" : \"aeiou\",\\n          \"totalExpediaCollectAmount\" : \"aeiou\",\\n          \"averageTaxPerDayFormatted\" : \"aeiou\",\\n          \"totalPOS\" : \"aeiou\",\\n          \"subTotalBeforeCoupon\" : \"aeiou\",\\n          \"mandatoryHotelFeesFormatted\" : \"aeiou\",\\n          \"base\" : \"aeiou\",\\n          \"penaltyFormatted\" : \"aeiou\",\\n          \"refundFormatted\" : \"aeiou\"\\n        },\\n        \"productType\" : {\\n          \"m_productType\" : \"aeiou\",\\n          \"travelocityType\" : \"aeiou\"\\n        },\\n        \"newTotalFormatted\" : \"aeiou\"\\n      },\\n      \"userErrorMessage\" : {\\n        \"hasPageLevelError\" : true,\\n        \"hasModuleLevelError\" : true,\\n        \"moduleName\" : \"aeiou\",\\n        \"moduleLevelErrorMessage\" : \"aeiou\",\\n        \"errorKey\" : \"aeiou\",\\n        \"pageLevelErrorMessage\" : \"aeiou\"\\n      },\\n      \"serviceErrorCode\" : \"aeiou\"\\n    },\\n    \"errorType\" : \"aeiou\",\\n    \"errorCategory\" : \"aeiou\",\\n    \"errorCode\" : 123,\\n    \"fields\" : [ \"aeiou\" ],\\n    \"stackTrace\" : \"aeiou\"\\n  } ],\\n  \"responseType\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "trips-search-id"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/trips/{tripId}/updateTripNameDescription",
          "operationId" : "trips-update-trip",
          "returnType" : "tripTitleDescriptionUpdateResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "tripTitleDescriptionUpdateResponse",
          "summary" : "Update Trip Name and Description",
          "notes" : "Mobile API Trips update trip name and description operation",
          "baseName" : "Trips",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isPathParam" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "Trip ID",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"path\",\n  \"description\" : \"Trip ID\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tripname",
            "paramName" : "tripname",
            "dataType" : "String",
            "description" : "The name of the trip",
            "jsonSchema" : "{\n  \"name\" : \"tripname\",\n  \"in\" : \"formData\",\n  \"description\" : \"The name of the trip\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "tripnote",
            "paramName" : "tripnote",
            "dataType" : "String",
            "description" : "The comments of the trip",
            "jsonSchema" : "{\n  \"name\" : \"tripnote\",\n  \"in\" : \"formData\",\n  \"description\" : \"The comments of the trip\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ {
            "isPathParam" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "Trip ID",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"path\",\n  \"description\" : \"Trip ID\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripname",
            "paramName" : "tripname",
            "dataType" : "String",
            "description" : "The name of the trip",
            "jsonSchema" : "{\n  \"name\" : \"tripname\",\n  \"in\" : \"formData\",\n  \"description\" : \"The name of the trip\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "tripnote",
            "paramName" : "tripnote",
            "dataType" : "String",
            "description" : "The comments of the trip",
            "jsonSchema" : "{\n  \"name\" : \"tripnote\",\n  \"in\" : \"formData\",\n  \"description\" : \"The comments of the trip\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "tags" : [ "Trips" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "tripTitleDescriptionUpdateResponse",
            "baseType" : "tripTitleDescriptionUpdateResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/tripTitleDescriptionUpdateResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/tripTitleDescriptionUpdateResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "tripTitleDescriptionUpdateResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"errorMessage\" : \"aeiou\",\\n  \"status\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "trips-update-trip"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/users/{userId}/trips",
          "operationId" : "trips-by-user-id",
          "returnType" : "tripResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "tripResponse",
          "summary" : "(Internal Only)",
          "notes" : "(Internal Only) Returns array of trips for passed userId",
          "baseName" : "Trips",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isPathParam" : true,
            "baseName" : "userId",
            "paramName" : "userId",
            "dataType" : "String",
            "description" : "User ID",
            "jsonSchema" : "{\n  \"name\" : \"userId\",\n  \"in\" : \"path\",\n  \"description\" : \"User ID\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ {
            "isPathParam" : true,
            "baseName" : "userId",
            "paramName" : "userId",
            "dataType" : "String",
            "description" : "User ID",
            "jsonSchema" : "{\n  \"name\" : \"userId\",\n  \"in\" : \"path\",\n  \"description\" : \"User ID\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Trips" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "tripResponse",
            "baseType" : "tripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/tripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/tripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "string", "tripResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"responseData\" : [ {\\n    \"insurance\" : [ {\\n      \"startDate\" : \"2015-03-20T04:51:51.619+0000\",\\n      \"endDate\" : \"2015-03-20T04:51:51.619+0000\",\\n      \"comment\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"startDate\" : \"aeiou\",\\n    \"endDate\" : \"aeiou\",\\n    \"endDateLocalized\" : \"aeiou\",\\n    \"endTime\" : null,\\n    \"hotels\" : [ {\\n      \"numberOfNights\" : 123,\\n      \"inventorySource\" : \"aeiou\",\\n      \"checkOutDateTime\" : null,\\n      \"hotelPropertyInfo\" : {\\n        \"restrictionPolicies\" : [ \"aeiou\" ],\\n        \"checkInEndTimePolicy\" : null,\\n        \"isVipAccess\" : true,\\n        \"checkOutTimePolicy\" : null,\\n        \"checkInPolicies\" : [ \"aeiou\" ],\\n        \"fees\" : [ \"aeiou\" ],\\n        \"formattedPhoneNumbers\" : \"aeiou\",\\n        \"tollFreePhone\" : \"aeiou\",\\n        \"specialCheckInInstructions\" : [ \"aeiou\" ],\\n        \"checkInStartTimePolicy\" : {\\n          \"value\" : \"aeiou\",\\n          \"label\" : \"aeiou\"\\n        },\\n        \"starRating\" : \"aeiou\",\\n        \"mandatoryFees\" : [ \"aeiou\" ],\\n        \"photoThumbnail1000pixURL\" : \"aeiou\",\\n        \"localPhone\" : \"aeiou\",\\n        \"address\" : {\\n          \"countryName\" : \"aeiou\",\\n          \"fullAddress\" : \"aeiou\",\\n          \"cityLocalized\" : \"aeiou\",\\n          \"countryCode\" : \"aeiou\",\\n          \"addressLine5\" : \"aeiou\",\\n          \"addressLine4\" : \"aeiou\",\\n          \"addressLine3\" : \"aeiou\",\\n          \"companyName\" : \"aeiou\",\\n          \"addressLine2\" : \"aeiou\",\\n          \"addressLine1\" : \"aeiou\",\\n          \"city\" : \"aeiou\",\\n          \"postalCode\" : \"aeiou\",\\n          \"countrySubdivisionCode\" : \"aeiou\"\\n        },\\n        \"googleMapsLink\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"generalRules\" : [ \"aeiou\" ],\\n        \"photoThumbnail500pixURL\" : \"aeiou\",\\n        \"photoThumbnailURL\" : \"aeiou\"\\n      },\\n      \"paymentsAndCreditFees\" : {\\n        \"isPaymentsCreditsVisible\" : true,\\n        \"isFullyCancelled\" : true,\\n        \"isDirectAgency\" : true,\\n        \"paymentsCreditsDAHotelAnyRoomCancelled\" : \"aeiou\",\\n        \"paymentsDepositRequired\" : \"aeiou\",\\n        \"isGDS\" : true,\\n        \"isDepositRequired\" : true,\\n        \"isAnyRoomCancelled\" : true,\\n        \"noFeesStaticText\" : \"aeiou\",\\n        \"paymentsCreditsGDSHotelAnyRoomCancelled\" : \"aeiou\",\\n        \"paymentsHotelFeesAndDepositsDisclaimer\" : \"aeiou\"\\n      },\\n      \"endTime\" : null,\\n      \"hotelId\" : \"aeiou\",\\n      \"startTime\" : null,\\n      \"isFreeCancellationAvailable\" : true,\\n      \"inventoryType\" : \"aeiou\",\\n      \"appliedCoupons\" : [ {\\n        \"description\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"code\" : \"aeiou\",\\n        \"couponValue\" : null\\n      } ],\\n      \"rooms\" : [ {\\n        \"roomTypeCode\" : \"aeiou\",\\n        \"drrRateDiscountDescription\" : \"aeiou\",\\n        \"availableOnAllDates\" : \"aeiou\",\\n        \"amenities\" : [ \"aeiou\" ],\\n        \"uniqueID\" : \"aeiou\",\\n        \"averagePriceDetails\" : null,\\n        \"refundabilityStatus\" : \"aeiou\",\\n        \"roomPreferences\" : {\\n          \"otherOccupantInfo\" : {\\n            \"childCount\" : 123,\\n            \"adultCount\" : 123,\\n            \"infantCount\" : 123,\\n            \"childAndInfantAges\" : [ 123 ]\\n          },\\n          \"occupantSelectedRoomOptions\" : {\\n            \"hasExtraBedInfant\" : true,\\n            \"bedTypeName\" : \"aeiou\",\\n            \"isRoomOptionsAvailable\" : true,\\n            \"defaultBedTypeName\" : \"aeiou\",\\n            \"specialRequest\" : \"aeiou\",\\n            \"smokingPreference\" : \"aeiou\",\\n            \"isSmokingPreferenceSelected\" : true,\\n            \"hasExtraBedChild\" : true,\\n            \"hasExtraBedAdult\" : true,\\n            \"accessibilityOptions\" : [ \"aeiou\" ]\\n          },\\n          \"availableRoomOptions\" : {\\n            \"isNonSmokingRoomAvailable\" : true,\\n            \"bedTypes\" : [ {\\n              \"id\" : \"aeiou\",\\n              \"selected\" : true,\\n              \"description\" : \"aeiou\"\\n            } ],\\n            \"isSmokingRoomAvailable\" : true,\\n            \"accessibilityOptions\" : [ {\\n              \"id\" : \"aeiou\",\\n              \"selected\" : true,\\n              \"description\" : \"aeiou\"\\n            } ]\\n          },\\n          \"primaryOccupant\" : {\\n            \"frequentFlyerPlanName\" : \"aeiou\",\\n            \"phone\" : \"aeiou\",\\n            \"primaryPhone\" : \"aeiou\",\\n            \"email\" : \"aeiou\",\\n            \"frequentGuestPlanName\" : \"aeiou\",\\n            \"frequentGuestMembershipCode\" : \"aeiou\",\\n            \"fullName\" : \"aeiou\",\\n            \"frequentFlyerMembershipCode\" : \"aeiou\",\\n            \"firstName\" : \"aeiou\"\\n          }\\n        },\\n        \"totalPriceDetails\" : null,\\n        \"ratePlanCode\" : \"aeiou\",\\n        \"hotelConfirmationNumber\" : \"aeiou\",\\n        \"cancelRefundDetails\" : {\\n          \"refundAmount\" : \"aeiou\",\\n          \"currencyCode\" : \"aeiou\",\\n          \"penaltyAmountFormatted\" : \"aeiou\",\\n          \"condition\" : \"aeiou\",\\n          \"penaltyAmount\" : \"aeiou\",\\n          \"refundAmountFormatted\" : \"aeiou\"\\n        },\\n        \"roomCancelLink\" : \"aeiou\",\\n        \"roomChangeLink\" : \"aeiou\",\\n        \"orderLineNumber\" : \"aeiou\",\\n        \"hotelCancellationId\" : \"aeiou\",\\n        \"bookingStatus\" : \"aeiou\",\\n        \"bookingStatusEnum\" : \"aeiou\",\\n        \"roomRatePlanDescription\" : \"aeiou\"\\n      } ],\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"checkInDate\" : \"aeiou\",\\n      \"checkOutDate\" : \"aeiou\",\\n      \"checkOutDateLocalized\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"infositeURL\" : \"aeiou\",\\n      \"averagePriceDetails\" : null,\\n      \"checkInDateLocalized\" : \"aeiou\",\\n      \"rules\" : {\\n        \"loyaltyPointsDisclaimer\" : \"aeiou\",\\n        \"paymentPolicies\" : [ \"aeiou\" ],\\n        \"occupancyPolicies\" : [ \"aeiou\" ],\\n        \"cancellationWindowTime\" : null,\\n        \"quebecResidentsIndemnityFund\" : \"aeiou\",\\n        \"currencyConversionDisclaimer\" : \"aeiou\",\\n        \"currencyDisclaimer\" : \"aeiou\",\\n        \"aarpCheckIn\" : \"aeiou\",\\n        \"accessibilityText\" : \"aeiou\",\\n        \"roomRequestDisclaimer\" : \"aeiou\",\\n        \"cancelChangeRules\" : [ \"aeiou\" ],\\n        \"opaquePolicies\" : [ \"aeiou\" ],\\n        \"cancelChangeRulesIntroduction\" : \"aeiou\",\\n        \"extraGuestPolicies\" : [ \"aeiou\" ],\\n        \"opaqueRules\" : [ \"aeiou\" ],\\n        \"cancelChangeWarning\" : \"aeiou\",\\n        \"lateArrivalInstructions\" : \"aeiou\"\\n      },\\n      \"inventoryVisibility\" : \"aeiou\",\\n      \"totalPriceDetails\" : null,\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"checkInDateTime\" : null,\\n      \"roomChangeLink\" : \"aeiou\",\\n      \"orderNumber\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"bookingStatusText\" : \"aeiou\"\\n    } ],\\n    \"startTime\" : null,\\n    \"title\" : \"aeiou\",\\n    \"levelOfDetail\" : \"aeiou\",\\n    \"sharableDetailsURL\" : \"aeiou\",\\n    \"flights\" : [ {\\n      \"isSeatMapAvailable\" : true,\\n      \"startDate\" : \"aeiou\",\\n      \"flightType\" : \"aeiou\",\\n      \"fareTotal\" : {\\n        \"insurance\" : \"aeiou\",\\n        \"expediaServiceFeeFormatted\" : \"aeiou\",\\n        \"subTotal\" : \"aeiou\",\\n        \"expediaServiceFee\" : \"aeiou\",\\n        \"airlineCardFee\" : \"aeiou\",\\n        \"airlineCardFeeFormatted\" : \"aeiou\",\\n        \"subTotalFormatted\" : \"aeiou\",\\n        \"couponDiscount\" : \"aeiou\",\\n        \"couponDiscountFormatted\" : \"aeiou\",\\n        \"insuranceFormatted\" : \"aeiou\"\\n      },\\n      \"endDate\" : \"aeiou\",\\n      \"isLccOrCharter\" : true,\\n      \"farePerPassenger\" : [ {\\n        \"total\" : \"aeiou\",\\n        \"passengerIndex\" : 123,\\n        \"ancillaryFees\" : [ {\\n          \"listOfLegsAncillaryAppliedTo\" : [ \"aeiou\" ],\\n          \"weight\" : {\\n            \"unit\" : \"aeiou\"\\n          },\\n          \"quantity\" : 123,\\n          \"addToTotal\" : true\\n        } ],\\n        \"passengerTypeCodeLocalized\" : \"aeiou\",\\n        \"baseFormatted\" : \"aeiou\",\\n        \"passengerTypeCode\" : \"aeiou\",\\n        \"totalFormatted\" : \"aeiou\",\\n        \"fees\" : [ {\\n          \"amount\" : \"aeiou\",\\n          \"amountFormatted\" : \"aeiou\",\\n          \"localizedName\" : \"aeiou\"\\n        } ],\\n        \"currency\" : \"aeiou\",\\n        \"taxesFormatted\" : \"aeiou\",\\n        \"base\" : \"aeiou\",\\n        \"fromToAirportCodes\" : \"aeiou\",\\n        \"taxes\" : \"aeiou\"\\n      } ],\\n      \"expediaBookingId\" : \"aeiou\",\\n      \"passengers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"dateOfBirth\" : null,\\n        \"lastName\" : \"aeiou\",\\n        \"TSARedressNumber\" : \"aeiou\",\\n        \"passportAddress\" : \"aeiou\",\\n        \"typeCode\" : \"aeiou\",\\n        \"phoneNumbers\" : [ {\\n          \"phone\" : \"aeiou\",\\n          \"countryCode\" : \"aeiou\"\\n        } ],\\n        \"specialAssistanceOptions\" : [ \"aeiou\" ],\\n        \"title\" : \"aeiou\",\\n        \"typeLocalized\" : \"aeiou\",\\n        \"ticketNumbers\" : [ \"aeiou\" ],\\n        \"gender\" : \"aeiou\",\\n        \"passportCountryCode\" : \"aeiou\",\\n        \"seats\" : [ {\\n          \"requested\" : \"aeiou\",\\n          \"seatPreference\" : \"aeiou\",\\n          \"legIndex\" : 123,\\n          \"seatPreferenceLocalized\" : \"aeiou\",\\n          \"smokingAllowed\" : true,\\n          \"assigned\" : \"aeiou\",\\n          \"ticketingStatus\" : \"aeiou\",\\n          \"segmentIndex\" : 123\\n        } ],\\n        \"fullName\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\",\\n        \"frequentFlyerPlans\" : [ {\\n          \"airlineCode\" : \"aeiou\",\\n          \"programCode\" : \"aeiou\",\\n          \"membershipNumber\" : \"aeiou\",\\n          \"programName\" : \"aeiou\"\\n        } ],\\n        \"cancelledTicketNumbers\" : [ \"aeiou\" ]\\n      } ],\\n      \"fulfillmentMethod\" : \"aeiou\",\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"hasTrainTransfer\" : true,\\n      \"ticketingTime\" : null,\\n      \"paymentModel\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"airRecordLocator\" : \"aeiou\",\\n      \"webChangePathURL\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"ticketingStatus\" : \"aeiou\",\\n      \"rules\" : {\\n        \"airlineLiabilityLimitationsEnglishOnlyCaveatText\" : \"aeiou\",\\n        \"onlineCheckinReminderText\" : \"aeiou\",\\n        \"refundabilityText\" : \"aeiou\",\\n        \"cancelChangeIntroductionText\" : \"aeiou\",\\n        \"changePenaltyText\" : \"aeiou\",\\n        \"bookingFeeText\" : \"aeiou\",\\n        \"insuranceTerms\" : null,\\n        \"bargainFareStandbyText\" : \"aeiou\",\\n        \"bargainFairUpgradesText\" : \"aeiou\",\\n        \"flightRulesLCCImportantMessage\" : null,\\n        \"cancellationFeeLegalText\" : \"aeiou\",\\n        \"flightRulesLCCServiceLite\" : null,\\n        \"lccPartnerConfEmailsForSplitTicketText\" : [ \"aeiou\" ],\\n        \"manageMyFlightRulesLCCImportantMessage\" : null,\\n        \"internationalPassportNoteText\" : \"aeiou\",\\n        \"quebecResidentsIndemnityFundText\" : \"aeiou\",\\n        \"airlineLiabilityLimitations\" : null,\\n        \"travelingToUSText\" : \"aeiou\",\\n        \"lccPartnerConfEmailsText\" : [ \"aeiou\" ],\\n        \"airlineCheckInInstructionText\" : \"aeiou\",\\n        \"faresNotGuaranteedText\" : \"aeiou\",\\n        \"splitTicketingMessage\" : \"aeiou\",\\n        \"ticketingAgencyText\" : \"aeiou\",\\n        \"bookingFeeLegalText\" : \"aeiou\",\\n        \"feeChangeRefundIntroductionText\" : \"aeiou\",\\n        \"additionalAirlineFees\" : null,\\n        \"completePenaltyRules\" : {\\n          \"apiURL\" : \"aeiou\",\\n          \"text\" : \"aeiou\",\\n          \"textAndURL\" : \"aeiou\",\\n          \"url\" : \"aeiou\"\\n        },\\n        \"firstCharterImportantMessage\" : null,\\n        \"secondCharterImportantMessage\" : null,\\n        \"flightRulesLCCPrecheckinAdvice\" : null\\n      },\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"ticketingAirCarrierNames\" : [ \"aeiou\" ],\\n      \"confirmationNumbers\" : {\\n        \"airlineName\" : \"aeiou\",\\n        \"number\" : \"aeiou\"\\n      },\\n      \"updateFrequentFlyerPathURL\" : \"aeiou\",\\n      \"isInternational\" : true,\\n      \"orderNumber\" : \"aeiou\",\\n      \"isSplitTicket\" : true,\\n      \"fareType\" : \"aeiou\",\\n      \"legs\" : [ {\\n        \"duration\" : \"aeiou\",\\n        \"segments\" : [ {\\n          \"isSeatMapAvailable\" : true,\\n          \"arrivalType\" : \"aeiou\",\\n          \"flightIdForSeatMap\" : \"aeiou\",\\n          \"airlineName\" : \"aeiou\",\\n          \"confirmationNUmber\" : \"aeiou\",\\n          \"onTimePercentage\" : \"aeiou\",\\n          \"flightNumber\" : \"aeiou\",\\n          \"segmentChangeMessageLegacy\" : \"aeiou\",\\n          \"bookingCode\" : \"aeiou\",\\n          \"airSegmentStatusCode\" : \"aeiou\",\\n          \"checkinAirlineName\" : \"aeiou\",\\n          \"airlineCode\" : \"aeiou\",\\n          \"cabinCodeLocalized\" : \"aeiou\",\\n          \"cabinCode\" : \"aeiou\",\\n          \"airOriginDestinationReferenceIndex\" : 123,\\n          \"departureGate\" : \"aeiou\",\\n          \"arrivalLocation\" : null,\\n          \"transportationType\" : \"aeiou\",\\n          \"operatedByAirCarrierName\" : \"aeiou\",\\n          \"distanceUnits\" : \"aeiou\",\\n          \"status\" : \"aeiou\",\\n          \"arrivalGate\" : \"aeiou\",\\n          \"delays\" : {\\n            \"departureGateDelay\" : \"aeiou\",\\n            \"arrivalGateDelay\" : \"aeiou\"\\n          },\\n          \"departureTerminal\" : \"aeiou\",\\n          \"departureTime\" : null,\\n          \"departureLocation\" : {\\n            \"fullAddress\" : \"aeiou\",\\n            \"airportMetroCode\" : \"aeiou\",\\n            \"airportCode\" : \"aeiou\",\\n            \"name\" : \"aeiou\",\\n            \"countryCode\" : \"aeiou\",\\n            \"longName\" : \"aeiou\",\\n            \"countrySubdivisionCode\" : \"aeiou\",\\n            \"city\" : \"aeiou\"\\n          },\\n          \"providerCode\" : \"aeiou\",\\n          \"segmentChangeMessage\" : \"aeiou\",\\n          \"isHidden\" : true,\\n          \"duration\" : \"aeiou\",\\n          \"checkinAirlineCode\" : \"aeiou\",\\n          \"arrivalTerminal\" : \"aeiou\",\\n          \"arrivalTime\" : null,\\n          \"externalAirlineCode\" : \"aeiou\",\\n          \"layoverDuration\" : \"aeiou\",\\n          \"formattedDuration\" : \"aeiou\",\\n          \"equipmentDescription\" : \"aeiou\",\\n          \"departureType\" : \"aeiou\",\\n          \"equipmentCode\" : \"aeiou\",\\n          \"confirmationAirline\" : \"aeiou\"\\n        } ],\\n        \"airlineLogoURL\" : \"aeiou\",\\n        \"sharableFlightLegURL\" : \"aeiou\",\\n        \"state\" : \"aeiou\",\\n        \"numberOfStops\" : 123,\\n        \"type\" : \"aeiou\",\\n        \"segmentChangeMessage\" : \"aeiou\"\\n      } ],\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"bookingProvider\" : \"aeiou\"\\n    } ],\\n    \"startDateLocalized\" : \"aeiou\",\\n    \"cars\" : [ {\\n      \"bookingId\" : \"aeiou\",\\n      \"carVendor\" : {\\n        \"localPhoneNumber\" : \"aeiou\",\\n        \"longName\" : \"aeiou\",\\n        \"code\" : \"aeiou\",\\n        \"shortName\" : \"aeiou\"\\n      },\\n      \"confirmationNumber\" : \"aeiou\",\\n      \"pickupTime\" : null,\\n      \"carTypeAttributes\" : [ {\\n        \"wheelDriveTypeLocalized\" : \"aeiou\",\\n        \"airConditioningType\" : \"aeiou\",\\n        \"fuelType\" : \"aeiou\",\\n        \"transmissionType\" : \"aeiou\",\\n        \"wheelDriveType\" : \"aeiou\",\\n        \"transmissionTypeLocalized\" : \"aeiou\",\\n        \"airConditioningTypeLocalized\" : \"aeiou\",\\n        \"fuelTypeLocalized\" : \"aeiou\",\\n        \"vehicleTypeLocalized\" : \"aeiou\"\\n      } ],\\n      \"carType\" : \"aeiou\",\\n      \"passengers\" : [ {\\n        \"closingDateTime\" : null,\\n        \"openingDateTime\" : null\\n      } ],\\n      \"dropOffDateOpenHoursSummaryString\" : \"aeiou\",\\n      \"carCategory\" : \"aeiou\",\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"carTypeLocalized\" : \"aeiou\",\\n      \"carCategoryLocalized\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"reservationGuaranteePolicy\" : \"aeiou\",\\n      \"webGetCarCancelDetailPathURL\" : \"aeiou\",\\n      \"specialEquipmentRequests\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"rules\" : {\\n        \"ruleType\" : \"aeiou\",\\n        \"ruleName\" : \"aeiou\"\\n      },\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"dropOffDateOpenHours\" : [ null ],\\n      \"price\" : null,\\n      \"pickupLocation\" : {\\n        \"locationCode\" : true,\\n        \"postalCode\" : \"aeiou\",\\n        \"locationDescription\" : \"aeiou\",\\n        \"cityName\" : \"aeiou\",\\n        \"locationType\" : \"aeiou\",\\n        \"countryCode\" : \"aeiou\",\\n        \"airportInstructions\" : \"aeiou\",\\n        \"addressLine5\" : \"aeiou\",\\n        \"addressLine4\" : \"aeiou\",\\n        \"addressLine3\" : \"aeiou\",\\n        \"addressLine2\" : \"aeiou\",\\n        \"provinceStateName\" : \"aeiou\",\\n        \"addressLine1\" : \"aeiou\"\\n      },\\n      \"dropOffTime\" : null,\\n      \"carCategoryImageURL\" : \"aeiou\",\\n      \"specialEquipmentRequestCaveatText\" : \"aeiou\",\\n      \"webCarRulesPageURL\" : \"aeiou\",\\n      \"travelers\" : {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      },\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"dropOffLocation\" : null,\\n      \"pickupDateOpenHoursSummaryString\" : \"aeiou\"\\n    } ],\\n    \"description\" : \"aeiou\",\\n    \"apiDetailsURL\" : \"aeiou\",\\n    \"isBookedUsingForeignCurrency\" : true,\\n    \"readTripError\" : \"\",\\n    \"activities\" : [ {\\n      \"vendorCustomerServiceOffices\" : [ {\\n        \"hoursOfOperation\" : [ {\\n          \"startTime\" : \"aeiou\",\\n          \"day\" : \"aeiou\",\\n          \"endTime\" : \"aeiou\"\\n        } ],\\n        \"phoneNumber\" : \"aeiou\",\\n        \"phoneCountryCode\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"hoursOfOperationText\" : \"aeiou\",\\n        \"emailAddress\" : \"aeiou\",\\n        \"phoneNumbers\" : [ {\\n          \"formatted\" : \"aeiou\",\\n          \"useText\" : \"aeiou\",\\n          \"costText\" : \"aeiou\"\\n        } ]\\n      } ],\\n      \"redemptionLocations\" : [ null ],\\n      \"activityDetailsURL\" : \"aeiou\",\\n      \"voucherPrintURL\" : \"aeiou\",\\n      \"endTime\" : null,\\n      \"startTime\" : null,\\n      \"supplierReferenceNumber\" : \"aeiou\",\\n      \"activityTitle\" : \"aeiou\",\\n      \"activityItemTitle\" : \"aeiou\",\\n      \"activityLocation\" : {\\n        \"name1\" : \"aeiou\",\\n        \"name2\" : \"aeiou\"\\n      },\\n      \"travelerCountDescription\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"bookingDate\" : null,\\n      \"activityItemDescription\" : \"aeiou\",\\n      \"vendorName\" : \"aeiou\",\\n      \"activityDescription\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"termsAndConditions\" : {\\n        \"knowBeforeYouGo\" : \"aeiou\",\\n        \"cancellationAddendum\" : \"aeiou\",\\n        \"instructions\" : \"aeiou\",\\n        \"generalDisclaimer\" : \"aeiou\",\\n        \"terms\" : \"aeiou\",\\n        \"howToRedeem\" : \"aeiou\",\\n        \"quebecResidentsIndemnityFund\" : \"aeiou\"\\n      },\\n      \"vendorCustomerServiceEmail\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"vouchers\" : [ {\\n        \"supplierReferenceCode\" : \"aeiou\",\\n        \"securityCode\" : \"aeiou\",\\n        \"id\" : \"aeiou\",\\n        \"barcodeImageURL\" : \"aeiou\",\\n        \"validForRedemerTypeLocalized\" : \"aeiou\",\\n        \"validForRedemerTypeEnglish\" : \"aeiou\",\\n        \"barcodeNumber\" : \"aeiou\"\\n      } ],\\n      \"activityItemTitleEnglish\" : \"aeiou\",\\n      \"price\" : {\\n        \"pricePerCategory\" : \"aeiou\",\\n        \"localisedPriceAndPassengerCount\" : [ {\\n          \"localisedPassengerTypeAndCount\" : \"aeiou\",\\n          \"totalBasePriceForSorting\" : null,\\n          \"localisedPrice\" : \"aeiou\"\\n        } ]\\n      },\\n      \"webGetLXCancelDetailPathURL\" : \"aeiou\",\\n      \"travelers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"isRedeemer\" : true,\\n        \"gender\" : \"aeiou\",\\n        \"nationalityCountry\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      } ],\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"trains\" : [ null ],\\n    \"customerSupport\" : {\\n      \"termsAndConditionsURL\" : \"aeiou\",\\n      \"customerSupportPhoneNumberInternational\" : \"aeiou\",\\n      \"customerSupportPhoneNumberDomestic\" : \"aeiou\",\\n      \"customerSupportPhoneInfo\" : [ \"aeiou\" ],\\n      \"customerSupportPhoneInfoForEmail\" : [ \"aeiou\" ],\\n      \"customerSupportPhoneNumberDomesticAfterHours\" : \"aeiou\",\\n      \"customerSupportURL\" : \"aeiou\"\\n    },\\n    \"timePeriod\" : \"aeiou\",\\n    \"packages\" : [ {\\n      \"startDate\" : \"aeiou\",\\n      \"isChangeable\" : true,\\n      \"uniqueID\" : \"aeiou\",\\n      \"endDate\" : \"aeiou\",\\n      \"endTime\" : null,\\n      \"hotels\" : null,\\n      \"startTime\" : null,\\n      \"price\" : {\\n        \"insurance\" : \"aeiou\",\\n        \"total\" : \"aeiou\",\\n        \"taxesAndFees\" : \"aeiou\",\\n        \"totalFormatted\" : \"aeiou\",\\n        \"obfee\" : \"aeiou\",\\n        \"savings\" : \"aeiou\",\\n        \"taxesAndFeesFormatted\" : \"aeiou\",\\n        \"currency\" : \"aeiou\",\\n        \"obfeeFormatted\" : \"aeiou\",\\n        \"subTotal\" : \"aeiou\",\\n        \"savingsFormatted\" : \"aeiou\",\\n        \"bookingFee\" : \"aeiou\",\\n        \"subTotalFormatted\" : \"aeiou\",\\n        \"bookingFeeFormatted\" : \"aeiou\",\\n        \"coupon\" : \"aeiou\",\\n        \"insuranceFormatted\" : \"aeiou\",\\n        \"couponFormatted\" : \"aeiou\"\\n      },\\n      \"flights\" : null,\\n      \"cars\" : null,\\n      \"orderNumber\" : \"aeiou\",\\n      \"isLegacy\" : true,\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"activities\" : null,\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"tripUpdatedTime\" : null,\\n    \"externalCruises\" : [ null ],\\n    \"tripId\" : \"aeiou\",\\n    \"cruises\" : [ {\\n      \"departureDate\" : \"aeiou\",\\n      \"childPassengers\" : [ null ],\\n      \"promotions\" : [ {\\n        \"cruiseCardName\" : \"aeiou\",\\n        \"promotionId\" : 123,\\n        \"rank\" : 123,\\n        \"campaignId\" : 123,\\n        \"fullDescription\" : \"aeiou\",\\n        \"shortDescription\" : \"aeiou\",\\n        \"promotionCode\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"termsAndConditions\" : \"aeiou\"\\n      } ],\\n      \"pricingSummary\" : { },\\n      \"shipName\" : \"aeiou\",\\n      \"invoiceNumber\" : \"aeiou\",\\n      \"adultPassengers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"titleCode\" : \"aeiou\",\\n        \"passengerNumber\" : 123,\\n        \"gender\" : \"aeiou\",\\n        \"citizenship\" : \"aeiou\",\\n        \"birthDate\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      } ],\\n      \"paymentHistory\" : {\\n        \"finalPaymentDueDate\" : \"aeiou\",\\n        \"totalAmountReceivedInd\" : \"aeiou\",\\n        \"currency\" : \"aeiou\"\\n      },\\n      \"cabinDetails\" : \"aeiou\",\\n      \"returnDate\" : \"aeiou\",\\n      \"rulesAndRestrictionsLink\" : \"aeiou\",\\n      \"email\" : \"aeiou\",\\n      \"cruiseLineWebsiteLink\" : \"aeiou\",\\n      \"cruiseLineName\" : \"aeiou\",\\n      \"cruiseLineBkgConfNumber\" : \"aeiou\",\\n      \"customerCareNumber\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"rewards\" : {\\n      \"basePoints\" : 123,\\n      \"logoUrl\" : \"aeiou\",\\n      \"viewStatementURL\" : \"aeiou\",\\n      \"bonusPoints\" : [ {\\n        \"m_status\" : \"aeiou\",\\n        \"m_pointDescription\" : \"aeiou\",\\n        \"m_pointType\" : \"aeiou\"\\n      } ],\\n      \"totalPoints\" : 123\\n    },\\n    \"tripCreatedTime\" : null,\\n    \"webDetailsURL\" : \"aeiou\",\\n    \"updateTripNameDescPathURL\" : \"aeiou\",\\n    \"tripCacheUpdatedTime\" : null,\\n    \"bookingStatus\" : \"aeiou\"\\n  } ],\\n  \"apiVersion\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"message\" : \"aeiou\",\\n    \"changeErrorResponse\" : {\\n      \"priceChangeResponse\" : {\\n        \"newTotalPrice\" : null,\\n        \"priceIncreased\" : true,\\n        \"newTotal\" : \"aeiou\",\\n        \"previousTotalPrice\" : {\\n          \"currency\" : {\\n            \"defaultFractionDigits\" : 123,\\n            \"numericCode\" : 123,\\n            \"currencyCode\" : \"aeiou\",\\n            \"available\" : [ null ],\\n            \"instances\" : \"aeiou\"\\n          }\\n        },\\n        \"previousTotal\" : \"aeiou\",\\n        \"previousTotalFormatted\" : \"aeiou\",\\n        \"rateInfo\" : {\\n          \"total\" : \"aeiou\",\\n          \"drrRateDiscountDescription\" : \"aeiou\",\\n          \"averagePricePerDayFormatted\" : \"aeiou\",\\n          \"baseFormatted\" : \"aeiou\",\\n          \"primaryCurrencyCode\" : \"aeiou\",\\n          \"totalExpediaCollectAmountFormatted\" : \"aeiou\",\\n          \"adjustmentForCouponFormatted\" : \"aeiou\",\\n          \"averageTaxPerDay\" : \"aeiou\",\\n          \"hotelDeposits\" : \"aeiou\",\\n          \"adjustmentForAgentFormatted\" : \"aeiou\",\\n          \"subTotalAfterDepositsPOS\" : \"aeiou\",\\n          \"hotelDepositsAfterRefundFormatted\" : \"aeiou\",\\n          \"adjustmentForDRRRateDiscount\" : \"aeiou\",\\n          \"adjustmentForAgent\" : \"aeiou\",\\n          \"adjustmentForEmployeeDiscountFormatted\" : \"aeiou\",\\n          \"penalty\" : \"aeiou\",\\n          \"hotelDepositsAfterRefundPOS\" : \"aeiou\",\\n          \"subTotalBeforeCouponFormatted\" : \"aeiou\",\\n          \"hotelDepositsAfterRefund\" : \"aeiou\",\\n          \"baseWithAdjustmentForDRRRateDiscount\" : \"aeiou\",\\n          \"extraGuestCharges\" : \"aeiou\",\\n          \"taxesAndFeesFormatted\" : \"aeiou\",\\n          \"refundPOS\" : \"aeiou\",\\n          \"subTotalAfterDepositsFormatted\" : \"aeiou\",\\n          \"adjustmentForLoyalty\" : \"aeiou\",\\n          \"baseWithAdjustmentForDRRRateDiscountFormatted\" : \"aeiou\",\\n          \"adjustmentForEmployeeDiscount\" : \"aeiou\",\\n          \"comment\" : \"aeiou\",\\n          \"hotelDepositsPOS\" : \"aeiou\",\\n          \"subTotalAfterDeposits\" : \"aeiou\",\\n          \"taxesAndFees\" : \"aeiou\",\\n          \"isSameRateForAllNights\" : true,\\n          \"totalPOSFormatted\" : \"aeiou\",\\n          \"refundPOSFormatted\" : \"aeiou\",\\n          \"hasFees\" : true,\\n          \"priceDetailsPerDay\" : [ {\\n            \"amount\" : \"aeiou\",\\n            \"amountFormatted\" : \"aeiou\",\\n            \"primaryCurrencyCode\" : \"aeiou\",\\n            \"day\" : {\\n              \"raw\" : \"aeiou\",\\n              \"timeZoneOffsetSeconds\" : \"aeiou\",\\n              \"localizedShortDate\" : \"aeiou\",\\n              \"epochSeconds\" : \"aeiou\",\\n              \"localized\" : \"aeiou\"\\n            }\\n          } ],\\n          \"hotelDepositsAfterRefundPOSFormatted\" : \"aeiou\",\\n          \"mandatoryHotelFees\" : \"aeiou\",\\n          \"refund\" : \"aeiou\",\\n          \"hotelDepositsFormatted\" : \"aeiou\",\\n          \"averagePricePerDay\" : \"aeiou\",\\n          \"subTotalAfterDepositsPOSFormatted\" : \"aeiou\",\\n          \"expediaChangeFeeFormatted\" : \"aeiou\",\\n          \"hotelDepositsPOSFormatted\" : \"aeiou\",\\n          \"adjustmentForDRRRateDiscountFormatted\" : \"aeiou\",\\n          \"extraGuestChargesFormatted\" : \"aeiou\",\\n          \"taxStatus\" : \"aeiou\",\\n          \"adjustmentForLoyaltyFormatted\" : \"aeiou\",\\n          \"totalFormatted\" : \"aeiou\",\\n          \"adjustmentForCoupon\" : \"aeiou\",\\n          \"totalPOSCurrencyCode\" : \"aeiou\",\\n          \"expediaChangeFee\" : \"aeiou\",\\n          \"totalExpediaCollectAmount\" : \"aeiou\",\\n          \"averageTaxPerDayFormatted\" : \"aeiou\",\\n          \"totalPOS\" : \"aeiou\",\\n          \"subTotalBeforeCoupon\" : \"aeiou\",\\n          \"mandatoryHotelFeesFormatted\" : \"aeiou\",\\n          \"base\" : \"aeiou\",\\n          \"penaltyFormatted\" : \"aeiou\",\\n          \"refundFormatted\" : \"aeiou\"\\n        },\\n        \"productType\" : {\\n          \"m_productType\" : \"aeiou\",\\n          \"travelocityType\" : \"aeiou\"\\n        },\\n        \"newTotalFormatted\" : \"aeiou\"\\n      },\\n      \"userErrorMessage\" : {\\n        \"hasPageLevelError\" : true,\\n        \"hasModuleLevelError\" : true,\\n        \"moduleName\" : \"aeiou\",\\n        \"moduleLevelErrorMessage\" : \"aeiou\",\\n        \"errorKey\" : \"aeiou\",\\n        \"pageLevelErrorMessage\" : \"aeiou\"\\n      },\\n      \"serviceErrorCode\" : \"aeiou\"\\n    },\\n    \"errorType\" : \"aeiou\",\\n    \"errorCategory\" : \"aeiou\",\\n    \"errorCode\" : 123,\\n    \"fields\" : [ \"aeiou\" ],\\n    \"stackTrace\" : \"aeiou\"\\n  } ],\\n  \"responseType\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "trips-by-user-id"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "path" : "/api/users/{userId}/trips/{tripId}",
          "operationId" : "trips-user-trips",
          "returnType" : "tripResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "tripResponse",
          "summary" : "(Internal Only)",
          "notes" : "(Internal Only) Retrieve trip (tripId) for given customer (userId)",
          "baseName" : "Trips",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isPathParam" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "Trip ID",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"path\",\n  \"description\" : \"Trip ID\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isPathParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "userId",
            "paramName" : "userId",
            "dataType" : "String",
            "description" : "User ID",
            "jsonSchema" : "{\n  \"name\" : \"userId\",\n  \"in\" : \"path\",\n  \"description\" : \"User ID\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "To pull a guest itinerary specify the email address associated with the trip.",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"query\",\n  \"description\" : \"To pull a guest itinerary specify the email address associated with the trip.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "decorator",
            "paramName" : "decorator",
            "dataType" : "String",
            "description" : "Nullifies complex elements of a Trip with exception of Price related elements and their parents. This is an expensive approach because data is stripped after it has been retrieved or calculated",
            "jsonSchema" : "{\n  \"name\" : \"decorator\",\n  \"in\" : \"query\",\n  \"description\" : \"Nullifies complex elements of a Trip with exception of Price related elements and their parents. This is an expensive approach because data is stripped after it has been retrieved or calculated\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "useCache",
            "paramName" : "useCache",
            "dataType" : "Boolean",
            "description" : "An optional flag to make a cached read trip call.",
            "jsonSchema" : "{\n  \"name\" : \"useCache\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional flag to make a cached read trip call.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "currencyCode",
            "paramName" : "currencyCode",
            "dataType" : "String",
            "description" : "currency paramater",
            "jsonSchema" : "{\n  \"name\" : \"currencyCode\",\n  \"in\" : \"query\",\n  \"description\" : \"currency paramater\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedAmount",
            "paramName" : "expectedAmount",
            "dataType" : "String",
            "description" : "Expected Amount during car cancellation",
            "jsonSchema" : "{\n  \"name\" : \"expectedAmount\",\n  \"in\" : \"query\",\n  \"description\" : \"Expected Amount during car cancellation\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "decimalPlaceCount",
            "paramName" : "decimalPlaceCount",
            "dataType" : "String",
            "description" : "Decimal place count for the expected amount",
            "jsonSchema" : "{\n  \"name\" : \"decimalPlaceCount\",\n  \"in\" : \"query\",\n  \"description\" : \"Decimal place count for the expected amount\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ {
            "isPathParam" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "Trip ID",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"path\",\n  \"description\" : \"Trip ID\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isPathParam" : true,
            "secondaryParam" : true,
            "baseName" : "userId",
            "paramName" : "userId",
            "dataType" : "String",
            "description" : "User ID",
            "jsonSchema" : "{\n  \"name\" : \"userId\",\n  \"in\" : \"path\",\n  \"description\" : \"User ID\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "To pull a guest itinerary specify the email address associated with the trip.",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"query\",\n  \"description\" : \"To pull a guest itinerary specify the email address associated with the trip.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "decorator",
            "paramName" : "decorator",
            "dataType" : "String",
            "description" : "Nullifies complex elements of a Trip with exception of Price related elements and their parents. This is an expensive approach because data is stripped after it has been retrieved or calculated",
            "jsonSchema" : "{\n  \"name\" : \"decorator\",\n  \"in\" : \"query\",\n  \"description\" : \"Nullifies complex elements of a Trip with exception of Price related elements and their parents. This is an expensive approach because data is stripped after it has been retrieved or calculated\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "useCache",
            "paramName" : "useCache",
            "dataType" : "Boolean",
            "description" : "An optional flag to make a cached read trip call.",
            "jsonSchema" : "{\n  \"name\" : \"useCache\",\n  \"in\" : \"query\",\n  \"description\" : \"An optional flag to make a cached read trip call.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "currencyCode",
            "paramName" : "currencyCode",
            "dataType" : "String",
            "description" : "currency paramater",
            "jsonSchema" : "{\n  \"name\" : \"currencyCode\",\n  \"in\" : \"query\",\n  \"description\" : \"currency paramater\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedAmount",
            "paramName" : "expectedAmount",
            "dataType" : "String",
            "description" : "Expected Amount during car cancellation",
            "jsonSchema" : "{\n  \"name\" : \"expectedAmount\",\n  \"in\" : \"query\",\n  \"description\" : \"Expected Amount during car cancellation\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "decimalPlaceCount",
            "paramName" : "decimalPlaceCount",
            "dataType" : "String",
            "description" : "Decimal place count for the expected amount",
            "jsonSchema" : "{\n  \"name\" : \"decimalPlaceCount\",\n  \"in\" : \"query\",\n  \"description\" : \"Decimal place count for the expected amount\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Trips" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "tripResponse",
            "baseType" : "tripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/tripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/tripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "string", "tripResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"responseData\" : [ {\\n    \"insurance\" : [ {\\n      \"startDate\" : \"2015-03-20T04:51:51.623+0000\",\\n      \"endDate\" : \"2015-03-20T04:51:51.623+0000\",\\n      \"comment\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"startDate\" : \"aeiou\",\\n    \"endDate\" : \"aeiou\",\\n    \"endDateLocalized\" : \"aeiou\",\\n    \"endTime\" : null,\\n    \"hotels\" : [ {\\n      \"numberOfNights\" : 123,\\n      \"inventorySource\" : \"aeiou\",\\n      \"checkOutDateTime\" : null,\\n      \"hotelPropertyInfo\" : {\\n        \"restrictionPolicies\" : [ \"aeiou\" ],\\n        \"checkInEndTimePolicy\" : null,\\n        \"isVipAccess\" : true,\\n        \"checkOutTimePolicy\" : null,\\n        \"checkInPolicies\" : [ \"aeiou\" ],\\n        \"fees\" : [ \"aeiou\" ],\\n        \"formattedPhoneNumbers\" : \"aeiou\",\\n        \"tollFreePhone\" : \"aeiou\",\\n        \"specialCheckInInstructions\" : [ \"aeiou\" ],\\n        \"checkInStartTimePolicy\" : {\\n          \"value\" : \"aeiou\",\\n          \"label\" : \"aeiou\"\\n        },\\n        \"starRating\" : \"aeiou\",\\n        \"mandatoryFees\" : [ \"aeiou\" ],\\n        \"photoThumbnail1000pixURL\" : \"aeiou\",\\n        \"localPhone\" : \"aeiou\",\\n        \"address\" : {\\n          \"countryName\" : \"aeiou\",\\n          \"fullAddress\" : \"aeiou\",\\n          \"cityLocalized\" : \"aeiou\",\\n          \"countryCode\" : \"aeiou\",\\n          \"addressLine5\" : \"aeiou\",\\n          \"addressLine4\" : \"aeiou\",\\n          \"addressLine3\" : \"aeiou\",\\n          \"companyName\" : \"aeiou\",\\n          \"addressLine2\" : \"aeiou\",\\n          \"addressLine1\" : \"aeiou\",\\n          \"city\" : \"aeiou\",\\n          \"postalCode\" : \"aeiou\",\\n          \"countrySubdivisionCode\" : \"aeiou\"\\n        },\\n        \"googleMapsLink\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"generalRules\" : [ \"aeiou\" ],\\n        \"photoThumbnail500pixURL\" : \"aeiou\",\\n        \"photoThumbnailURL\" : \"aeiou\"\\n      },\\n      \"paymentsAndCreditFees\" : {\\n        \"isPaymentsCreditsVisible\" : true,\\n        \"isFullyCancelled\" : true,\\n        \"isDirectAgency\" : true,\\n        \"paymentsCreditsDAHotelAnyRoomCancelled\" : \"aeiou\",\\n        \"paymentsDepositRequired\" : \"aeiou\",\\n        \"isGDS\" : true,\\n        \"isDepositRequired\" : true,\\n        \"isAnyRoomCancelled\" : true,\\n        \"noFeesStaticText\" : \"aeiou\",\\n        \"paymentsCreditsGDSHotelAnyRoomCancelled\" : \"aeiou\",\\n        \"paymentsHotelFeesAndDepositsDisclaimer\" : \"aeiou\"\\n      },\\n      \"endTime\" : null,\\n      \"hotelId\" : \"aeiou\",\\n      \"startTime\" : null,\\n      \"isFreeCancellationAvailable\" : true,\\n      \"inventoryType\" : \"aeiou\",\\n      \"appliedCoupons\" : [ {\\n        \"description\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"code\" : \"aeiou\",\\n        \"couponValue\" : null\\n      } ],\\n      \"rooms\" : [ {\\n        \"roomTypeCode\" : \"aeiou\",\\n        \"drrRateDiscountDescription\" : \"aeiou\",\\n        \"availableOnAllDates\" : \"aeiou\",\\n        \"amenities\" : [ \"aeiou\" ],\\n        \"uniqueID\" : \"aeiou\",\\n        \"averagePriceDetails\" : null,\\n        \"refundabilityStatus\" : \"aeiou\",\\n        \"roomPreferences\" : {\\n          \"otherOccupantInfo\" : {\\n            \"childCount\" : 123,\\n            \"adultCount\" : 123,\\n            \"infantCount\" : 123,\\n            \"childAndInfantAges\" : [ 123 ]\\n          },\\n          \"occupantSelectedRoomOptions\" : {\\n            \"hasExtraBedInfant\" : true,\\n            \"bedTypeName\" : \"aeiou\",\\n            \"isRoomOptionsAvailable\" : true,\\n            \"defaultBedTypeName\" : \"aeiou\",\\n            \"specialRequest\" : \"aeiou\",\\n            \"smokingPreference\" : \"aeiou\",\\n            \"isSmokingPreferenceSelected\" : true,\\n            \"hasExtraBedChild\" : true,\\n            \"hasExtraBedAdult\" : true,\\n            \"accessibilityOptions\" : [ \"aeiou\" ]\\n          },\\n          \"availableRoomOptions\" : {\\n            \"isNonSmokingRoomAvailable\" : true,\\n            \"bedTypes\" : [ {\\n              \"id\" : \"aeiou\",\\n              \"selected\" : true,\\n              \"description\" : \"aeiou\"\\n            } ],\\n            \"isSmokingRoomAvailable\" : true,\\n            \"accessibilityOptions\" : [ {\\n              \"id\" : \"aeiou\",\\n              \"selected\" : true,\\n              \"description\" : \"aeiou\"\\n            } ]\\n          },\\n          \"primaryOccupant\" : {\\n            \"frequentFlyerPlanName\" : \"aeiou\",\\n            \"phone\" : \"aeiou\",\\n            \"primaryPhone\" : \"aeiou\",\\n            \"email\" : \"aeiou\",\\n            \"frequentGuestPlanName\" : \"aeiou\",\\n            \"frequentGuestMembershipCode\" : \"aeiou\",\\n            \"fullName\" : \"aeiou\",\\n            \"frequentFlyerMembershipCode\" : \"aeiou\",\\n            \"firstName\" : \"aeiou\"\\n          }\\n        },\\n        \"totalPriceDetails\" : null,\\n        \"ratePlanCode\" : \"aeiou\",\\n        \"hotelConfirmationNumber\" : \"aeiou\",\\n        \"cancelRefundDetails\" : {\\n          \"refundAmount\" : \"aeiou\",\\n          \"currencyCode\" : \"aeiou\",\\n          \"penaltyAmountFormatted\" : \"aeiou\",\\n          \"condition\" : \"aeiou\",\\n          \"penaltyAmount\" : \"aeiou\",\\n          \"refundAmountFormatted\" : \"aeiou\"\\n        },\\n        \"roomCancelLink\" : \"aeiou\",\\n        \"roomChangeLink\" : \"aeiou\",\\n        \"orderLineNumber\" : \"aeiou\",\\n        \"hotelCancellationId\" : \"aeiou\",\\n        \"bookingStatus\" : \"aeiou\",\\n        \"bookingStatusEnum\" : \"aeiou\",\\n        \"roomRatePlanDescription\" : \"aeiou\"\\n      } ],\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"checkInDate\" : \"aeiou\",\\n      \"checkOutDate\" : \"aeiou\",\\n      \"checkOutDateLocalized\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"infositeURL\" : \"aeiou\",\\n      \"averagePriceDetails\" : null,\\n      \"checkInDateLocalized\" : \"aeiou\",\\n      \"rules\" : {\\n        \"loyaltyPointsDisclaimer\" : \"aeiou\",\\n        \"paymentPolicies\" : [ \"aeiou\" ],\\n        \"occupancyPolicies\" : [ \"aeiou\" ],\\n        \"cancellationWindowTime\" : null,\\n        \"quebecResidentsIndemnityFund\" : \"aeiou\",\\n        \"currencyConversionDisclaimer\" : \"aeiou\",\\n        \"currencyDisclaimer\" : \"aeiou\",\\n        \"aarpCheckIn\" : \"aeiou\",\\n        \"accessibilityText\" : \"aeiou\",\\n        \"roomRequestDisclaimer\" : \"aeiou\",\\n        \"cancelChangeRules\" : [ \"aeiou\" ],\\n        \"opaquePolicies\" : [ \"aeiou\" ],\\n        \"cancelChangeRulesIntroduction\" : \"aeiou\",\\n        \"extraGuestPolicies\" : [ \"aeiou\" ],\\n        \"opaqueRules\" : [ \"aeiou\" ],\\n        \"cancelChangeWarning\" : \"aeiou\",\\n        \"lateArrivalInstructions\" : \"aeiou\"\\n      },\\n      \"inventoryVisibility\" : \"aeiou\",\\n      \"totalPriceDetails\" : null,\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"checkInDateTime\" : null,\\n      \"roomChangeLink\" : \"aeiou\",\\n      \"orderNumber\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"bookingStatusText\" : \"aeiou\"\\n    } ],\\n    \"startTime\" : null,\\n    \"title\" : \"aeiou\",\\n    \"levelOfDetail\" : \"aeiou\",\\n    \"sharableDetailsURL\" : \"aeiou\",\\n    \"flights\" : [ {\\n      \"isSeatMapAvailable\" : true,\\n      \"startDate\" : \"aeiou\",\\n      \"flightType\" : \"aeiou\",\\n      \"fareTotal\" : {\\n        \"insurance\" : \"aeiou\",\\n        \"expediaServiceFeeFormatted\" : \"aeiou\",\\n        \"subTotal\" : \"aeiou\",\\n        \"expediaServiceFee\" : \"aeiou\",\\n        \"airlineCardFee\" : \"aeiou\",\\n        \"airlineCardFeeFormatted\" : \"aeiou\",\\n        \"subTotalFormatted\" : \"aeiou\",\\n        \"couponDiscount\" : \"aeiou\",\\n        \"couponDiscountFormatted\" : \"aeiou\",\\n        \"insuranceFormatted\" : \"aeiou\"\\n      },\\n      \"endDate\" : \"aeiou\",\\n      \"isLccOrCharter\" : true,\\n      \"farePerPassenger\" : [ {\\n        \"total\" : \"aeiou\",\\n        \"passengerIndex\" : 123,\\n        \"ancillaryFees\" : [ {\\n          \"listOfLegsAncillaryAppliedTo\" : [ \"aeiou\" ],\\n          \"weight\" : {\\n            \"unit\" : \"aeiou\"\\n          },\\n          \"quantity\" : 123,\\n          \"addToTotal\" : true\\n        } ],\\n        \"passengerTypeCodeLocalized\" : \"aeiou\",\\n        \"baseFormatted\" : \"aeiou\",\\n        \"passengerTypeCode\" : \"aeiou\",\\n        \"totalFormatted\" : \"aeiou\",\\n        \"fees\" : [ {\\n          \"amount\" : \"aeiou\",\\n          \"amountFormatted\" : \"aeiou\",\\n          \"localizedName\" : \"aeiou\"\\n        } ],\\n        \"currency\" : \"aeiou\",\\n        \"taxesFormatted\" : \"aeiou\",\\n        \"base\" : \"aeiou\",\\n        \"fromToAirportCodes\" : \"aeiou\",\\n        \"taxes\" : \"aeiou\"\\n      } ],\\n      \"expediaBookingId\" : \"aeiou\",\\n      \"passengers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"dateOfBirth\" : null,\\n        \"lastName\" : \"aeiou\",\\n        \"TSARedressNumber\" : \"aeiou\",\\n        \"passportAddress\" : \"aeiou\",\\n        \"typeCode\" : \"aeiou\",\\n        \"phoneNumbers\" : [ {\\n          \"phone\" : \"aeiou\",\\n          \"countryCode\" : \"aeiou\"\\n        } ],\\n        \"specialAssistanceOptions\" : [ \"aeiou\" ],\\n        \"title\" : \"aeiou\",\\n        \"typeLocalized\" : \"aeiou\",\\n        \"ticketNumbers\" : [ \"aeiou\" ],\\n        \"gender\" : \"aeiou\",\\n        \"passportCountryCode\" : \"aeiou\",\\n        \"seats\" : [ {\\n          \"requested\" : \"aeiou\",\\n          \"seatPreference\" : \"aeiou\",\\n          \"legIndex\" : 123,\\n          \"seatPreferenceLocalized\" : \"aeiou\",\\n          \"smokingAllowed\" : true,\\n          \"assigned\" : \"aeiou\",\\n          \"ticketingStatus\" : \"aeiou\",\\n          \"segmentIndex\" : 123\\n        } ],\\n        \"fullName\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\",\\n        \"frequentFlyerPlans\" : [ {\\n          \"airlineCode\" : \"aeiou\",\\n          \"programCode\" : \"aeiou\",\\n          \"membershipNumber\" : \"aeiou\",\\n          \"programName\" : \"aeiou\"\\n        } ],\\n        \"cancelledTicketNumbers\" : [ \"aeiou\" ]\\n      } ],\\n      \"fulfillmentMethod\" : \"aeiou\",\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"hasTrainTransfer\" : true,\\n      \"ticketingTime\" : null,\\n      \"paymentModel\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"airRecordLocator\" : \"aeiou\",\\n      \"webChangePathURL\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"ticketingStatus\" : \"aeiou\",\\n      \"rules\" : {\\n        \"airlineLiabilityLimitationsEnglishOnlyCaveatText\" : \"aeiou\",\\n        \"onlineCheckinReminderText\" : \"aeiou\",\\n        \"refundabilityText\" : \"aeiou\",\\n        \"cancelChangeIntroductionText\" : \"aeiou\",\\n        \"changePenaltyText\" : \"aeiou\",\\n        \"bookingFeeText\" : \"aeiou\",\\n        \"insuranceTerms\" : null,\\n        \"bargainFareStandbyText\" : \"aeiou\",\\n        \"bargainFairUpgradesText\" : \"aeiou\",\\n        \"flightRulesLCCImportantMessage\" : null,\\n        \"cancellationFeeLegalText\" : \"aeiou\",\\n        \"flightRulesLCCServiceLite\" : null,\\n        \"lccPartnerConfEmailsForSplitTicketText\" : [ \"aeiou\" ],\\n        \"manageMyFlightRulesLCCImportantMessage\" : null,\\n        \"internationalPassportNoteText\" : \"aeiou\",\\n        \"quebecResidentsIndemnityFundText\" : \"aeiou\",\\n        \"airlineLiabilityLimitations\" : null,\\n        \"travelingToUSText\" : \"aeiou\",\\n        \"lccPartnerConfEmailsText\" : [ \"aeiou\" ],\\n        \"airlineCheckInInstructionText\" : \"aeiou\",\\n        \"faresNotGuaranteedText\" : \"aeiou\",\\n        \"splitTicketingMessage\" : \"aeiou\",\\n        \"ticketingAgencyText\" : \"aeiou\",\\n        \"bookingFeeLegalText\" : \"aeiou\",\\n        \"feeChangeRefundIntroductionText\" : \"aeiou\",\\n        \"additionalAirlineFees\" : null,\\n        \"completePenaltyRules\" : {\\n          \"apiURL\" : \"aeiou\",\\n          \"text\" : \"aeiou\",\\n          \"textAndURL\" : \"aeiou\",\\n          \"url\" : \"aeiou\"\\n        },\\n        \"firstCharterImportantMessage\" : null,\\n        \"secondCharterImportantMessage\" : null,\\n        \"flightRulesLCCPrecheckinAdvice\" : null\\n      },\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"ticketingAirCarrierNames\" : [ \"aeiou\" ],\\n      \"confirmationNumbers\" : {\\n        \"airlineName\" : \"aeiou\",\\n        \"number\" : \"aeiou\"\\n      },\\n      \"updateFrequentFlyerPathURL\" : \"aeiou\",\\n      \"isInternational\" : true,\\n      \"orderNumber\" : \"aeiou\",\\n      \"isSplitTicket\" : true,\\n      \"fareType\" : \"aeiou\",\\n      \"legs\" : [ {\\n        \"duration\" : \"aeiou\",\\n        \"segments\" : [ {\\n          \"isSeatMapAvailable\" : true,\\n          \"arrivalType\" : \"aeiou\",\\n          \"flightIdForSeatMap\" : \"aeiou\",\\n          \"airlineName\" : \"aeiou\",\\n          \"confirmationNUmber\" : \"aeiou\",\\n          \"onTimePercentage\" : \"aeiou\",\\n          \"flightNumber\" : \"aeiou\",\\n          \"segmentChangeMessageLegacy\" : \"aeiou\",\\n          \"bookingCode\" : \"aeiou\",\\n          \"airSegmentStatusCode\" : \"aeiou\",\\n          \"checkinAirlineName\" : \"aeiou\",\\n          \"airlineCode\" : \"aeiou\",\\n          \"cabinCodeLocalized\" : \"aeiou\",\\n          \"cabinCode\" : \"aeiou\",\\n          \"airOriginDestinationReferenceIndex\" : 123,\\n          \"departureGate\" : \"aeiou\",\\n          \"arrivalLocation\" : null,\\n          \"transportationType\" : \"aeiou\",\\n          \"operatedByAirCarrierName\" : \"aeiou\",\\n          \"distanceUnits\" : \"aeiou\",\\n          \"status\" : \"aeiou\",\\n          \"arrivalGate\" : \"aeiou\",\\n          \"delays\" : {\\n            \"departureGateDelay\" : \"aeiou\",\\n            \"arrivalGateDelay\" : \"aeiou\"\\n          },\\n          \"departureTerminal\" : \"aeiou\",\\n          \"departureTime\" : null,\\n          \"departureLocation\" : {\\n            \"fullAddress\" : \"aeiou\",\\n            \"airportMetroCode\" : \"aeiou\",\\n            \"airportCode\" : \"aeiou\",\\n            \"name\" : \"aeiou\",\\n            \"countryCode\" : \"aeiou\",\\n            \"longName\" : \"aeiou\",\\n            \"countrySubdivisionCode\" : \"aeiou\",\\n            \"city\" : \"aeiou\"\\n          },\\n          \"providerCode\" : \"aeiou\",\\n          \"segmentChangeMessage\" : \"aeiou\",\\n          \"isHidden\" : true,\\n          \"duration\" : \"aeiou\",\\n          \"checkinAirlineCode\" : \"aeiou\",\\n          \"arrivalTerminal\" : \"aeiou\",\\n          \"arrivalTime\" : null,\\n          \"externalAirlineCode\" : \"aeiou\",\\n          \"layoverDuration\" : \"aeiou\",\\n          \"formattedDuration\" : \"aeiou\",\\n          \"equipmentDescription\" : \"aeiou\",\\n          \"departureType\" : \"aeiou\",\\n          \"equipmentCode\" : \"aeiou\",\\n          \"confirmationAirline\" : \"aeiou\"\\n        } ],\\n        \"airlineLogoURL\" : \"aeiou\",\\n        \"sharableFlightLegURL\" : \"aeiou\",\\n        \"state\" : \"aeiou\",\\n        \"numberOfStops\" : 123,\\n        \"type\" : \"aeiou\",\\n        \"segmentChangeMessage\" : \"aeiou\"\\n      } ],\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"bookingProvider\" : \"aeiou\"\\n    } ],\\n    \"startDateLocalized\" : \"aeiou\",\\n    \"cars\" : [ {\\n      \"bookingId\" : \"aeiou\",\\n      \"carVendor\" : {\\n        \"localPhoneNumber\" : \"aeiou\",\\n        \"longName\" : \"aeiou\",\\n        \"code\" : \"aeiou\",\\n        \"shortName\" : \"aeiou\"\\n      },\\n      \"confirmationNumber\" : \"aeiou\",\\n      \"pickupTime\" : null,\\n      \"carTypeAttributes\" : [ {\\n        \"wheelDriveTypeLocalized\" : \"aeiou\",\\n        \"airConditioningType\" : \"aeiou\",\\n        \"fuelType\" : \"aeiou\",\\n        \"transmissionType\" : \"aeiou\",\\n        \"wheelDriveType\" : \"aeiou\",\\n        \"transmissionTypeLocalized\" : \"aeiou\",\\n        \"airConditioningTypeLocalized\" : \"aeiou\",\\n        \"fuelTypeLocalized\" : \"aeiou\",\\n        \"vehicleTypeLocalized\" : \"aeiou\"\\n      } ],\\n      \"carType\" : \"aeiou\",\\n      \"passengers\" : [ {\\n        \"closingDateTime\" : null,\\n        \"openingDateTime\" : null\\n      } ],\\n      \"dropOffDateOpenHoursSummaryString\" : \"aeiou\",\\n      \"carCategory\" : \"aeiou\",\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"carTypeLocalized\" : \"aeiou\",\\n      \"carCategoryLocalized\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"reservationGuaranteePolicy\" : \"aeiou\",\\n      \"webGetCarCancelDetailPathURL\" : \"aeiou\",\\n      \"specialEquipmentRequests\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"rules\" : {\\n        \"ruleType\" : \"aeiou\",\\n        \"ruleName\" : \"aeiou\"\\n      },\\n      \"webCancelPathURL\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"dropOffDateOpenHours\" : [ null ],\\n      \"price\" : null,\\n      \"pickupLocation\" : {\\n        \"locationCode\" : true,\\n        \"postalCode\" : \"aeiou\",\\n        \"locationDescription\" : \"aeiou\",\\n        \"cityName\" : \"aeiou\",\\n        \"locationType\" : \"aeiou\",\\n        \"countryCode\" : \"aeiou\",\\n        \"airportInstructions\" : \"aeiou\",\\n        \"addressLine5\" : \"aeiou\",\\n        \"addressLine4\" : \"aeiou\",\\n        \"addressLine3\" : \"aeiou\",\\n        \"addressLine2\" : \"aeiou\",\\n        \"provinceStateName\" : \"aeiou\",\\n        \"addressLine1\" : \"aeiou\"\\n      },\\n      \"dropOffTime\" : null,\\n      \"carCategoryImageURL\" : \"aeiou\",\\n      \"specialEquipmentRequestCaveatText\" : \"aeiou\",\\n      \"webCarRulesPageURL\" : \"aeiou\",\\n      \"travelers\" : {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      },\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\",\\n      \"dropOffLocation\" : null,\\n      \"pickupDateOpenHoursSummaryString\" : \"aeiou\"\\n    } ],\\n    \"description\" : \"aeiou\",\\n    \"apiDetailsURL\" : \"aeiou\",\\n    \"isBookedUsingForeignCurrency\" : true,\\n    \"readTripError\" : \"\",\\n    \"activities\" : [ {\\n      \"vendorCustomerServiceOffices\" : [ {\\n        \"hoursOfOperation\" : [ {\\n          \"startTime\" : \"aeiou\",\\n          \"day\" : \"aeiou\",\\n          \"endTime\" : \"aeiou\"\\n        } ],\\n        \"phoneNumber\" : \"aeiou\",\\n        \"phoneCountryCode\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"hoursOfOperationText\" : \"aeiou\",\\n        \"emailAddress\" : \"aeiou\",\\n        \"phoneNumbers\" : [ {\\n          \"formatted\" : \"aeiou\",\\n          \"useText\" : \"aeiou\",\\n          \"costText\" : \"aeiou\"\\n        } ]\\n      } ],\\n      \"redemptionLocations\" : [ null ],\\n      \"activityDetailsURL\" : \"aeiou\",\\n      \"voucherPrintURL\" : \"aeiou\",\\n      \"endTime\" : null,\\n      \"startTime\" : null,\\n      \"supplierReferenceNumber\" : \"aeiou\",\\n      \"activityTitle\" : \"aeiou\",\\n      \"activityItemTitle\" : \"aeiou\",\\n      \"activityLocation\" : {\\n        \"name1\" : \"aeiou\",\\n        \"name2\" : \"aeiou\"\\n      },\\n      \"travelerCountDescription\" : \"aeiou\",\\n      \"sharableItemDetailURL\" : \"aeiou\",\\n      \"paymentModel\" : \"aeiou\",\\n      \"bookingDate\" : null,\\n      \"activityItemDescription\" : \"aeiou\",\\n      \"vendorName\" : \"aeiou\",\\n      \"activityDescription\" : \"aeiou\",\\n      \"uniqueID\" : \"aeiou\",\\n      \"termsAndConditions\" : {\\n        \"knowBeforeYouGo\" : \"aeiou\",\\n        \"cancellationAddendum\" : \"aeiou\",\\n        \"instructions\" : \"aeiou\",\\n        \"generalDisclaimer\" : \"aeiou\",\\n        \"terms\" : \"aeiou\",\\n        \"howToRedeem\" : \"aeiou\",\\n        \"quebecResidentsIndemnityFund\" : \"aeiou\"\\n      },\\n      \"vendorCustomerServiceEmail\" : \"aeiou\",\\n      \"bookingStatusMessage\" : \"aeiou\",\\n      \"vouchers\" : [ {\\n        \"supplierReferenceCode\" : \"aeiou\",\\n        \"securityCode\" : \"aeiou\",\\n        \"id\" : \"aeiou\",\\n        \"barcodeImageURL\" : \"aeiou\",\\n        \"validForRedemerTypeLocalized\" : \"aeiou\",\\n        \"validForRedemerTypeEnglish\" : \"aeiou\",\\n        \"barcodeNumber\" : \"aeiou\"\\n      } ],\\n      \"activityItemTitleEnglish\" : \"aeiou\",\\n      \"price\" : {\\n        \"pricePerCategory\" : \"aeiou\",\\n        \"localisedPriceAndPassengerCount\" : [ {\\n          \"localisedPassengerTypeAndCount\" : \"aeiou\",\\n          \"totalBasePriceForSorting\" : null,\\n          \"localisedPrice\" : \"aeiou\"\\n        } ]\\n      },\\n      \"webGetLXCancelDetailPathURL\" : \"aeiou\",\\n      \"travelers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"isRedeemer\" : true,\\n        \"gender\" : \"aeiou\",\\n        \"nationalityCountry\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      } ],\\n      \"bookingStatusText\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"trains\" : [ null ],\\n    \"customerSupport\" : {\\n      \"termsAndConditionsURL\" : \"aeiou\",\\n      \"customerSupportPhoneNumberInternational\" : \"aeiou\",\\n      \"customerSupportPhoneNumberDomestic\" : \"aeiou\",\\n      \"customerSupportPhoneInfo\" : [ \"aeiou\" ],\\n      \"customerSupportPhoneInfoForEmail\" : [ \"aeiou\" ],\\n      \"customerSupportPhoneNumberDomesticAfterHours\" : \"aeiou\",\\n      \"customerSupportURL\" : \"aeiou\"\\n    },\\n    \"timePeriod\" : \"aeiou\",\\n    \"packages\" : [ {\\n      \"startDate\" : \"aeiou\",\\n      \"isChangeable\" : true,\\n      \"uniqueID\" : \"aeiou\",\\n      \"endDate\" : \"aeiou\",\\n      \"endTime\" : null,\\n      \"hotels\" : null,\\n      \"startTime\" : null,\\n      \"price\" : {\\n        \"insurance\" : \"aeiou\",\\n        \"total\" : \"aeiou\",\\n        \"taxesAndFees\" : \"aeiou\",\\n        \"totalFormatted\" : \"aeiou\",\\n        \"obfee\" : \"aeiou\",\\n        \"savings\" : \"aeiou\",\\n        \"taxesAndFeesFormatted\" : \"aeiou\",\\n        \"currency\" : \"aeiou\",\\n        \"obfeeFormatted\" : \"aeiou\",\\n        \"subTotal\" : \"aeiou\",\\n        \"savingsFormatted\" : \"aeiou\",\\n        \"bookingFee\" : \"aeiou\",\\n        \"subTotalFormatted\" : \"aeiou\",\\n        \"bookingFeeFormatted\" : \"aeiou\",\\n        \"coupon\" : \"aeiou\",\\n        \"insuranceFormatted\" : \"aeiou\",\\n        \"couponFormatted\" : \"aeiou\"\\n      },\\n      \"flights\" : null,\\n      \"cars\" : null,\\n      \"orderNumber\" : \"aeiou\",\\n      \"isLegacy\" : true,\\n      \"orderLineNumber\" : \"aeiou\",\\n      \"activities\" : null,\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"tripUpdatedTime\" : null,\\n    \"externalCruises\" : [ null ],\\n    \"tripId\" : \"aeiou\",\\n    \"cruises\" : [ {\\n      \"departureDate\" : \"aeiou\",\\n      \"childPassengers\" : [ null ],\\n      \"promotions\" : [ {\\n        \"cruiseCardName\" : \"aeiou\",\\n        \"promotionId\" : 123,\\n        \"rank\" : 123,\\n        \"campaignId\" : 123,\\n        \"fullDescription\" : \"aeiou\",\\n        \"shortDescription\" : \"aeiou\",\\n        \"promotionCode\" : \"aeiou\",\\n        \"name\" : \"aeiou\",\\n        \"termsAndConditions\" : \"aeiou\"\\n      } ],\\n      \"pricingSummary\" : { },\\n      \"shipName\" : \"aeiou\",\\n      \"invoiceNumber\" : \"aeiou\",\\n      \"adultPassengers\" : [ {\\n        \"middleName\" : \"aeiou\",\\n        \"lastName\" : \"aeiou\",\\n        \"titleCode\" : \"aeiou\",\\n        \"passengerNumber\" : 123,\\n        \"gender\" : \"aeiou\",\\n        \"citizenship\" : \"aeiou\",\\n        \"birthDate\" : \"aeiou\",\\n        \"firstName\" : \"aeiou\"\\n      } ],\\n      \"paymentHistory\" : {\\n        \"finalPaymentDueDate\" : \"aeiou\",\\n        \"totalAmountReceivedInd\" : \"aeiou\",\\n        \"currency\" : \"aeiou\"\\n      },\\n      \"cabinDetails\" : \"aeiou\",\\n      \"returnDate\" : \"aeiou\",\\n      \"rulesAndRestrictionsLink\" : \"aeiou\",\\n      \"email\" : \"aeiou\",\\n      \"cruiseLineWebsiteLink\" : \"aeiou\",\\n      \"cruiseLineName\" : \"aeiou\",\\n      \"cruiseLineBkgConfNumber\" : \"aeiou\",\\n      \"customerCareNumber\" : \"aeiou\",\\n      \"bookingStatus\" : \"aeiou\"\\n    } ],\\n    \"rewards\" : {\\n      \"basePoints\" : 123,\\n      \"logoUrl\" : \"aeiou\",\\n      \"viewStatementURL\" : \"aeiou\",\\n      \"bonusPoints\" : [ {\\n        \"m_status\" : \"aeiou\",\\n        \"m_pointDescription\" : \"aeiou\",\\n        \"m_pointType\" : \"aeiou\"\\n      } ],\\n      \"totalPoints\" : 123\\n    },\\n    \"tripCreatedTime\" : null,\\n    \"webDetailsURL\" : \"aeiou\",\\n    \"updateTripNameDescPathURL\" : \"aeiou\",\\n    \"tripCacheUpdatedTime\" : null,\\n    \"bookingStatus\" : \"aeiou\"\\n  } ],\\n  \"apiVersion\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"message\" : \"aeiou\",\\n    \"changeErrorResponse\" : {\\n      \"priceChangeResponse\" : {\\n        \"newTotalPrice\" : null,\\n        \"priceIncreased\" : true,\\n        \"newTotal\" : \"aeiou\",\\n        \"previousTotalPrice\" : {\\n          \"currency\" : {\\n            \"defaultFractionDigits\" : 123,\\n            \"numericCode\" : 123,\\n            \"currencyCode\" : \"aeiou\",\\n            \"available\" : [ null ],\\n            \"instances\" : \"aeiou\"\\n          }\\n        },\\n        \"previousTotal\" : \"aeiou\",\\n        \"previousTotalFormatted\" : \"aeiou\",\\n        \"rateInfo\" : {\\n          \"total\" : \"aeiou\",\\n          \"drrRateDiscountDescription\" : \"aeiou\",\\n          \"averagePricePerDayFormatted\" : \"aeiou\",\\n          \"baseFormatted\" : \"aeiou\",\\n          \"primaryCurrencyCode\" : \"aeiou\",\\n          \"totalExpediaCollectAmountFormatted\" : \"aeiou\",\\n          \"adjustmentForCouponFormatted\" : \"aeiou\",\\n          \"averageTaxPerDay\" : \"aeiou\",\\n          \"hotelDeposits\" : \"aeiou\",\\n          \"adjustmentForAgentFormatted\" : \"aeiou\",\\n          \"subTotalAfterDepositsPOS\" : \"aeiou\",\\n          \"hotelDepositsAfterRefundFormatted\" : \"aeiou\",\\n          \"adjustmentForDRRRateDiscount\" : \"aeiou\",\\n          \"adjustmentForAgent\" : \"aeiou\",\\n          \"adjustmentForEmployeeDiscountFormatted\" : \"aeiou\",\\n          \"penalty\" : \"aeiou\",\\n          \"hotelDepositsAfterRefundPOS\" : \"aeiou\",\\n          \"subTotalBeforeCouponFormatted\" : \"aeiou\",\\n          \"hotelDepositsAfterRefund\" : \"aeiou\",\\n          \"baseWithAdjustmentForDRRRateDiscount\" : \"aeiou\",\\n          \"extraGuestCharges\" : \"aeiou\",\\n          \"taxesAndFeesFormatted\" : \"aeiou\",\\n          \"refundPOS\" : \"aeiou\",\\n          \"subTotalAfterDepositsFormatted\" : \"aeiou\",\\n          \"adjustmentForLoyalty\" : \"aeiou\",\\n          \"baseWithAdjustmentForDRRRateDiscountFormatted\" : \"aeiou\",\\n          \"adjustmentForEmployeeDiscount\" : \"aeiou\",\\n          \"comment\" : \"aeiou\",\\n          \"hotelDepositsPOS\" : \"aeiou\",\\n          \"subTotalAfterDeposits\" : \"aeiou\",\\n          \"taxesAndFees\" : \"aeiou\",\\n          \"isSameRateForAllNights\" : true,\\n          \"totalPOSFormatted\" : \"aeiou\",\\n          \"refundPOSFormatted\" : \"aeiou\",\\n          \"hasFees\" : true,\\n          \"priceDetailsPerDay\" : [ {\\n            \"amount\" : \"aeiou\",\\n            \"amountFormatted\" : \"aeiou\",\\n            \"primaryCurrencyCode\" : \"aeiou\",\\n            \"day\" : {\\n              \"raw\" : \"aeiou\",\\n              \"timeZoneOffsetSeconds\" : \"aeiou\",\\n              \"localizedShortDate\" : \"aeiou\",\\n              \"epochSeconds\" : \"aeiou\",\\n              \"localized\" : \"aeiou\"\\n            }\\n          } ],\\n          \"hotelDepositsAfterRefundPOSFormatted\" : \"aeiou\",\\n          \"mandatoryHotelFees\" : \"aeiou\",\\n          \"refund\" : \"aeiou\",\\n          \"hotelDepositsFormatted\" : \"aeiou\",\\n          \"averagePricePerDay\" : \"aeiou\",\\n          \"subTotalAfterDepositsPOSFormatted\" : \"aeiou\",\\n          \"expediaChangeFeeFormatted\" : \"aeiou\",\\n          \"hotelDepositsPOSFormatted\" : \"aeiou\",\\n          \"adjustmentForDRRRateDiscountFormatted\" : \"aeiou\",\\n          \"extraGuestChargesFormatted\" : \"aeiou\",\\n          \"taxStatus\" : \"aeiou\",\\n          \"adjustmentForLoyaltyFormatted\" : \"aeiou\",\\n          \"totalFormatted\" : \"aeiou\",\\n          \"adjustmentForCoupon\" : \"aeiou\",\\n          \"totalPOSCurrencyCode\" : \"aeiou\",\\n          \"expediaChangeFee\" : \"aeiou\",\\n          \"totalExpediaCollectAmount\" : \"aeiou\",\\n          \"averageTaxPerDayFormatted\" : \"aeiou\",\\n          \"totalPOS\" : \"aeiou\",\\n          \"subTotalBeforeCoupon\" : \"aeiou\",\\n          \"mandatoryHotelFeesFormatted\" : \"aeiou\",\\n          \"base\" : \"aeiou\",\\n          \"penaltyFormatted\" : \"aeiou\",\\n          \"refundFormatted\" : \"aeiou\"\\n        },\\n        \"productType\" : {\\n          \"m_productType\" : \"aeiou\",\\n          \"travelocityType\" : \"aeiou\"\\n        },\\n        \"newTotalFormatted\" : \"aeiou\"\\n      },\\n      \"userErrorMessage\" : {\\n        \"hasPageLevelError\" : true,\\n        \"hasModuleLevelError\" : true,\\n        \"moduleName\" : \"aeiou\",\\n        \"moduleLevelErrorMessage\" : \"aeiou\",\\n        \"errorKey\" : \"aeiou\",\\n        \"pageLevelErrorMessage\" : \"aeiou\"\\n      },\\n      \"serviceErrorCode\" : \"aeiou\"\\n    },\\n    \"errorType\" : \"aeiou\",\\n    \"errorCategory\" : \"aeiou\",\\n    \"errorCode\" : 123,\\n    \"fields\" : [ \"aeiou\" ],\\n    \"stackTrace\" : \"aeiou\"\\n  } ],\\n  \"responseType\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "trips-user-trips"
        } ],
        "classname" : "TripsApi"
      },
      "appDescription" : "Expedia Mobile API Documentation. <br><font color=\"blue\"> (Note: In case of authorization exception, just <a href=\"/static/mobile/swaggerui/#!/User/signin-user\">Sign-In</a>)</font>"
    }, {
      "modelPackage" : "",
      "classname" : "HotelsApi",
      "package" : "",
      "imports" : [ {
        "import" : "apiCreateTripResponse"
      }, {
        "import" : "jsonCreateTripResponse"
      }, {
        "import" : "packageCreateTripResponse"
      }, {
        "import" : "string"
      }, {
        "import" : "jsonHotelInformationResponse"
      }, {
        "import" : "jsonGetOfferResponse"
      }, {
        "import" : "integer"
      }, {
        "import" : "jsonGetProductResponse"
      }, {
        "import" : "jsonOpaqueGetProductResponse"
      }, {
        "import" : "jsonCancellationResponse"
      }, {
        "import" : "hotelSearchResponse"
      }, {
        "import" : "hotelAmbiguousResponse"
      }, {
        "import" : "hotelCancelEnquiryV2Response"
      }, {
        "import" : "hotelConfirmCancelResponse"
      }, {
        "import" : "hotelCancelEnquiryResponse"
      }, {
        "import" : "apiCheckoutResponseHotelResponse"
      }, {
        "import" : "apiFieldsResponse"
      } ],
      "version" : "0.0.1",
      "classVarName" : "hotels",
      "basePath" : "https://localhost/",
      "appName" : "Flights, Hotels, Packages, Trips, User API",
      "baseName" : "Hotels",
      "contextPath" : "/",
      "operations" : {
        "operation" : [ {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/m/trip/coupon",
          "operationId" : "packages-apply-coupon",
          "returnType" : "apiCreateTripResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "apiCreateTripResponse",
          "summary" : "Apply Coupon",
          "notes" : "Mobile API Packages Apply Coupon",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.name",
            "paramName" : "coupon.name",
            "dataType" : "String",
            "description" : "Coupon Name",
            "jsonSchema" : "{\n  \"name\" : \"coupon.name\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.code",
            "paramName" : "coupon.code",
            "dataType" : "String",
            "description" : "Coupon Code",
            "jsonSchema" : "{\n  \"name\" : \"coupon.code\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Code\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.name",
            "paramName" : "coupon.name",
            "dataType" : "String",
            "description" : "Coupon Name",
            "jsonSchema" : "{\n  \"name\" : \"coupon.name\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Name\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "coupon.code",
            "paramName" : "coupon.code",
            "dataType" : "String",
            "description" : "Coupon Code",
            "jsonSchema" : "{\n  \"name\" : \"coupon.code\",\n  \"in\" : \"formData\",\n  \"description\" : \"Coupon Code\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200-OK",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "jsonCreateTripResponse",
            "baseType" : "jsonCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Api",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "apiCreateTripResponse",
            "baseType" : "apiCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Package",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "packageCreateTripResponse",
            "baseType" : "packageCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/packageCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/packageCreateTripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "apiCreateTripResponse", "jsonCreateTripResponse", "packageCreateTripResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"tealeafTransactionId\" : \"aeiou\",\\n  \"rewardsPoints\" : true,\\n  \"couponDiscount\" : null,\\n  \"rules\" : {\\n    \"RuleToUrlMap\" : \"aeiou\",\\n    \"RuleToTextMap\" : \"aeiou\"\\n  },\\n  \"activityId\" : \"aeiou\",\\n  \"validFormsOfPayment\" : [ {\\n    \"fee\" : \"aeiou\",\\n    \"feeCurrencyCode\" : \"aeiou\",\\n    \"formattedFee\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"totalFarePriceWithFee\" : \"aeiou\"\\n  } ],\\n  \"selectedInsuranceProduct\" : null,\\n  \"passengerCategories\" : [ \"aeiou\" ],\\n  \"details\" : {\\n    \"changedPrice\" : null,\\n    \"priceChangeAmount\" : \"aeiou\",\\n    \"oldOffer\" : null,\\n    \"flightRules\" : [ {\\n      \"enrouteRefundAllowedAmount\" : \"aeiou\",\\n      \"enrouteChangePenaltyAmount\" : \"aeiou\",\\n      \"isChangeAllowed\" : true,\\n      \"refundPenaltyAmount\" : \"aeiou\",\\n      \"currencyCode\" : \"aeiou\",\\n      \"isRefundable\" : true,\\n      \"enrouteRefundAllowedPrice\" : null,\\n      \"refundPenaltyPrice\" : null,\\n      \"changePenaltyPrice\" : null,\\n      \"isEnrouteRefundAllowed\" : true,\\n      \"isEnrouteChangeAllowed\" : true,\\n      \"enrouteChangePenaltyPrice\" : null,\\n      \"summaryText\" : \"aeiou\",\\n      \"changePenaltyAmount\" : \"aeiou\"\\n    } ],\\n    \"productKey\" : \"aeiou\",\\n    \"obFeeTotalAmount\" : \"aeiou\",\\n    \"obFeePrice\" : null,\\n    \"legs\" : [ {\\n      \"segments\" : [ {\\n        \"arrivalTimeEpochSeconds\" : 123,\\n        \"airlineName\" : \"aeiou\",\\n        \"departureTimeRaw\" : \"aeiou\",\\n        \"operatingAirlineName\" : \"aeiou\",\\n        \"flightNumber\" : \"aeiou\",\\n        \"onTimePercentage\" : \"aeiou\",\\n        \"departureTimeEpochSeconds\" : 123,\\n        \"arrivalTimeRaw\" : \"aeiou\",\\n        \"stops\" : 123,\\n        \"arrivalTimeZoneOffsetSeconds\" : 123,\\n        \"distance\" : 123,\\n        \"airlineCode\" : \"aeiou\",\\n        \"sameFlightAsPreviousSegment\" : true,\\n        \"operatingAirlineCode\" : \"aeiou\",\\n        \"departureAirportCode\" : \"aeiou\",\\n        \"arrivalAirportLocation\" : \"aeiou\",\\n        \"departureAirportLocation\" : \"aeiou\",\\n        \"meal\" : \"aeiou\",\\n        \"arrivalAirportCode\" : \"aeiou\",\\n        \"distanceUnits\" : \"aeiou\",\\n        \"departureTime\" : \"aeiou\",\\n        \"providerCode\" : \"aeiou\",\\n        \"duration\" : \"aeiou\",\\n        \"arrivalTime\" : \"aeiou\",\\n        \"equipmentDescription\" : \"aeiou\",\\n        \"departureTimeZoneOffsetSeconds\" : 123,\\n        \"equipmentCode\" : \"aeiou\"\\n      } ],\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"legId\" : \"aeiou\"\\n    } ],\\n    \"offer\" : {\\n      \"fareName\" : \"aeiou\",\\n      \"baseFare\" : \"aeiou\",\\n      \"hasBagFee\" : true,\\n      \"mayChargeOBFees\" : true,\\n      \"taxesPrice\" : null,\\n      \"numberOfTickets\" : 123,\\n      \"legIds\" : [ \"aeiou\" ],\\n      \"currency\" : \"aeiou\",\\n      \"seatsRemaining\" : 123,\\n      \"mobileShoppingKey\" : \"aeiou\",\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"averageTotalPricePerTicket\" : null,\\n      \"feesPrice\" : null,\\n      \"fareNameLink\" : \"aeiou\",\\n      \"fees\" : \"aeiou\",\\n      \"segmentAttributes\" : [ [ {\\n        \"cabinCode\" : \"aeiou\",\\n        \"bookingCode\" : \"aeiou\"\\n      } ] ],\\n      \"totalFarePrice\" : null,\\n      \"baseFarePrice\" : null,\\n      \"showFees\" : true,\\n      \"pricePerPassengerCategory\" : [ {\\n        \"passengerCategory\" : \"aeiou\",\\n        \"taxesPrice\" : null,\\n        \"basePrice\" : null,\\n        \"totalPrice\" : null\\n      } ],\\n      \"totalFare\" : \"aeiou\",\\n      \"productKey\" : \"aeiou\",\\n      \"hasNoBagFee\" : true,\\n      \"isInternational\" : true,\\n      \"fareType\" : \"aeiou\",\\n      \"taxes\" : \"aeiou\"\\n    }\\n  },\\n  \"isCustomerTitleRequired\" : \"aeiou\",\\n  \"availableInsuranceProducts\" : [ {\\n    \"selectedInsuranceAddOn\" : null,\\n    \"totalPriceWithoutAddOns\" : null,\\n    \"description\" : \"aeiou\",\\n    \"availableInsuranceAddOns\" : [ {\\n      \"price\" : null,\\n      \"insuranceTypeId\" : 123,\\n      \"description\" : \"aeiou\",\\n      \"displayPriceType\" : \"aeiou\",\\n      \"name\" : \"aeiou\",\\n      \"termsUrl\" : \"aeiou\",\\n      \"displayPrice\" : null\\n    } ],\\n    \"displayPriceType\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"termsUrl\" : \"aeiou\",\\n    \"policyNumber\" : \"aeiou\",\\n    \"displayPrice\" : null,\\n    \"totalPrice\" : null,\\n    \"productId\" : \"aeiou\"\\n  } ],\\n  \"coupon\" : {\\n    \"name\" : \"aeiou\",\\n    \"instanceId\" : 123,\\n    \"code\" : \"aeiou\"\\n  },\\n  \"expediaRewards\" : {\\n    \"totalPointsToEarn\" : 123,\\n    \"isActiveRewardsMember\" : true,\\n    \"rewardsMembershipTierName\" : \"aeiou\"\\n  },\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  },\\n  \"totalPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "packages-apply-coupon"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/api/m/trip/remove/coupon",
          "operationId" : "packages-remove-coupon",
          "returnType" : "apiCreateTripResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "apiCreateTripResponse",
          "summary" : "Remove Coupon",
          "notes" : "Mobile API Packages Remove Coupon",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The tripId we are going to apply the coupon to.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The tripId we are going to apply the coupon to.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200-OK",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "jsonCreateTripResponse",
            "baseType" : "jsonCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Api",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "apiCreateTripResponse",
            "baseType" : "apiCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCreateTripResponse\"\n  }\n}"
          }, {
            "code" : "200-Package",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "packageCreateTripResponse",
            "baseType" : "packageCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/packageCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/packageCreateTripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "apiCreateTripResponse", "jsonCreateTripResponse", "packageCreateTripResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"tealeafTransactionId\" : \"aeiou\",\\n  \"rewardsPoints\" : true,\\n  \"couponDiscount\" : null,\\n  \"rules\" : {\\n    \"RuleToUrlMap\" : \"aeiou\",\\n    \"RuleToTextMap\" : \"aeiou\"\\n  },\\n  \"activityId\" : \"aeiou\",\\n  \"validFormsOfPayment\" : [ {\\n    \"fee\" : \"aeiou\",\\n    \"feeCurrencyCode\" : \"aeiou\",\\n    \"formattedFee\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"totalFarePriceWithFee\" : \"aeiou\"\\n  } ],\\n  \"selectedInsuranceProduct\" : null,\\n  \"passengerCategories\" : [ \"aeiou\" ],\\n  \"details\" : {\\n    \"changedPrice\" : null,\\n    \"priceChangeAmount\" : \"aeiou\",\\n    \"oldOffer\" : null,\\n    \"flightRules\" : [ {\\n      \"enrouteRefundAllowedAmount\" : \"aeiou\",\\n      \"enrouteChangePenaltyAmount\" : \"aeiou\",\\n      \"isChangeAllowed\" : true,\\n      \"refundPenaltyAmount\" : \"aeiou\",\\n      \"currencyCode\" : \"aeiou\",\\n      \"isRefundable\" : true,\\n      \"enrouteRefundAllowedPrice\" : null,\\n      \"refundPenaltyPrice\" : null,\\n      \"changePenaltyPrice\" : null,\\n      \"isEnrouteRefundAllowed\" : true,\\n      \"isEnrouteChangeAllowed\" : true,\\n      \"enrouteChangePenaltyPrice\" : null,\\n      \"summaryText\" : \"aeiou\",\\n      \"changePenaltyAmount\" : \"aeiou\"\\n    } ],\\n    \"productKey\" : \"aeiou\",\\n    \"obFeeTotalAmount\" : \"aeiou\",\\n    \"obFeePrice\" : null,\\n    \"legs\" : [ {\\n      \"segments\" : [ {\\n        \"arrivalTimeEpochSeconds\" : 123,\\n        \"airlineName\" : \"aeiou\",\\n        \"departureTimeRaw\" : \"aeiou\",\\n        \"operatingAirlineName\" : \"aeiou\",\\n        \"flightNumber\" : \"aeiou\",\\n        \"onTimePercentage\" : \"aeiou\",\\n        \"departureTimeEpochSeconds\" : 123,\\n        \"arrivalTimeRaw\" : \"aeiou\",\\n        \"stops\" : 123,\\n        \"arrivalTimeZoneOffsetSeconds\" : 123,\\n        \"distance\" : 123,\\n        \"airlineCode\" : \"aeiou\",\\n        \"sameFlightAsPreviousSegment\" : true,\\n        \"operatingAirlineCode\" : \"aeiou\",\\n        \"departureAirportCode\" : \"aeiou\",\\n        \"arrivalAirportLocation\" : \"aeiou\",\\n        \"departureAirportLocation\" : \"aeiou\",\\n        \"meal\" : \"aeiou\",\\n        \"arrivalAirportCode\" : \"aeiou\",\\n        \"distanceUnits\" : \"aeiou\",\\n        \"departureTime\" : \"aeiou\",\\n        \"providerCode\" : \"aeiou\",\\n        \"duration\" : \"aeiou\",\\n        \"arrivalTime\" : \"aeiou\",\\n        \"equipmentDescription\" : \"aeiou\",\\n        \"departureTimeZoneOffsetSeconds\" : 123,\\n        \"equipmentCode\" : \"aeiou\"\\n      } ],\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"legId\" : \"aeiou\"\\n    } ],\\n    \"offer\" : {\\n      \"fareName\" : \"aeiou\",\\n      \"baseFare\" : \"aeiou\",\\n      \"hasBagFee\" : true,\\n      \"mayChargeOBFees\" : true,\\n      \"taxesPrice\" : null,\\n      \"numberOfTickets\" : 123,\\n      \"legIds\" : [ \"aeiou\" ],\\n      \"currency\" : \"aeiou\",\\n      \"seatsRemaining\" : 123,\\n      \"mobileShoppingKey\" : \"aeiou\",\\n      \"baggageFeesUrl\" : \"aeiou\",\\n      \"averageTotalPricePerTicket\" : null,\\n      \"feesPrice\" : null,\\n      \"fareNameLink\" : \"aeiou\",\\n      \"fees\" : \"aeiou\",\\n      \"segmentAttributes\" : [ [ {\\n        \"cabinCode\" : \"aeiou\",\\n        \"bookingCode\" : \"aeiou\"\\n      } ] ],\\n      \"totalFarePrice\" : null,\\n      \"baseFarePrice\" : null,\\n      \"showFees\" : true,\\n      \"pricePerPassengerCategory\" : [ {\\n        \"passengerCategory\" : \"aeiou\",\\n        \"taxesPrice\" : null,\\n        \"basePrice\" : null,\\n        \"totalPrice\" : null\\n      } ],\\n      \"totalFare\" : \"aeiou\",\\n      \"productKey\" : \"aeiou\",\\n      \"hasNoBagFee\" : true,\\n      \"isInternational\" : true,\\n      \"fareType\" : \"aeiou\",\\n      \"taxes\" : \"aeiou\"\\n    }\\n  },\\n  \"isCustomerTitleRequired\" : \"aeiou\",\\n  \"availableInsuranceProducts\" : [ {\\n    \"selectedInsuranceAddOn\" : null,\\n    \"totalPriceWithoutAddOns\" : null,\\n    \"description\" : \"aeiou\",\\n    \"availableInsuranceAddOns\" : [ {\\n      \"price\" : null,\\n      \"insuranceTypeId\" : 123,\\n      \"description\" : \"aeiou\",\\n      \"displayPriceType\" : \"aeiou\",\\n      \"name\" : \"aeiou\",\\n      \"termsUrl\" : \"aeiou\",\\n      \"displayPrice\" : null\\n    } ],\\n    \"displayPriceType\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"termsUrl\" : \"aeiou\",\\n    \"policyNumber\" : \"aeiou\",\\n    \"displayPrice\" : null,\\n    \"totalPrice\" : null,\\n    \"productId\" : \"aeiou\"\\n  } ],\\n  \"coupon\" : {\\n    \"name\" : \"aeiou\",\\n    \"instanceId\" : 123,\\n    \"code\" : \"aeiou\"\\n  },\\n  \"expediaRewards\" : {\\n    \"totalPointsToEarn\" : 123,\\n    \"isActiveRewardsMember\" : true,\\n    \"rewardsMembershipTierName\" : \"aeiou\"\\n  },\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  },\\n  \"totalPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "packages-remove-coupon"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/hotel/info",
          "operationId" : "hotels-info",
          "returnType" : "jsonHotelInformationResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "jsonHotelInformationResponse",
          "summary" : "Info",
          "notes" : "Hotel Information",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "baseName" : "hotelId",
            "paramName" : "hotelId",
            "dataType" : "String",
            "description" : "Hotel Id usually 5 digits. It is obtained by calling /m/api/hotel/search",
            "jsonSchema" : "{\n  \"name\" : \"hotelId\",\n  \"in\" : \"query\",\n  \"description\" : \"Hotel Id usually 5 digits. It is obtained by calling /m/api/hotel/search\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "baseName" : "hotelId",
            "paramName" : "hotelId",
            "dataType" : "String",
            "description" : "Hotel Id usually 5 digits. It is obtained by calling /m/api/hotel/search",
            "jsonSchema" : "{\n  \"name\" : \"hotelId\",\n  \"in\" : \"query\",\n  \"description\" : \"Hotel Id usually 5 digits. It is obtained by calling /m/api/hotel/search\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "jsonHotelInformationResponse",
            "baseType" : "jsonHotelInformationResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonHotelInformationResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonHotelInformationResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "jsonHotelInformationResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"localizedHotelName\" : \"aeiou\",\\n  \"locationId\" : \"aeiou\",\\n  \"hotelAmenities\" : [ {\\n    \"id\" : \"aeiou\",\\n    \"description\" : \"aeiou\"\\n  } ],\\n  \"regions\" : [ {\\n    \"id\" : 123,\\n    \"description\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"type\" : \"aeiou\"\\n  } ],\\n  \"hotelId\" : \"aeiou\",\\n  \"hotelAmenitiesText\" : null,\\n  \"hotelStateProvince\" : \"aeiou\",\\n  \"hotelAddress\" : \"aeiou\",\\n  \"nonLocalizedHotelName\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"hotelGuestRating\" : \"aeiou\",\\n  \"hotelRenovationText\" : {\\n    \"content\" : \"aeiou\",\\n    \"name\" : \"aeiou\"\\n  },\\n  \"hotelName\" : \"aeiou\",\\n  \"totalRecommendations\" : \"aeiou\",\\n  \"longDescription\" : \"aeiou\",\\n  \"longitude\" : \"aeiou\",\\n  \"firstHotelOverview\" : \"aeiou\",\\n  \"allowedToDisplayRatingAsStars\" : \"aeiou\",\\n  \"hotelFeesText\" : null,\\n  \"telesalesNumber\" : \"aeiou\",\\n  \"hotelStarRating\" : \"aeiou\",\\n  \"locationDescription\" : \"aeiou\",\\n  \"isVipAccess\" : true,\\n  \"hotelStarRatingCssClassName\" : \"aeiou\",\\n  \"totalReviews\" : \"aeiou\",\\n  \"hotelMandatoryFeesText\" : null,\\n  \"hotelCity\" : \"aeiou\",\\n  \"photos\" : [ {\\n    \"displayText\" : \"aeiou\",\\n    \"thumbnailUrl\" : \"aeiou\",\\n    \"featured\" : true,\\n    \"url\" : \"aeiou\"\\n  } ],\\n  \"deskTopOverrideNumber\" : true,\\n  \"hotelPoliciesText\" : null,\\n  \"hotelCountry\" : \"aeiou\",\\n  \"hotelOverviewText\" : null,\\n  \"latitude\" : \"aeiou\",\\n  \"percentRecommended\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "hotels-info"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/hotel/offers",
          "operationId" : "hotels-offers",
          "returnType" : "jsonGetOfferResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "jsonGetOfferResponse",
          "summary" : "Get Offers",
          "notes" : "Mobile API Hotels Offers",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "hotelId",
            "paramName" : "hotelId",
            "dataType" : "String",
            "description" : "Usually 5-digit hotel ID obtained by calling /m/api/hotel/search",
            "jsonSchema" : "{\n  \"name\" : \"hotelId\",\n  \"in\" : \"query\",\n  \"description\" : \"Usually 5-digit hotel ID obtained by calling /m/api/hotel/search\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "priceType",
            "paramName" : "priceType",
            "dataType" : "String",
            "description" : "Price Type, can only be TOTAL_PRICE or BASE_PRICE_ONLY",
            "jsonSchema" : "{\n  \"name\" : \"priceType\",\n  \"in\" : \"query\",\n  \"description\" : \"Price Type, can only be TOTAL_PRICE or BASE_PRICE_ONLY\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"TOTAL_PRICE\", \"BASE_PRICE_ONLY\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "useCacheForAirAttach",
            "paramName" : "useCacheForAirAttach",
            "dataType" : "Boolean",
            "description" : "[Optional] If this flag is set then the hotel offers (on a successful offers call) and the search fields will be cached. There is a possiblilty that theywill be used later in the create trip calls",
            "jsonSchema" : "{\n  \"name\" : \"useCacheForAirAttach\",\n  \"in\" : \"query\",\n  \"description\" : \"[Optional] If this flag is set then the hotel offers (on a successful offers call) and the search fields will be cached. There is a possiblilty that theywill be used later in the create trip calls\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sourceType",
            "paramName" : "sourceType",
            "dataType" : "String",
            "description" : "Source Type, for example mobilweb or mobileapp",
            "jsonSchema" : "{\n  \"name\" : \"sourceType\",\n  \"in\" : \"query\",\n  \"description\" : \"Source Type, for example mobilweb or mobileapp\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkInDate",
            "paramName" : "checkInDate",
            "dataType" : "String",
            "description" : "Checkin Date",
            "jsonSchema" : "{\n  \"name\" : \"checkInDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Checkin Date\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkOutDate",
            "paramName" : "checkOutDate",
            "dataType" : "String",
            "description" : "Checkout Date",
            "jsonSchema" : "{\n  \"name\" : \"checkOutDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Checkout Date\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "room1",
            "paramName" : "room1",
            "dataType" : "String",
            "description" : "[Optional if room field is specified] The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.",
            "jsonSchema" : "{\n  \"name\" : \"room1\",\n  \"in\" : \"query\",\n  \"description\" : \"[Optional if room field is specified] The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "room",
            "paramName" : "room",
            "dataType" : "String",
            "description" : "[Optional if room1 field is specified] The occupants of the each room. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.",
            "jsonSchema" : "{\n  \"name\" : \"room\",\n  \"in\" : \"query\",\n  \"description\" : \"[Optional if room1 field is specified] The occupants of the each room. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "hotelId",
            "paramName" : "hotelId",
            "dataType" : "String",
            "description" : "Usually 5-digit hotel ID obtained by calling /m/api/hotel/search",
            "jsonSchema" : "{\n  \"name\" : \"hotelId\",\n  \"in\" : \"query\",\n  \"description\" : \"Usually 5-digit hotel ID obtained by calling /m/api/hotel/search\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "priceType",
            "paramName" : "priceType",
            "dataType" : "String",
            "description" : "Price Type, can only be TOTAL_PRICE or BASE_PRICE_ONLY",
            "jsonSchema" : "{\n  \"name\" : \"priceType\",\n  \"in\" : \"query\",\n  \"description\" : \"Price Type, can only be TOTAL_PRICE or BASE_PRICE_ONLY\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"TOTAL_PRICE\", \"BASE_PRICE_ONLY\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "useCacheForAirAttach",
            "paramName" : "useCacheForAirAttach",
            "dataType" : "Boolean",
            "description" : "[Optional] If this flag is set then the hotel offers (on a successful offers call) and the search fields will be cached. There is a possiblilty that theywill be used later in the create trip calls",
            "jsonSchema" : "{\n  \"name\" : \"useCacheForAirAttach\",\n  \"in\" : \"query\",\n  \"description\" : \"[Optional] If this flag is set then the hotel offers (on a successful offers call) and the search fields will be cached. There is a possiblilty that theywill be used later in the create trip calls\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sourceType",
            "paramName" : "sourceType",
            "dataType" : "String",
            "description" : "Source Type, for example mobilweb or mobileapp",
            "jsonSchema" : "{\n  \"name\" : \"sourceType\",\n  \"in\" : \"query\",\n  \"description\" : \"Source Type, for example mobilweb or mobileapp\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkInDate",
            "paramName" : "checkInDate",
            "dataType" : "String",
            "description" : "Checkin Date",
            "jsonSchema" : "{\n  \"name\" : \"checkInDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Checkin Date\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkOutDate",
            "paramName" : "checkOutDate",
            "dataType" : "String",
            "description" : "Checkout Date",
            "jsonSchema" : "{\n  \"name\" : \"checkOutDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Checkout Date\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "room1",
            "paramName" : "room1",
            "dataType" : "String",
            "description" : "[Optional if room field is specified] The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.",
            "jsonSchema" : "{\n  \"name\" : \"room1\",\n  \"in\" : \"query\",\n  \"description\" : \"[Optional if room field is specified] The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "room",
            "paramName" : "room",
            "dataType" : "String",
            "description" : "[Optional if room1 field is specified] The occupants of the each room. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.",
            "jsonSchema" : "{\n  \"name\" : \"room\",\n  \"in\" : \"query\",\n  \"description\" : \"[Optional if room1 field is specified] The occupants of the each room. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200",
            "message" : "Successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "jsonGetOfferResponse",
            "baseType" : "jsonGetOfferResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonGetOfferResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"Successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonGetOfferResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "jsonGetOfferResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"airAttachExpirationTimeSeconds\" : \"aeiou\",\\n  \"numberOfNights\" : \"aeiou\",\\n  \"localizedHotelName\" : \"aeiou\",\\n  \"locationId\" : \"aeiou\",\\n  \"hotelAmenities\" : [ null ],\\n  \"regions\" : [ {\\n    \"id\" : 123,\\n    \"description\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"type\" : \"aeiou\"\\n  } ],\\n  \"hotelId\" : \"aeiou\",\\n  \"hotelAmenitiesText\" : null,\\n  \"hotelStateProvince\" : \"aeiou\",\\n  \"nonLocalizedHotelName\" : \"aeiou\",\\n  \"hotelAddress\" : \"aeiou\",\\n  \"hotelRenovationText\" : {\\n    \"content\" : \"aeiou\",\\n    \"name\" : \"aeiou\"\\n  },\\n  \"hotelGuestRating\" : \"aeiou\",\\n  \"errors\" : {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  },\\n  \"totalRecommendations\" : \"aeiou\",\\n  \"hotelRoomResponse\" : [ {\\n    \"roomTypeCode\" : \"aeiou\",\\n    \"cancelPolicyInfoList\" : [ {\\n      \"amount\" : \"aeiou\",\\n      \"currencyCode\" : \"aeiou\",\\n      \"percent\" : \"aeiou\",\\n      \"timeZoneDescription\" : \"aeiou\",\\n      \"cancelTime\" : \"aeiou\",\\n      \"startWindowHours\" : \"aeiou\",\\n      \"versionID\" : \"aeiou\",\\n      \"nightCount\" : \"aeiou\"\\n    } ],\\n    \"rateOccupancyPerRoom\" : \"aeiou\",\\n    \"currentAllotment\" : \"aeiou\",\\n    \"roomTypeDescription\" : \"aeiou\",\\n    \"isSameDayDRR\" : true,\\n    \"roomThumbnailUrl\" : \"aeiou\",\\n    \"guaranteeRequired\" : true,\\n    \"rateChange\" : true,\\n    \"rateDescription\" : \"aeiou\",\\n    \"freeCancellationWindowDate\" : \"aeiou\",\\n    \"quotedOccupancy\" : \"aeiou\",\\n    \"valueAdds\" : [ {\\n      \"id\" : \"aeiou\",\\n      \"description\" : \"aeiou\"\\n    } ],\\n    \"promoDescription\" : \"aeiou\",\\n    \"hasFreeCancellation\" : true,\\n    \"promoId\" : \"aeiou\",\\n    \"taxRate\" : \"aeiou\",\\n    \"roomLongDescription\" : \"aeiou\",\\n    \"bedTypes\" : [ {\\n      \"id\" : \"aeiou\",\\n      \"description\" : \"aeiou\"\\n    } ],\\n    \"minGuestAge\" : \"aeiou\",\\n    \"ratePlanCode\" : \"aeiou\",\\n    \"cancellationPolicy\" : \"aeiou\",\\n    \"nonRefundable\" : true,\\n    \"supplierType\" : \"aeiou\",\\n    \"smokingPreferences\" : \"\",\\n    \"depositRequired\" : true,\\n    \"isPayLater\" : true,\\n    \"otherInformation\" : \"aeiou\",\\n    \"productKey\" : \"aeiou\",\\n    \"payLaterOffer\" : null,\\n    \"policy\" : \"aeiou\",\\n    \"immediateChargeRequired\" : true,\\n    \"rateInfo\" : [ {\\n      \"chargeableRateInfo\" : {\\n        \"roomTypeCode\" : \"aeiou\",\\n        \"total\" : \"aeiou\",\\n        \"surcharges\" : [ {\\n          \"amount\" : \"aeiou\",\\n          \"type\" : \"aeiou\"\\n        } ],\\n        \"strikethroughPriceWithTaxesAndFeesToShowUsers\" : \"aeiou\",\\n        \"surchargesForEntireStay\" : [ null ],\\n        \"depositAmountToShowUsers\" : \"aeiou\",\\n        \"nightlyRatesSize\" : \"aeiou\",\\n        \"surchargeTotal\" : \"aeiou\",\\n        \"depositAmountExact\" : \"aeiou\",\\n        \"surchargeTotalForEntireStay\" : \"aeiou\",\\n        \"priceAdjustments\" : [ {\\n          \"amount\" : \"aeiou\",\\n          \"type\" : \"aeiou\",\\n          \"formattedAmount\" : \"aeiou\"\\n        } ],\\n        \"averageRate\" : \"aeiou\",\\n        \"taxStatusType\" : \"aeiou\",\\n        \"dailyMandatoryFee\" : \"aeiou\",\\n        \"maxNightlyRate\" : \"aeiou\",\\n        \"totalMandatoryFees\" : \"aeiou\",\\n        \"nightlyRatesPerRoom\" : [ {\\n          \"rate\" : \"aeiou\",\\n          \"promo\" : true,\\n          \"baseRate\" : \"aeiou\"\\n        } ],\\n        \"priceRemainingAfterDepositToShowUsers\" : \"aeiou\",\\n        \"nightlyRateTotal\" : \"aeiou\",\\n        \"showResortFeeMessage\" : true,\\n        \"resortFeeInclusion\" : true,\\n        \"currencyCode\" : \"aeiou\",\\n        \"priceRemainingAfterDepositExact\" : \"aeiou\",\\n        \"userPriceType\" : \"aeiou\",\\n        \"priceToShowUsers\" : \"aeiou\",\\n        \"checkoutPriceType\" : \"aeiou\",\\n        \"ratePlanCode\" : \"aeiou\",\\n        \"currencySymbol\" : \"aeiou\",\\n        \"averageBaseRate\" : \"aeiou\",\\n        \"strikethroughPriceToShowUsers\" : \"aeiou\",\\n        \"airAttached\" : true,\\n        \"totalPriceWithMandatoryFees\" : \"aeiou\"\\n      },\\n      \"rateChange\" : true,\\n      \"promo\" : true,\\n      \"convertedRateInfo\" : null,\\n      \"priceBreakdown\" : true\\n    } ],\\n    \"isDiscountRestrictedToCurrentSourceType\" : true\\n  } ],\\n  \"hotelName\" : \"aeiou\",\\n  \"longDescription\" : \"aeiou\",\\n  \"longitude\" : \"aeiou\",\\n  \"firstHotelOverview\" : \"aeiou\",\\n  \"checkInInstructions\" : \"aeiou\",\\n  \"numberOfRoomsRequested\" : 123,\\n  \"hotelTagline\" : \"aeiou\",\\n  \"allowedToDisplayRatingAsStars\" : \"aeiou\",\\n  \"hotelFeesText\" : null,\\n  \"telesalesNumber\" : \"aeiou\",\\n  \"signedMapUrl\" : \"aeiou\",\\n  \"hotelStarRating\" : \"aeiou\",\\n  \"checkInDate\" : \"aeiou\",\\n  \"checkOutDate\" : \"aeiou\",\\n  \"locationDescription\" : \"aeiou\",\\n  \"isVipAccess\" : true,\\n  \"hotelStarRatingCssClassName\" : \"aeiou\",\\n  \"totalReviews\" : \"aeiou\",\\n  \"hotelMandatoryFeesText\" : null,\\n  \"hotelCity\" : \"aeiou\",\\n  \"photos\" : [ {\\n    \"displayText\" : \"aeiou\",\\n    \"thumbnailUrl\" : \"aeiou\",\\n    \"featured\" : true,\\n    \"url\" : \"aeiou\"\\n  } ],\\n  \"deskTopOverrideNumber\" : true,\\n  \"tripAdvisorRating\" : \"aeiou\",\\n  \"shortDescription\" : \"aeiou\",\\n  \"hotelPoliciesText\" : null,\\n  \"hotelCountry\" : \"aeiou\",\\n  \"hotelOverviewText\" : null,\\n  \"latitude\" : \"aeiou\",\\n  \"percentRecommended\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "hotels-offers"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/hotel/product",
          "operationId" : "hotels-product",
          "returnType" : "jsonGetProductResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "jsonGetProductResponse",
          "summary" : "Product",
          "notes" : "Hotel Product",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "sourceType",
            "paramName" : "sourceType",
            "dataType" : "String",
            "description" : "Source type for the request. mobileapp OR mobileweb. Leave blank for others.",
            "jsonSchema" : "{\n  \"name\" : \"sourceType\",\n  \"in\" : \"query\",\n  \"description\" : \"Source type for the request. mobileapp OR mobileweb. Leave blank for others.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product key of the offer, obtained by calling /m/api/hotel/offers",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"query\",\n  \"description\" : \"The product key of the offer, obtained by calling /m/api/hotel/offers\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "roomOccupants[0].numberOfAdultGuests",
            "paramName" : "roomOccupants[0].numberOfAdultGuests",
            "dataType" : "Integer",
            "description" : "Number of adults staying in this room (default: 1)",
            "jsonSchema" : "{\n  \"name\" : \"roomOccupants[0].numberOfAdultGuests\",\n  \"in\" : \"query\",\n  \"description\" : \"Number of adults staying in this room (default: 1)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "roomOccupants[0].childGuestAge",
            "paramName" : "roomOccupants[0].childGuestAge",
            "dataType" : "Integer",
            "description" : "represents the age of a single child guest staying in this room. You should specify the age of all children staying in this room. Valid values are 0-17 (0 for an infant under the age of one year). For a single room with 1 adult and 3 child guests the ages of 1, 3 and 8 years",
            "jsonSchema" : "{\n  \"name\" : \"roomOccupants[0].childGuestAge\",\n  \"in\" : \"query\",\n  \"description\" : \"represents the age of a single child guest staying in this room. You should specify the age of all children staying in this room. Valid values are 0-17 (0 for an infant under the age of one year). For a single room with 1 adult and 3 child guests the ages of 1, 3 and 8 years\",\n  \"required\" : false,\n  \"type\" : \"integer\",\n  \"items\" : {\n    \"type\" : \"integer\",\n    \"format\" : \"int32\"\n  }\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "opaqueProduct",
            "paramName" : "opaqueProduct",
            "dataType" : "Boolean",
            "description" : "Set to true if the product key is an opaque hotel product key.",
            "jsonSchema" : "{\n  \"name\" : \"opaqueProduct\",\n  \"in\" : \"query\",\n  \"description\" : \"Set to true if the product key is an opaque hotel product key.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "sourceType",
            "paramName" : "sourceType",
            "dataType" : "String",
            "description" : "Source type for the request. mobileapp OR mobileweb. Leave blank for others.",
            "jsonSchema" : "{\n  \"name\" : \"sourceType\",\n  \"in\" : \"query\",\n  \"description\" : \"Source type for the request. mobileapp OR mobileweb. Leave blank for others.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product key of the offer, obtained by calling /m/api/hotel/offers",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"query\",\n  \"description\" : \"The product key of the offer, obtained by calling /m/api/hotel/offers\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "roomOccupants[0].numberOfAdultGuests",
            "paramName" : "roomOccupants[0].numberOfAdultGuests",
            "dataType" : "Integer",
            "description" : "Number of adults staying in this room (default: 1)",
            "jsonSchema" : "{\n  \"name\" : \"roomOccupants[0].numberOfAdultGuests\",\n  \"in\" : \"query\",\n  \"description\" : \"Number of adults staying in this room (default: 1)\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "roomOccupants[0].childGuestAge",
            "paramName" : "roomOccupants[0].childGuestAge",
            "dataType" : "Integer",
            "description" : "represents the age of a single child guest staying in this room. You should specify the age of all children staying in this room. Valid values are 0-17 (0 for an infant under the age of one year). For a single room with 1 adult and 3 child guests the ages of 1, 3 and 8 years",
            "jsonSchema" : "{\n  \"name\" : \"roomOccupants[0].childGuestAge\",\n  \"in\" : \"query\",\n  \"description\" : \"represents the age of a single child guest staying in this room. You should specify the age of all children staying in this room. Valid values are 0-17 (0 for an infant under the age of one year). For a single room with 1 adult and 3 child guests the ages of 1, 3 and 8 years\",\n  \"required\" : false,\n  \"type\" : \"integer\",\n  \"items\" : {\n    \"type\" : \"integer\",\n    \"format\" : \"int32\"\n  }\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "opaqueProduct",
            "paramName" : "opaqueProduct",
            "dataType" : "Boolean",
            "description" : "Set to true if the product key is an opaque hotel product key.",
            "jsonSchema" : "{\n  \"name\" : \"opaqueProduct\",\n  \"in\" : \"query\",\n  \"description\" : \"Set to true if the product key is an opaque hotel product key.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200-OK",
            "message" : "successful operation",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "jsonGetProductResponse",
            "baseType" : "jsonGetProductResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonGetProductResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonGetProductResponse\"\n  }\n}"
          }, {
            "code" : "200-Opaque",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "jsonOpaqueGetProductResponse",
            "baseType" : "jsonOpaqueGetProductResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonOpaqueGetProductResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonOpaqueGetProductResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "integer", "string", "jsonGetProductResponse", "jsonOpaqueGetProductResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"numberOfNights\" : \"aeiou\",\\n  \"localizedHotelName\" : \"aeiou\",\\n  \"hotelStarRating\" : \"aeiou\",\\n  \"checkInDate\" : \"aeiou\",\\n  \"checkOutDate\" : \"aeiou\",\\n  \"tealeafTransactionId\" : \"aeiou\",\\n  \"isVipAccess\" : true,\\n  \"adultCount\" : 123,\\n  \"numberOfRooms\" : \"aeiou\",\\n  \"bigImageUrl\" : \"aeiou\",\\n  \"hotelId\" : \"aeiou\",\\n  \"hotelCity\" : \"aeiou\",\\n  \"supplierType\" : \"aeiou\",\\n  \"hotelStateProvince\" : \"aeiou\",\\n  \"largeThumbnailUrl\" : \"aeiou\",\\n  \"hotelAddress\" : \"aeiou\",\\n  \"nonLocalizedHotelName\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"hotelRoomResponse\" : {\\n    \"roomTypeCode\" : \"aeiou\",\\n    \"cancelPolicyInfoList\" : [ {\\n      \"amount\" : \"aeiou\",\\n      \"currencyCode\" : \"aeiou\",\\n      \"percent\" : \"aeiou\",\\n      \"timeZoneDescription\" : \"aeiou\",\\n      \"cancelTime\" : \"aeiou\",\\n      \"startWindowHours\" : \"aeiou\",\\n      \"versionID\" : \"aeiou\",\\n      \"nightCount\" : \"aeiou\"\\n    } ],\\n    \"rateOccupancyPerRoom\" : \"aeiou\",\\n    \"currentAllotment\" : \"aeiou\",\\n    \"roomTypeDescription\" : \"aeiou\",\\n    \"isSameDayDRR\" : true,\\n    \"roomThumbnailUrl\" : \"aeiou\",\\n    \"guaranteeRequired\" : true,\\n    \"rateChange\" : true,\\n    \"rateDescription\" : \"aeiou\",\\n    \"freeCancellationWindowDate\" : \"aeiou\",\\n    \"quotedOccupancy\" : \"aeiou\",\\n    \"valueAdds\" : [ {\\n      \"id\" : \"aeiou\",\\n      \"description\" : \"aeiou\"\\n    } ],\\n    \"promoDescription\" : \"aeiou\",\\n    \"hasFreeCancellation\" : true,\\n    \"promoId\" : \"aeiou\",\\n    \"taxRate\" : \"aeiou\",\\n    \"roomLongDescription\" : \"aeiou\",\\n    \"bedTypes\" : [ {\\n      \"id\" : \"aeiou\",\\n      \"description\" : \"aeiou\"\\n    } ],\\n    \"minGuestAge\" : \"aeiou\",\\n    \"ratePlanCode\" : \"aeiou\",\\n    \"cancellationPolicy\" : \"aeiou\",\\n    \"nonRefundable\" : true,\\n    \"supplierType\" : \"aeiou\",\\n    \"smokingPreferences\" : \"\",\\n    \"depositRequired\" : true,\\n    \"isPayLater\" : true,\\n    \"otherInformation\" : \"aeiou\",\\n    \"productKey\" : \"aeiou\",\\n    \"payLaterOffer\" : null,\\n    \"policy\" : \"aeiou\",\\n    \"immediateChargeRequired\" : true,\\n    \"rateInfo\" : [ {\\n      \"chargeableRateInfo\" : {\\n        \"roomTypeCode\" : \"aeiou\",\\n        \"total\" : \"aeiou\",\\n        \"surcharges\" : [ {\\n          \"amount\" : \"aeiou\",\\n          \"type\" : \"aeiou\"\\n        } ],\\n        \"strikethroughPriceWithTaxesAndFeesToShowUsers\" : \"aeiou\",\\n        \"surchargesForEntireStay\" : [ null ],\\n        \"depositAmountToShowUsers\" : \"aeiou\",\\n        \"nightlyRatesSize\" : \"aeiou\",\\n        \"surchargeTotal\" : \"aeiou\",\\n        \"depositAmountExact\" : \"aeiou\",\\n        \"surchargeTotalForEntireStay\" : \"aeiou\",\\n        \"priceAdjustments\" : [ {\\n          \"amount\" : \"aeiou\",\\n          \"type\" : \"aeiou\",\\n          \"formattedAmount\" : \"aeiou\"\\n        } ],\\n        \"averageRate\" : \"aeiou\",\\n        \"taxStatusType\" : \"aeiou\",\\n        \"dailyMandatoryFee\" : \"aeiou\",\\n        \"maxNightlyRate\" : \"aeiou\",\\n        \"totalMandatoryFees\" : \"aeiou\",\\n        \"nightlyRatesPerRoom\" : [ {\\n          \"rate\" : \"aeiou\",\\n          \"promo\" : true,\\n          \"baseRate\" : \"aeiou\"\\n        } ],\\n        \"priceRemainingAfterDepositToShowUsers\" : \"aeiou\",\\n        \"nightlyRateTotal\" : \"aeiou\",\\n        \"showResortFeeMessage\" : true,\\n        \"resortFeeInclusion\" : true,\\n        \"currencyCode\" : \"aeiou\",\\n        \"priceRemainingAfterDepositExact\" : \"aeiou\",\\n        \"userPriceType\" : \"aeiou\",\\n        \"priceToShowUsers\" : \"aeiou\",\\n        \"checkoutPriceType\" : \"aeiou\",\\n        \"ratePlanCode\" : \"aeiou\",\\n        \"currencySymbol\" : \"aeiou\",\\n        \"averageBaseRate\" : \"aeiou\",\\n        \"strikethroughPriceToShowUsers\" : \"aeiou\",\\n        \"airAttached\" : true,\\n        \"totalPriceWithMandatoryFees\" : \"aeiou\"\\n      },\\n      \"rateChange\" : true,\\n      \"promo\" : true,\\n      \"convertedRateInfo\" : null,\\n      \"priceBreakdown\" : true\\n    } ],\\n    \"isDiscountRestrictedToCurrentSourceType\" : true\\n  },\\n  \"hotelName\" : \"aeiou\",\\n  \"hotelCountry\" : \"aeiou\",\\n  \"thumbnailUrl\" : \"aeiou\",\\n  \"accessibilityAmenities\" : \"\",\\n  \"longitude\" : \"aeiou\",\\n  \"latitude\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "hotels-product"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/hotel/rooms/cancel",
          "operationId" : "hotels-room-cancel",
          "returnType" : "jsonCancellationResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "jsonCancellationResponse",
          "summary" : "Cancel Room",
          "notes" : "Hotel Room Cancellation",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "orderLineGUIDs",
            "paramName" : "orderLineGUIDs",
            "dataType" : "List",
            "description" : "The list of order line guids. Each corresponding to a room number",
            "baseType" : "String",
            "jsonSchema" : "{\n  \"name\" : \"orderLineGUIDs\",\n  \"in\" : \"formData\",\n  \"description\" : \"The list of order line guids. Each corresponding to a room number\",\n  \"required\" : true,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "orderNumber",
            "paramName" : "orderNumber",
            "dataType" : "String",
            "description" : "The order number ( returned by OMS ) associated with the trip",
            "jsonSchema" : "{\n  \"name\" : \"orderNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The order number ( returned by OMS ) associated with the trip\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "orderLineGUIDs",
            "paramName" : "orderLineGUIDs",
            "dataType" : "List",
            "description" : "The list of order line guids. Each corresponding to a room number",
            "baseType" : "String",
            "jsonSchema" : "{\n  \"name\" : \"orderLineGUIDs\",\n  \"in\" : \"formData\",\n  \"description\" : \"The list of order line guids. Each corresponding to a room number\",\n  \"required\" : true,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "orderNumber",
            "paramName" : "orderNumber",
            "dataType" : "String",
            "description" : "The order number ( returned by OMS ) associated with the trip",
            "jsonSchema" : "{\n  \"name\" : \"orderNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The order number ( returned by OMS ) associated with the trip\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "jsonCancellationResponse",
            "baseType" : "jsonCancellationResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonCancellationResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonCancellationResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "jsonCancellationResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"guidToResponseMap\" : [ {\\n    \"error\" : {\\n      \"activityId\" : \"aeiou\",\\n      \"diagnosticId\" : \"aeiou\",\\n      \"errorInfo\" : \"aeiou\",\\n      \"diagnosticFullText\" : \"aeiou\",\\n      \"errorCode\" : \"aeiou\"\\n    },\\n    \"penaltyPrice\" : null,\\n    \"refundPrice\" : {\\n      \"amount\" : \"aeiou\",\\n      \"formattedWholePrice\" : \"aeiou\",\\n      \"formattedPrice\" : \"aeiou\"\\n    }\\n  } ]\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "hotels-room-cancel"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/hotel/search",
          "operationId" : "hotels-search",
          "returnType" : "hotelAmbiguousResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "hotelAmbiguousResponse",
          "summary" : "Search",
          "notes" : "Mobile API Hotels Search  There are multiple successful responses for this operation. See the examples below for more information.",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "This field is optional and will default to the the POS default PriceType.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"query\",\n  \"description\" : \"This field is optional and will default to the the POS default PriceType.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"BASE_PRICE_ONLY\", \"TOTAL_PRICE\", \"DEFAULT_POS_PRICE_TYPE_WITH_FEES\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "city",
            "paramName" : "city",
            "dataType" : "String",
            "description" : "A string to identify the city to search.",
            "jsonSchema" : "{\n  \"name\" : \"city\",\n  \"in\" : \"query\",\n  \"description\" : \"A string to identify the city to search.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "regionId",
            "paramName" : "regionId",
            "dataType" : "String",
            "description" : "An Expedia region ID to limit the search to a particular region.",
            "jsonSchema" : "{\n  \"name\" : \"regionId\",\n  \"in\" : \"query\",\n  \"description\" : \"An Expedia region ID to limit the search to a particular region.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "latitude",
            "paramName" : "latitude",
            "dataType" : "String",
            "description" : "Latitude to be used in combination with longitude for a coordinate search.",
            "jsonSchema" : "{\n  \"name\" : \"latitude\",\n  \"in\" : \"query\",\n  \"description\" : \"Latitude to be used in combination with longitude for a coordinate search.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "longitude",
            "paramName" : "longitude",
            "dataType" : "String",
            "description" : "Longitude to be used in combination with latitude for a coordinate search.",
            "jsonSchema" : "{\n  \"name\" : \"longitude\",\n  \"in\" : \"query\",\n  \"description\" : \"Longitude to be used in combination with latitude for a coordinate search.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "correlationId",
            "paramName" : "correlationId",
            "dataType" : "String",
            "description" : "Define a correlation between a hotel search and a flight search.",
            "jsonSchema" : "{\n  \"name\" : \"correlationId\",\n  \"in\" : \"query\",\n  \"description\" : \"Define a correlation between a hotel search and a flight search.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterUnavailable",
            "paramName" : "filterUnavailable",
            "dataType" : "Boolean",
            "description" : "Unavailable hotels will be removed from the response if set to true. The default is false if not specified.",
            "jsonSchema" : "{\n  \"name\" : \"filterUnavailable\",\n  \"in\" : \"query\",\n  \"description\" : \"Unavailable hotels will be removed from the response if set to true. The default is false if not specified.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterHotelName",
            "paramName" : "filterHotelName",
            "dataType" : "String",
            "description" : "Hotel name used to filter the search results.",
            "jsonSchema" : "{\n  \"name\" : \"filterHotelName\",\n  \"in\" : \"query\",\n  \"description\" : \"Hotel name used to filter the search results.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterInventoryType",
            "paramName" : "filterInventoryType",
            "dataType" : "String",
            "description" : "A parameter to filter by inventory type. Only supports MERCHANT right now, all other values are just ignored.",
            "jsonSchema" : "{\n  \"name\" : \"filterInventoryType\",\n  \"in\" : \"query\",\n  \"description\" : \"A parameter to filter by inventory type. Only supports MERCHANT right now, all other values are just ignored.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterPrice",
            "paramName" : "filterPrice",
            "dataType" : "String",
            "description" : "Used to filter by price, make sure it matches filterPriceBuckets if counts are desired. Must contain 1 or 2 numbers. 1 number means there is no max price, min price must be greater than or equal to 0.",
            "jsonSchema" : "{\n  \"name\" : \"filterPrice\",\n  \"in\" : \"query\",\n  \"description\" : \"Used to filter by price, make sure it matches filterPriceBuckets if counts are desired. Must contain 1 or 2 numbers. 1 number means there is no max price, min price must be greater than or equal to 0.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterPriceBuckets",
            "paramName" : "filterPriceBuckets",
            "dataType" : "String",
            "description" : "Used to define custom price filter buckets. if not provided then the default price filter buckets for the POS will be used. No need to define 0, each value in price bucket is minimum of price range. Note that price range can be decimal format but buckets must be integer. If supplied 4 values are required as input.",
            "jsonSchema" : "{\n  \"name\" : \"filterPriceBuckets\",\n  \"in\" : \"query\",\n  \"description\" : \"Used to define custom price filter buckets. if not provided then the default price filter buckets for the POS will be used. No need to define 0, each value in price bucket is minimum of price range. Note that price range can be decimal format but buckets must be integer. If supplied 4 values are required as input.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterStarRatings",
            "paramName" : "filterStarRatings",
            "dataType" : "String",
            "description" : "Used to filter by star rating. Must be in increments of 5 and separated by commas(minStarRating=0 and maxStarRating=50). Ex. '0,5,10' means 0, 0.5 and 1 star hotels",
            "jsonSchema" : "{\n  \"name\" : \"filterStarRatings\",\n  \"in\" : \"query\",\n  \"description\" : \"Used to filter by star rating. Must be in increments of 5 and separated by commas(minStarRating=0 and maxStarRating=50). Ex. '0,5,10' means 0, 0.5 and 1 star hotels\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterAmenities",
            "paramName" : "filterAmenities",
            "dataType" : "String",
            "description" : "Used to filter by amenities. Must be as a list of amenity ids separated by commas. Please note that there is no way at this time to validate the ids are actually valid.",
            "jsonSchema" : "{\n  \"name\" : \"filterAmenities\",\n  \"in\" : \"query\",\n  \"description\" : \"Used to filter by amenities. Must be as a list of amenity ids separated by commas. Please note that there is no way at this time to validate the ids are actually valid.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sortOrder",
            "paramName" : "sortOrder",
            "dataType" : "Boolean",
            "description" : "Order to sort the list of hotels by Expedia picks, star rating, price and guest rating.",
            "jsonSchema" : "{\n  \"name\" : \"sortOrder\",\n  \"in\" : \"query\",\n  \"description\" : \"Order to sort the list of hotels by Expedia picks, star rating, price and guest rating.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sortOrderFilter",
            "paramName" : "sortOrderFilter",
            "dataType" : "String",
            "description" : "A post process sort order filter used to apply post sort order filtering to the sorted (sortOrder) search results.",
            "jsonSchema" : "{\n  \"name\" : \"sortOrderFilter\",\n  \"in\" : \"query\",\n  \"description\" : \"A post process sort order filter used to apply post sort order filtering to the sorted (sortOrder) search results.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "resultsPerPage",
            "paramName" : "resultsPerPage",
            "dataType" : "Integer",
            "description" : "The number of hotels to return per page. A value of -1 (negative one) is reserved to mean Return ALL matching hotels. The default value is 25 (twenty five).",
            "jsonSchema" : "{\n  \"name\" : \"resultsPerPage\",\n  \"in\" : \"query\",\n  \"description\" : \"The number of hotels to return per page. A value of -1 (negative one) is reserved to mean Return ALL matching hotels. The default value is 25 (twenty five).\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "pageIndex",
            "paramName" : "pageIndex",
            "dataType" : "Integer",
            "description" : "The zero-based index of the page that you are requesting. The default value is 0 (zero).",
            "jsonSchema" : "{\n  \"name\" : \"pageIndex\",\n  \"in\" : \"query\",\n  \"description\" : \"The zero-based index of the page that you are requesting. The default value is 0 (zero).\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "forceV2Search",
            "paramName" : "forceV2Search",
            "dataType" : "Boolean",
            "description" : "A flag to indicate whether the api should do a domain V2 search for the mobile app.",
            "jsonSchema" : "{\n  \"name\" : \"forceV2Search\",\n  \"in\" : \"query\",\n  \"description\" : \"A flag to indicate whether the api should do a domain V2 search for the mobile app.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "returnOpaqueHotels",
            "paramName" : "returnOpaqueHotels",
            "dataType" : "Boolean",
            "description" : "Return Opaque hotels if set to true.",
            "jsonSchema" : "{\n  \"name\" : \"returnOpaqueHotels\",\n  \"in\" : \"query\",\n  \"description\" : \"Return Opaque hotels if set to true.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "hgid",
            "paramName" : "hgid",
            "dataType" : "String",
            "description" : "If the hotel group ID parameter (hgid) is present it will take precedence over city, location or lat/long",
            "jsonSchema" : "{\n  \"name\" : \"hgid\",\n  \"in\" : \"query\",\n  \"description\" : \"If the hotel group ID parameter (hgid) is present it will take precedence over city, location or lat/long\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "airAttachQualificationCode",
            "paramName" : "airAttachQualificationCode",
            "dataType" : "String",
            "description" : "Qualification code needed to get air attached hotel prices",
            "jsonSchema" : "{\n  \"name\" : \"airAttachQualificationCode\",\n  \"in\" : \"query\",\n  \"description\" : \"Qualification code needed to get air attached hotel prices\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "enableSponsoredListings",
            "paramName" : "enableSponsoredListings",
            "dataType" : "Boolean",
            "description" : "Used to check for sponsoredListing. By default the value would be false",
            "jsonSchema" : "{\n  \"name\" : \"enableSponsoredListings\",\n  \"in\" : \"query\",\n  \"description\" : \"Used to check for sponsoredListing. By default the value would be false\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sourceType",
            "paramName" : "sourceType",
            "dataType" : "String",
            "description" : "Source type for the request",
            "jsonSchema" : "{\n  \"name\" : \"sourceType\",\n  \"in\" : \"query\",\n  \"description\" : \"Source type for the request\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkInDate",
            "paramName" : "checkInDate",
            "dataType" : "String",
            "description" : "Check in date in ISO format (yyyy-MM-dd)",
            "jsonSchema" : "{\n  \"name\" : \"checkInDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Check in date in ISO format (yyyy-MM-dd)\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkOutDate",
            "paramName" : "checkOutDate",
            "dataType" : "String",
            "description" : "Check out date in ISO format (yyyy-MM-dd)",
            "jsonSchema" : "{\n  \"name\" : \"checkOutDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Check out date in ISO format (yyyy-MM-dd)\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "room1",
            "paramName" : "room1",
            "dataType" : "String",
            "description" : "if room field is specified] The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.",
            "jsonSchema" : "{\n  \"name\" : \"room1\",\n  \"in\" : \"query\",\n  \"description\" : \"if room field is specified] The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "room",
            "paramName" : "room",
            "dataType" : "String",
            "description" : "if room1 field is specified] The occupants of the each room. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.",
            "jsonSchema" : "{\n  \"name\" : \"room\",\n  \"in\" : \"query\",\n  \"description\" : \"if room1 field is specified] The occupants of the each room. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "This field is optional and will default to the the POS default PriceType.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"query\",\n  \"description\" : \"This field is optional and will default to the the POS default PriceType.\",\n  \"required\" : false,\n  \"type\" : \"string\",\n  \"enum\" : [ \"BASE_PRICE_ONLY\", \"TOTAL_PRICE\", \"DEFAULT_POS_PRICE_TYPE_WITH_FEES\" ]\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "city",
            "paramName" : "city",
            "dataType" : "String",
            "description" : "A string to identify the city to search.",
            "jsonSchema" : "{\n  \"name\" : \"city\",\n  \"in\" : \"query\",\n  \"description\" : \"A string to identify the city to search.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "regionId",
            "paramName" : "regionId",
            "dataType" : "String",
            "description" : "An Expedia region ID to limit the search to a particular region.",
            "jsonSchema" : "{\n  \"name\" : \"regionId\",\n  \"in\" : \"query\",\n  \"description\" : \"An Expedia region ID to limit the search to a particular region.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "latitude",
            "paramName" : "latitude",
            "dataType" : "String",
            "description" : "Latitude to be used in combination with longitude for a coordinate search.",
            "jsonSchema" : "{\n  \"name\" : \"latitude\",\n  \"in\" : \"query\",\n  \"description\" : \"Latitude to be used in combination with longitude for a coordinate search.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "longitude",
            "paramName" : "longitude",
            "dataType" : "String",
            "description" : "Longitude to be used in combination with latitude for a coordinate search.",
            "jsonSchema" : "{\n  \"name\" : \"longitude\",\n  \"in\" : \"query\",\n  \"description\" : \"Longitude to be used in combination with latitude for a coordinate search.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "correlationId",
            "paramName" : "correlationId",
            "dataType" : "String",
            "description" : "Define a correlation between a hotel search and a flight search.",
            "jsonSchema" : "{\n  \"name\" : \"correlationId\",\n  \"in\" : \"query\",\n  \"description\" : \"Define a correlation between a hotel search and a flight search.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterUnavailable",
            "paramName" : "filterUnavailable",
            "dataType" : "Boolean",
            "description" : "Unavailable hotels will be removed from the response if set to true. The default is false if not specified.",
            "jsonSchema" : "{\n  \"name\" : \"filterUnavailable\",\n  \"in\" : \"query\",\n  \"description\" : \"Unavailable hotels will be removed from the response if set to true. The default is false if not specified.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterHotelName",
            "paramName" : "filterHotelName",
            "dataType" : "String",
            "description" : "Hotel name used to filter the search results.",
            "jsonSchema" : "{\n  \"name\" : \"filterHotelName\",\n  \"in\" : \"query\",\n  \"description\" : \"Hotel name used to filter the search results.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterInventoryType",
            "paramName" : "filterInventoryType",
            "dataType" : "String",
            "description" : "A parameter to filter by inventory type. Only supports MERCHANT right now, all other values are just ignored.",
            "jsonSchema" : "{\n  \"name\" : \"filterInventoryType\",\n  \"in\" : \"query\",\n  \"description\" : \"A parameter to filter by inventory type. Only supports MERCHANT right now, all other values are just ignored.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterPrice",
            "paramName" : "filterPrice",
            "dataType" : "String",
            "description" : "Used to filter by price, make sure it matches filterPriceBuckets if counts are desired. Must contain 1 or 2 numbers. 1 number means there is no max price, min price must be greater than or equal to 0.",
            "jsonSchema" : "{\n  \"name\" : \"filterPrice\",\n  \"in\" : \"query\",\n  \"description\" : \"Used to filter by price, make sure it matches filterPriceBuckets if counts are desired. Must contain 1 or 2 numbers. 1 number means there is no max price, min price must be greater than or equal to 0.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterPriceBuckets",
            "paramName" : "filterPriceBuckets",
            "dataType" : "String",
            "description" : "Used to define custom price filter buckets. if not provided then the default price filter buckets for the POS will be used. No need to define 0, each value in price bucket is minimum of price range. Note that price range can be decimal format but buckets must be integer. If supplied 4 values are required as input.",
            "jsonSchema" : "{\n  \"name\" : \"filterPriceBuckets\",\n  \"in\" : \"query\",\n  \"description\" : \"Used to define custom price filter buckets. if not provided then the default price filter buckets for the POS will be used. No need to define 0, each value in price bucket is minimum of price range. Note that price range can be decimal format but buckets must be integer. If supplied 4 values are required as input.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterStarRatings",
            "paramName" : "filterStarRatings",
            "dataType" : "String",
            "description" : "Used to filter by star rating. Must be in increments of 5 and separated by commas(minStarRating=0 and maxStarRating=50). Ex. '0,5,10' means 0, 0.5 and 1 star hotels",
            "jsonSchema" : "{\n  \"name\" : \"filterStarRatings\",\n  \"in\" : \"query\",\n  \"description\" : \"Used to filter by star rating. Must be in increments of 5 and separated by commas(minStarRating=0 and maxStarRating=50). Ex. '0,5,10' means 0, 0.5 and 1 star hotels\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "filterAmenities",
            "paramName" : "filterAmenities",
            "dataType" : "String",
            "description" : "Used to filter by amenities. Must be as a list of amenity ids separated by commas. Please note that there is no way at this time to validate the ids are actually valid.",
            "jsonSchema" : "{\n  \"name\" : \"filterAmenities\",\n  \"in\" : \"query\",\n  \"description\" : \"Used to filter by amenities. Must be as a list of amenity ids separated by commas. Please note that there is no way at this time to validate the ids are actually valid.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sortOrder",
            "paramName" : "sortOrder",
            "dataType" : "Boolean",
            "description" : "Order to sort the list of hotels by Expedia picks, star rating, price and guest rating.",
            "jsonSchema" : "{\n  \"name\" : \"sortOrder\",\n  \"in\" : \"query\",\n  \"description\" : \"Order to sort the list of hotels by Expedia picks, star rating, price and guest rating.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sortOrderFilter",
            "paramName" : "sortOrderFilter",
            "dataType" : "String",
            "description" : "A post process sort order filter used to apply post sort order filtering to the sorted (sortOrder) search results.",
            "jsonSchema" : "{\n  \"name\" : \"sortOrderFilter\",\n  \"in\" : \"query\",\n  \"description\" : \"A post process sort order filter used to apply post sort order filtering to the sorted (sortOrder) search results.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "resultsPerPage",
            "paramName" : "resultsPerPage",
            "dataType" : "Integer",
            "description" : "The number of hotels to return per page. A value of -1 (negative one) is reserved to mean Return ALL matching hotels. The default value is 25 (twenty five).",
            "jsonSchema" : "{\n  \"name\" : \"resultsPerPage\",\n  \"in\" : \"query\",\n  \"description\" : \"The number of hotels to return per page. A value of -1 (negative one) is reserved to mean Return ALL matching hotels. The default value is 25 (twenty five).\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "pageIndex",
            "paramName" : "pageIndex",
            "dataType" : "Integer",
            "description" : "The zero-based index of the page that you are requesting. The default value is 0 (zero).",
            "jsonSchema" : "{\n  \"name\" : \"pageIndex\",\n  \"in\" : \"query\",\n  \"description\" : \"The zero-based index of the page that you are requesting. The default value is 0 (zero).\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "forceV2Search",
            "paramName" : "forceV2Search",
            "dataType" : "Boolean",
            "description" : "A flag to indicate whether the api should do a domain V2 search for the mobile app.",
            "jsonSchema" : "{\n  \"name\" : \"forceV2Search\",\n  \"in\" : \"query\",\n  \"description\" : \"A flag to indicate whether the api should do a domain V2 search for the mobile app.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "returnOpaqueHotels",
            "paramName" : "returnOpaqueHotels",
            "dataType" : "Boolean",
            "description" : "Return Opaque hotels if set to true.",
            "jsonSchema" : "{\n  \"name\" : \"returnOpaqueHotels\",\n  \"in\" : \"query\",\n  \"description\" : \"Return Opaque hotels if set to true.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "hgid",
            "paramName" : "hgid",
            "dataType" : "String",
            "description" : "If the hotel group ID parameter (hgid) is present it will take precedence over city, location or lat/long",
            "jsonSchema" : "{\n  \"name\" : \"hgid\",\n  \"in\" : \"query\",\n  \"description\" : \"If the hotel group ID parameter (hgid) is present it will take precedence over city, location or lat/long\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "airAttachQualificationCode",
            "paramName" : "airAttachQualificationCode",
            "dataType" : "String",
            "description" : "Qualification code needed to get air attached hotel prices",
            "jsonSchema" : "{\n  \"name\" : \"airAttachQualificationCode\",\n  \"in\" : \"query\",\n  \"description\" : \"Qualification code needed to get air attached hotel prices\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "enableSponsoredListings",
            "paramName" : "enableSponsoredListings",
            "dataType" : "Boolean",
            "description" : "Used to check for sponsoredListing. By default the value would be false",
            "jsonSchema" : "{\n  \"name\" : \"enableSponsoredListings\",\n  \"in\" : \"query\",\n  \"description\" : \"Used to check for sponsoredListing. By default the value would be false\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sourceType",
            "paramName" : "sourceType",
            "dataType" : "String",
            "description" : "Source type for the request",
            "jsonSchema" : "{\n  \"name\" : \"sourceType\",\n  \"in\" : \"query\",\n  \"description\" : \"Source type for the request\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkInDate",
            "paramName" : "checkInDate",
            "dataType" : "String",
            "description" : "Check in date in ISO format (yyyy-MM-dd)",
            "jsonSchema" : "{\n  \"name\" : \"checkInDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Check in date in ISO format (yyyy-MM-dd)\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkOutDate",
            "paramName" : "checkOutDate",
            "dataType" : "String",
            "description" : "Check out date in ISO format (yyyy-MM-dd)",
            "jsonSchema" : "{\n  \"name\" : \"checkOutDate\",\n  \"in\" : \"query\",\n  \"description\" : \"Check out date in ISO format (yyyy-MM-dd)\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "room1",
            "paramName" : "room1",
            "dataType" : "String",
            "description" : "if room field is specified] The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.",
            "jsonSchema" : "{\n  \"name\" : \"room1\",\n  \"in\" : \"query\",\n  \"description\" : \"if room field is specified] The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "room",
            "paramName" : "room",
            "dataType" : "String",
            "description" : "if room1 field is specified] The occupants of the each room. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.",
            "jsonSchema" : "{\n  \"name\" : \"room\",\n  \"in\" : \"query\",\n  \"description\" : \"if room1 field is specified] The occupants of the each room. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200-OK",
            "hasMore" : true,
            "headers" : [ ],
            "dataType" : "hotelSearchResponse",
            "baseType" : "hotelSearchResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/hotelSearchResponse"
            },
            "jsonSchema" : "{\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/hotelSearchResponse\"\n  }\n}"
          }, {
            "code" : "200-Ambiguous",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "hotelAmbiguousResponse",
            "baseType" : "hotelAmbiguousResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/hotelAmbiguousResponse"
            },
            "jsonSchema" : "{\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/hotelAmbiguousResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "hotelSearchResponse", "hotelAmbiguousResponse", "integer", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"cityList\" : [ {\\n    \"cityUrl\" : \"aeiou\",\\n    \"cityName\" : \"aeiou\",\\n    \"regionId\" : \"aeiou\"\\n  } ],\\n  \"numberOfMatches\" : 123\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "hotels-search"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/hotel/trip/V2/cancelEnquiry",
          "operationId" : "hotels-cancel-enquiry",
          "returnType" : "hotelCancelEnquiryV2Response",
          "httpMethod" : "GET",
          "returnBaseType" : "hotelCancelEnquiryV2Response",
          "summary" : "Cancel Enquiry",
          "notes" : "Cancel Enquiry for hotel, pass in itinerary id, email address of trip owner.",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "orderLineGUIDs",
            "paramName" : "orderLineGUIDs",
            "dataType" : "List",
            "description" : "Comma separated order line guids. If provided only details regarding the provided guids are returned.",
            "baseType" : "String",
            "jsonSchema" : "{\n  \"name\" : \"orderLineGUIDs\",\n  \"in\" : \"query\",\n  \"description\" : \"Comma separated order line guids. If provided only details regarding the provided guids are returned.\",\n  \"required\" : false,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "itineraryId",
            "paramName" : "itineraryId",
            "dataType" : "Integer",
            "description" : "Itinerary containing trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout",
            "jsonSchema" : "{\n  \"name\" : \"itineraryId\",\n  \"in\" : \"query\",\n  \"description\" : \"Itinerary containing trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "emailAddress",
            "paramName" : "emailAddress",
            "dataType" : "String",
            "description" : "Email address of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"emailAddress\",\n  \"in\" : \"query\",\n  \"description\" : \"Email address of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "orderLineGUIDs",
            "paramName" : "orderLineGUIDs",
            "dataType" : "List",
            "description" : "Comma separated order line guids. If provided only details regarding the provided guids are returned.",
            "baseType" : "String",
            "jsonSchema" : "{\n  \"name\" : \"orderLineGUIDs\",\n  \"in\" : \"query\",\n  \"description\" : \"Comma separated order line guids. If provided only details regarding the provided guids are returned.\",\n  \"required\" : false,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
            "required" : false
          }, {
            "isQueryParam" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "itineraryId",
            "paramName" : "itineraryId",
            "dataType" : "Integer",
            "description" : "Itinerary containing trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout",
            "jsonSchema" : "{\n  \"name\" : \"itineraryId\",\n  \"in\" : \"query\",\n  \"description\" : \"Itinerary containing trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "emailAddress",
            "paramName" : "emailAddress",
            "dataType" : "String",
            "description" : "Email address of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"emailAddress\",\n  \"in\" : \"query\",\n  \"description\" : \"Email address of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "hotelCancelEnquiryV2Response",
            "baseType" : "hotelCancelEnquiryV2Response",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/hotelCancelEnquiryV2Response"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/hotelCancelEnquiryV2Response\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "integer", "hotelCancelEnquiryV2Response", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"activityId\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"cancelEnquiryInfoList\" : [ {\\n    \"hotelRules\" : {\\n      \"isVenere\" : true,\\n      \"isExpediaRate\" : true,\\n      \"isRefundable\" : true,\\n      \"outsideWindowPenaltyNightCount\" : 123,\\n      \"nonRefundableOutsideWindow\" : true,\\n      \"isOpaque\" : true,\\n      \"cancellationWindowHours\" : 123,\\n      \"policyText\" : \"aeiou\",\\n      \"outsideWindowPenaltyPercentage\" : 123,\\n      \"nonRefundableDates\" : [ 123 ],\\n      \"insideWindowPenaltyNightCount\" : 123,\\n      \"hotelName\" : \"aeiou\",\\n      \"nonRefundableInsideWindow\" : true,\\n      \"hasFixedPenaltyPrice\" : true,\\n      \"cancellationText1\" : \"aeiou\",\\n      \"insideWindowPenaltyPercentage\" : 123,\\n      \"cancellationText2\" : \"aeiou\",\\n      \"cancellationWindowDays\" : 123,\\n      \"cancellationTimeZoneName\" : \"aeiou\"\\n    },\\n    \"roomInfoList\" : [ {\\n      \"numberOfNights\" : \"aeiou\",\\n      \"ratePlanDescription\" : \"aeiou\",\\n      \"amountRefund\" : null,\\n      \"orderLineGUID\" : \"aeiou\",\\n      \"adultCount\" : \"aeiou\",\\n      \"amountPaid\" : {\\n        \"amount\" : \"aeiou\",\\n        \"formattedWholePrice\" : \"aeiou\",\\n        \"formattedPrice\" : \"aeiou\"\\n      }\\n    } ]\\n  } ]\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "hotels-cancel-enquiry"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/hotel/trip/cancel",
          "operationId" : "hotels-trip-cancel",
          "returnType" : "hotelConfirmCancelResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "hotelConfirmCancelResponse",
          "summary" : "Cancel Trip",
          "notes" : "Hotel Trip Cancellation",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "itineraryId",
            "paramName" : "itineraryId",
            "dataType" : "Integer",
            "description" : "Itinerary id of the trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout",
            "jsonSchema" : "{\n  \"name\" : \"itineraryId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Itinerary id of the trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "emailAddress",
            "paramName" : "emailAddress",
            "dataType" : "String",
            "description" : "Email address of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"emailAddress\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email address of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "sendConfirmationEmail",
            "paramName" : "sendConfirmationEmail",
            "dataType" : "Boolean",
            "description" : "Email the traveler after cancellation or not.",
            "jsonSchema" : "{\n  \"name\" : \"sendConfirmationEmail\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email the traveler after cancellation or not.\",\n  \"required\" : true,\n  \"type\" : \"boolean\"\n}",
            "required" : true
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "itineraryId",
            "paramName" : "itineraryId",
            "dataType" : "Integer",
            "description" : "Itinerary id of the trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout",
            "jsonSchema" : "{\n  \"name\" : \"itineraryId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Itinerary id of the trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "emailAddress",
            "paramName" : "emailAddress",
            "dataType" : "String",
            "description" : "Email address of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"emailAddress\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email address of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "sendConfirmationEmail",
            "paramName" : "sendConfirmationEmail",
            "dataType" : "Boolean",
            "description" : "Email the traveler after cancellation or not.",
            "jsonSchema" : "{\n  \"name\" : \"sendConfirmationEmail\",\n  \"in\" : \"formData\",\n  \"description\" : \"Email the traveler after cancellation or not.\",\n  \"required\" : true,\n  \"type\" : \"boolean\"\n}",
            "required" : true
          } ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "hotelConfirmCancelResponse",
            "baseType" : "hotelConfirmCancelResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/hotelConfirmCancelResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/hotelConfirmCancelResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "hotelConfirmCancelResponse", "integer", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"statusResponse\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "hotels-trip-cancel"
        }, {
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/hotel/trip/cancelEnquiry",
          "operationId" : "hotels-cancel-enquiry",
          "returnType" : "hotelCancelEnquiryResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "hotelCancelEnquiryResponse",
          "summary" : "Cancel Enquiry",
          "notes" : "Cancel Enquiry for hotel, pass in itinerary id, email address of trip owner.",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "itineraryId",
            "paramName" : "itineraryId",
            "dataType" : "Integer",
            "description" : "Itinerary containing trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout.",
            "jsonSchema" : "{\n  \"name\" : \"itineraryId\",\n  \"in\" : \"query\",\n  \"description\" : \"Itinerary containing trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "emailAddress",
            "paramName" : "emailAddress",
            "dataType" : "String",
            "description" : "Email address of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"emailAddress\",\n  \"in\" : \"query\",\n  \"description\" : \"Email address of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ {
            "isQueryParam" : true,
            "hasMore" : true,
            "baseName" : "itineraryId",
            "paramName" : "itineraryId",
            "dataType" : "Integer",
            "description" : "Itinerary containing trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout.",
            "jsonSchema" : "{\n  \"name\" : \"itineraryId\",\n  \"in\" : \"query\",\n  \"description\" : \"Itinerary containing trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isQueryParam" : true,
            "secondaryParam" : true,
            "baseName" : "emailAddress",
            "paramName" : "emailAddress",
            "dataType" : "String",
            "description" : "Email address of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"emailAddress\",\n  \"in\" : \"query\",\n  \"description\" : \"Email address of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          } ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "hotelCancelEnquiryResponse",
            "baseType" : "hotelCancelEnquiryResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/hotelCancelEnquiryResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/hotelCancelEnquiryResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "integer", "string", "hotelCancelEnquiryResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"hotelRules\" : {\\n    \"isVenere\" : true,\\n    \"isExpediaRate\" : true,\\n    \"isRefundable\" : true,\\n    \"outsideWindowPenaltyNightCount\" : 123,\\n    \"nonRefundableOutsideWindow\" : true,\\n    \"isOpaque\" : true,\\n    \"cancellationWindowHours\" : 123,\\n    \"policyText\" : \"aeiou\",\\n    \"outsideWindowPenaltyPercentage\" : 123,\\n    \"nonRefundableDates\" : [ 123 ],\\n    \"insideWindowPenaltyNightCount\" : 123,\\n    \"hotelName\" : \"aeiou\",\\n    \"nonRefundableInsideWindow\" : true,\\n    \"hasFixedPenaltyPrice\" : true,\\n    \"cancellationText1\" : \"aeiou\",\\n    \"insideWindowPenaltyPercentage\" : 123,\\n    \"cancellationText2\" : \"aeiou\",\\n    \"cancellationWindowDays\" : 123,\\n    \"cancellationTimeZoneName\" : \"aeiou\"\\n  },\\n  \"amountRefund\" : 123,\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"amountPaid\" : 123\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "hotels-cancel-enquiry"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/hotel/trip/checkout",
          "operationId" : "hotels-checkout",
          "returnType" : "apiCheckoutResponseHotelResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "apiCheckoutResponseHotelResponse",
          "summary" : "Checkout",
          "notes" : "Mobile API Hotels Checkout",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The trip ID of an existing trip, from /m/api/hotel/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The trip ID of an existing trip, from /m/api/hotel/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkInDate",
            "paramName" : "checkInDate",
            "dataType" : "String",
            "description" : "Check in date in ISO format (yyyy-MM-dd)",
            "jsonSchema" : "{\n  \"name\" : \"checkInDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"Check in date in ISO format (yyyy-MM-dd)\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkOutDate",
            "paramName" : "checkOutDate",
            "dataType" : "String",
            "description" : "Check out date in ISO format (yyyy-MM-DD)",
            "jsonSchema" : "{\n  \"name\" : \"checkOutDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"Check out date in ISO format (yyyy-MM-DD)\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "rooms",
            "paramName" : "rooms",
            "dataType" : "String",
            "description" : "A list of room preferences to be applied to the rooms being booked.",
            "jsonSchema" : "{\n  \"name\" : \"rooms\",\n  \"in\" : \"formData\",\n  \"description\" : \"A list of room preferences to be applied to the rooms being booked.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sendEmailConfirmation",
            "paramName" : "sendEmailConfirmation",
            "dataType" : "Boolean",
            "description" : "Used to check if confirmation email needs to be sent or not.",
            "jsonSchema" : "{\n  \"name\" : \"sendEmailConfirmation\",\n  \"in\" : \"formData\",\n  \"description\" : \"Used to check if confirmation email needs to be sent or not.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "bedTypeId",
            "paramName" : "bedTypeId",
            "dataType" : "Integer",
            "description" : "Parameter that indicates the selected bed Type. Defaults to the first available bed type of the hotel offer. [Deprecated]. Pass bedTypeId for each room.",
            "jsonSchema" : "{\n  \"name\" : \"bedTypeId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Parameter that indicates the selected bed Type. Defaults to the first available bed type of the hotel offer. [Deprecated]. Pass bedTypeId for each room.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phoneCountryCode",
            "paramName" : "phoneCountryCode",
            "dataType" : "Integer",
            "description" : "The country code of the phone number of the traveler. Only the numeric values in this field are used. +44 results in 44",
            "jsonSchema" : "{\n  \"name\" : \"phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The country code of the phone number of the traveler. Only the numeric values in this field are used. +44 results in 44\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phone",
            "paramName" : "phone",
            "dataType" : "Integer",
            "description" : "The phone number of the traveler. Only the numeric values in this field are used. ",
            "jsonSchema" : "{\n  \"name\" : \"phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"The phone number of the traveler. Only the numeric values in this field are used. \",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"formData\",\n  \"description\" : \"This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "password",
            "paramName" : "password",
            "dataType" : "String",
            "description" : "The password provided by the expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.",
            "jsonSchema" : "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"The password provided by the expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expediaEmailOptIn",
            "paramName" : "expediaEmailOptIn",
            "dataType" : "String",
            "description" : "Whether to opt-in the user's email to travel deals",
            "jsonSchema" : "{\n  \"name\" : \"expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to opt-in the user's email to travel deals\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "firstName",
            "paramName" : "firstName",
            "dataType" : "String",
            "description" : "The first name of the traveler",
            "jsonSchema" : "{\n  \"name\" : \"firstName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The first name of the traveler\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "middleName",
            "paramName" : "middleName",
            "dataType" : "String",
            "description" : "The middle name of the traveler. ",
            "jsonSchema" : "{\n  \"name\" : \"middleName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The middle name of the traveler. \",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "lastName",
            "paramName" : "lastName",
            "dataType" : "String",
            "description" : "The last name of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"lastName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The last name of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedTotalFare",
            "paramName" : "expectedTotalFare",
            "dataType" : "String",
            "description" : "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /m/api/hotel/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedTotalFare\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /m/api/hotel/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedFareCurrencyCode",
            "paramName" : "expectedFareCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.This is obtained from /m/api/hotel/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedFareCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.This is obtained from /m/api/hotel/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFee",
            "paramName" : "expectedCardFee",
            "dataType" : "String",
            "description" : "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFee\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFeeCurrencyCode",
            "paramName" : "expectedCardFeeCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFeeCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "doIThinkImSignedIn",
            "paramName" : "doIThinkImSignedIn",
            "dataType" : "Boolean",
            "description" : "As a client I am checking-out with the assumption that I am signed in",
            "jsonSchema" : "{\n  \"name\" : \"doIThinkImSignedIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"As a client I am checking-out with the assumption that I am signed in\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tealeafTransactionId",
            "paramName" : "tealeafTransactionId",
            "dataType" : "String",
            "description" : "The unique transaction ID used in TeaLeaf PSR tracking",
            "jsonSchema" : "{\n  \"name\" : \"tealeafTransactionId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The unique transaction ID used in TeaLeaf PSR tracking\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "omniturePartnerId",
            "paramName" : "omniturePartnerId",
            "dataType" : "String",
            "description" : "Omniture partner identification string",
            "jsonSchema" : "{\n  \"name\" : \"omniturePartnerId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Omniture partner identification string\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress",
            "paramName" : "streetAddress",
            "dataType" : "String",
            "description" : "The street part of the credit card owner's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress\",\n  \"in\" : \"formData\",\n  \"description\" : \"The street part of the credit card owner's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress2",
            "paramName" : "streetAddress2",
            "dataType" : "String",
            "description" : "Apartment or suite number of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress2\",\n  \"in\" : \"formData\",\n  \"description\" : \"Apartment or suite number of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "city",
            "paramName" : "city",
            "dataType" : "String",
            "description" : "The city of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"city\",\n  \"in\" : \"formData\",\n  \"description\" : \"The city of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "state",
            "paramName" : "state",
            "dataType" : "String",
            "description" : "The state (or province) of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"state\",\n  \"in\" : \"formData\",\n  \"description\" : \"The state (or province) of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "country",
            "paramName" : "country",
            "dataType" : "String",
            "description" : "The 3 letter country code of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"country\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 3 letter country code of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "postalCode",
            "paramName" : "postalCode",
            "dataType" : "String",
            "description" : "The postal code of the traveler's billing address. Required only postalCode only checkout.",
            "jsonSchema" : "{\n  \"name\" : \"postalCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The postal code of the traveler's billing address. Required only postalCode only checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "creditCardNumber",
            "paramName" : "creditCardNumber",
            "dataType" : "String",
            "description" : "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"creditCardNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateYear",
            "paramName" : "expirationDateYear",
            "dataType" : "Integer",
            "description" : "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateYear\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateMonth",
            "paramName" : "expirationDateMonth",
            "dataType" : "Integer",
            "description" : "The expiration date month of the credit card used for this booking. This field is required guest for checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateMonth\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expiration date month of the credit card used for this booking. This field is required guest for checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "cvv",
            "paramName" : "cvv",
            "dataType" : "String",
            "description" : "The CVV of the traveler's credit card used for this booking.",
            "jsonSchema" : "{\n  \"name\" : \"cvv\",\n  \"in\" : \"formData\",\n  \"description\" : \"The CVV of the traveler's credit card used for this booking.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storedCreditCardId",
            "paramName" : "storedCreditCardId",
            "dataType" : "String",
            "description" : "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.",
            "jsonSchema" : "{\n  \"name\" : \"storedCreditCardId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storeCreditCardInUserProfile",
            "paramName" : "storeCreditCardInUserProfile",
            "dataType" : "Boolean",
            "description" : "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.",
            "jsonSchema" : "{\n  \"name\" : \"storeCreditCardInUserProfile\",\n  \"in\" : \"formData\",\n  \"description\" : \"Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "nameOnCard",
            "paramName" : "nameOnCard",
            "dataType" : "String",
            "description" : "The card holder's name",
            "jsonSchema" : "{\n  \"name\" : \"nameOnCard\",\n  \"in\" : \"formData\",\n  \"description\" : \"The card holder's name\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "prettyPrint",
            "paramName" : "prettyPrint",
            "dataType" : "Boolean",
            "description" : "If true, return JSON with tabs, spaces and newlines to be human readable",
            "jsonSchema" : "{\n  \"name\" : \"prettyPrint\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, return JSON with tabs, spaces and newlines to be human readable\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "suppressFinalBooking",
            "paramName" : "suppressFinalBooking",
            "dataType" : "Boolean",
            "description" : "If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true",
            "jsonSchema" : "{\n  \"name\" : \"suppressFinalBooking\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "tripId",
            "paramName" : "tripId",
            "dataType" : "String",
            "description" : "The trip ID of an existing trip, from /m/api/hotel/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"tripId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The trip ID of an existing trip, from /m/api/hotel/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkInDate",
            "paramName" : "checkInDate",
            "dataType" : "String",
            "description" : "Check in date in ISO format (yyyy-MM-dd)",
            "jsonSchema" : "{\n  \"name\" : \"checkInDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"Check in date in ISO format (yyyy-MM-dd)\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "checkOutDate",
            "paramName" : "checkOutDate",
            "dataType" : "String",
            "description" : "Check out date in ISO format (yyyy-MM-DD)",
            "jsonSchema" : "{\n  \"name\" : \"checkOutDate\",\n  \"in\" : \"formData\",\n  \"description\" : \"Check out date in ISO format (yyyy-MM-DD)\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "rooms",
            "paramName" : "rooms",
            "dataType" : "String",
            "description" : "A list of room preferences to be applied to the rooms being booked.",
            "jsonSchema" : "{\n  \"name\" : \"rooms\",\n  \"in\" : \"formData\",\n  \"description\" : \"A list of room preferences to be applied to the rooms being booked.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "sendEmailConfirmation",
            "paramName" : "sendEmailConfirmation",
            "dataType" : "Boolean",
            "description" : "Used to check if confirmation email needs to be sent or not.",
            "jsonSchema" : "{\n  \"name\" : \"sendEmailConfirmation\",\n  \"in\" : \"formData\",\n  \"description\" : \"Used to check if confirmation email needs to be sent or not.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "bedTypeId",
            "paramName" : "bedTypeId",
            "dataType" : "Integer",
            "description" : "Parameter that indicates the selected bed Type. Defaults to the first available bed type of the hotel offer. [Deprecated]. Pass bedTypeId for each room.",
            "jsonSchema" : "{\n  \"name\" : \"bedTypeId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Parameter that indicates the selected bed Type. Defaults to the first available bed type of the hotel offer. [Deprecated]. Pass bedTypeId for each room.\",\n  \"required\" : false,\n  \"type\" : \"integer\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phoneCountryCode",
            "paramName" : "phoneCountryCode",
            "dataType" : "Integer",
            "description" : "The country code of the phone number of the traveler. Only the numeric values in this field are used. +44 results in 44",
            "jsonSchema" : "{\n  \"name\" : \"phoneCountryCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The country code of the phone number of the traveler. Only the numeric values in this field are used. +44 results in 44\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "phone",
            "paramName" : "phone",
            "dataType" : "Integer",
            "description" : "The phone number of the traveler. Only the numeric values in this field are used. ",
            "jsonSchema" : "{\n  \"name\" : \"phone\",\n  \"in\" : \"formData\",\n  \"description\" : \"The phone number of the traveler. Only the numeric values in this field are used. \",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "email",
            "paramName" : "email",
            "dataType" : "String",
            "description" : "This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.",
            "jsonSchema" : "{\n  \"name\" : \"email\",\n  \"in\" : \"formData\",\n  \"description\" : \"This passenger's email address. Required, although ignored for logged in users, as it will use their email on file instead.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "password",
            "paramName" : "password",
            "dataType" : "String",
            "description" : "The password provided by the expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.",
            "jsonSchema" : "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"The password provided by the expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expediaEmailOptIn",
            "paramName" : "expediaEmailOptIn",
            "dataType" : "String",
            "description" : "Whether to opt-in the user's email to travel deals",
            "jsonSchema" : "{\n  \"name\" : \"expediaEmailOptIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"Whether to opt-in the user's email to travel deals\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "firstName",
            "paramName" : "firstName",
            "dataType" : "String",
            "description" : "The first name of the traveler",
            "jsonSchema" : "{\n  \"name\" : \"firstName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The first name of the traveler\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "middleName",
            "paramName" : "middleName",
            "dataType" : "String",
            "description" : "The middle name of the traveler. ",
            "jsonSchema" : "{\n  \"name\" : \"middleName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The middle name of the traveler. \",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "lastName",
            "paramName" : "lastName",
            "dataType" : "String",
            "description" : "The last name of the traveler.",
            "jsonSchema" : "{\n  \"name\" : \"lastName\",\n  \"in\" : \"formData\",\n  \"description\" : \"The last name of the traveler.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedTotalFare",
            "paramName" : "expectedTotalFare",
            "dataType" : "String",
            "description" : "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /m/api/hotel/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedTotalFare\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /m/api/hotel/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedFareCurrencyCode",
            "paramName" : "expectedFareCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.This is obtained from /m/api/hotel/trip/create.",
            "jsonSchema" : "{\n  \"name\" : \"expectedFareCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.This is obtained from /m/api/hotel/trip/create.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFee",
            "paramName" : "expectedCardFee",
            "dataType" : "String",
            "description" : "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFee\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expectedCardFeeCurrencyCode",
            "paramName" : "expectedCardFeeCurrencyCode",
            "dataType" : "String",
            "description" : "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done.",
            "jsonSchema" : "{\n  \"name\" : \"expectedCardFeeCurrencyCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "doIThinkImSignedIn",
            "paramName" : "doIThinkImSignedIn",
            "dataType" : "Boolean",
            "description" : "As a client I am checking-out with the assumption that I am signed in",
            "jsonSchema" : "{\n  \"name\" : \"doIThinkImSignedIn\",\n  \"in\" : \"formData\",\n  \"description\" : \"As a client I am checking-out with the assumption that I am signed in\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tealeafTransactionId",
            "paramName" : "tealeafTransactionId",
            "dataType" : "String",
            "description" : "The unique transaction ID used in TeaLeaf PSR tracking",
            "jsonSchema" : "{\n  \"name\" : \"tealeafTransactionId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The unique transaction ID used in TeaLeaf PSR tracking\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "omniturePartnerId",
            "paramName" : "omniturePartnerId",
            "dataType" : "String",
            "description" : "Omniture partner identification string",
            "jsonSchema" : "{\n  \"name\" : \"omniturePartnerId\",\n  \"in\" : \"formData\",\n  \"description\" : \"Omniture partner identification string\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress",
            "paramName" : "streetAddress",
            "dataType" : "String",
            "description" : "The street part of the credit card owner's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress\",\n  \"in\" : \"formData\",\n  \"description\" : \"The street part of the credit card owner's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "streetAddress2",
            "paramName" : "streetAddress2",
            "dataType" : "String",
            "description" : "Apartment or suite number of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"streetAddress2\",\n  \"in\" : \"formData\",\n  \"description\" : \"Apartment or suite number of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "city",
            "paramName" : "city",
            "dataType" : "String",
            "description" : "The city of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"city\",\n  \"in\" : \"formData\",\n  \"description\" : \"The city of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "state",
            "paramName" : "state",
            "dataType" : "String",
            "description" : "The state (or province) of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"state\",\n  \"in\" : \"formData\",\n  \"description\" : \"The state (or province) of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "country",
            "paramName" : "country",
            "dataType" : "String",
            "description" : "The 3 letter country code of the traveler's billing address.",
            "jsonSchema" : "{\n  \"name\" : \"country\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 3 letter country code of the traveler's billing address.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "postalCode",
            "paramName" : "postalCode",
            "dataType" : "String",
            "description" : "The postal code of the traveler's billing address. Required only postalCode only checkout.",
            "jsonSchema" : "{\n  \"name\" : \"postalCode\",\n  \"in\" : \"formData\",\n  \"description\" : \"The postal code of the traveler's billing address. Required only postalCode only checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "creditCardNumber",
            "paramName" : "creditCardNumber",
            "dataType" : "String",
            "description" : "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"creditCardNumber\",\n  \"in\" : \"formData\",\n  \"description\" : \"The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateYear",
            "paramName" : "expirationDateYear",
            "dataType" : "Integer",
            "description" : "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateYear\",\n  \"in\" : \"formData\",\n  \"description\" : \"The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "expirationDateMonth",
            "paramName" : "expirationDateMonth",
            "dataType" : "Integer",
            "description" : "The expiration date month of the credit card used for this booking. This field is required guest for checkout.",
            "jsonSchema" : "{\n  \"name\" : \"expirationDateMonth\",\n  \"in\" : \"formData\",\n  \"description\" : \"The expiration date month of the credit card used for this booking. This field is required guest for checkout.\",\n  \"required\" : true,\n  \"type\" : \"integer\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "cvv",
            "paramName" : "cvv",
            "dataType" : "String",
            "description" : "The CVV of the traveler's credit card used for this booking.",
            "jsonSchema" : "{\n  \"name\" : \"cvv\",\n  \"in\" : \"formData\",\n  \"description\" : \"The CVV of the traveler's credit card used for this booking.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storedCreditCardId",
            "paramName" : "storedCreditCardId",
            "dataType" : "String",
            "description" : "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.",
            "jsonSchema" : "{\n  \"name\" : \"storedCreditCardId\",\n  \"in\" : \"formData\",\n  \"description\" : \"The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request.\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "storeCreditCardInUserProfile",
            "paramName" : "storeCreditCardInUserProfile",
            "dataType" : "Boolean",
            "description" : "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.",
            "jsonSchema" : "{\n  \"name\" : \"storeCreditCardInUserProfile\",\n  \"in\" : \"formData\",\n  \"description\" : \"Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in.\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "nameOnCard",
            "paramName" : "nameOnCard",
            "dataType" : "String",
            "description" : "The card holder's name",
            "jsonSchema" : "{\n  \"name\" : \"nameOnCard\",\n  \"in\" : \"formData\",\n  \"description\" : \"The card holder's name\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "prettyPrint",
            "paramName" : "prettyPrint",
            "dataType" : "Boolean",
            "description" : "If true, return JSON with tabs, spaces and newlines to be human readable",
            "jsonSchema" : "{\n  \"name\" : \"prettyPrint\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, return JSON with tabs, spaces and newlines to be human readable\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "suppressFinalBooking",
            "paramName" : "suppressFinalBooking",
            "dataType" : "Boolean",
            "description" : "If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true",
            "jsonSchema" : "{\n  \"name\" : \"suppressFinalBooking\",\n  \"in\" : \"formData\",\n  \"description\" : \"If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          } ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200",
            "message" : "Successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "apiCheckoutResponseHotelResponse",
            "baseType" : "apiCheckoutResponseHotelResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiCheckoutResponseHotelResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"Successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiCheckoutResponseHotelResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "apiCheckoutResponseHotelResponse", "integer", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"activityId\" : \"aeiou\",\\n  \"totalCharges\" : \"aeiou\",\\n  \"errors\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"currencyCode\" : \"aeiou\",\\n  \"totalChargesPrice\" : {\\n    \"amount\" : \"aeiou\",\\n    \"formattedWholePrice\" : \"aeiou\",\\n    \"formattedPrice\" : \"aeiou\"\\n  },\\n  \"debugTealeafInfo\" : \"aeiou\",\\n  \"checkoutResponse\" : {\\n    \"productResponse\" : {\\n      \"numberOfNights\" : \"aeiou\",\\n      \"localizedHotelName\" : \"aeiou\",\\n      \"hotelStarRating\" : \"aeiou\",\\n      \"checkInDate\" : \"aeiou\",\\n      \"checkOutDate\" : \"aeiou\",\\n      \"tealeafTransactionId\" : \"aeiou\",\\n      \"isVipAccess\" : true,\\n      \"adultCount\" : 123,\\n      \"numberOfRooms\" : \"aeiou\",\\n      \"bigImageUrl\" : \"aeiou\",\\n      \"hotelId\" : \"aeiou\",\\n      \"hotelCity\" : \"aeiou\",\\n      \"supplierType\" : \"aeiou\",\\n      \"hotelStateProvince\" : \"aeiou\",\\n      \"largeThumbnailUrl\" : \"aeiou\",\\n      \"hotelAddress\" : \"aeiou\",\\n      \"nonLocalizedHotelName\" : \"aeiou\",\\n      \"errors\" : [ null ],\\n      \"hotelRoomResponse\" : {\\n        \"roomTypeCode\" : \"aeiou\",\\n        \"cancelPolicyInfoList\" : [ {\\n          \"amount\" : \"aeiou\",\\n          \"currencyCode\" : \"aeiou\",\\n          \"percent\" : \"aeiou\",\\n          \"timeZoneDescription\" : \"aeiou\",\\n          \"cancelTime\" : \"aeiou\",\\n          \"startWindowHours\" : \"aeiou\",\\n          \"versionID\" : \"aeiou\",\\n          \"nightCount\" : \"aeiou\"\\n        } ],\\n        \"rateOccupancyPerRoom\" : \"aeiou\",\\n        \"currentAllotment\" : \"aeiou\",\\n        \"roomTypeDescription\" : \"aeiou\",\\n        \"isSameDayDRR\" : true,\\n        \"roomThumbnailUrl\" : \"aeiou\",\\n        \"guaranteeRequired\" : true,\\n        \"rateChange\" : true,\\n        \"rateDescription\" : \"aeiou\",\\n        \"freeCancellationWindowDate\" : \"aeiou\",\\n        \"quotedOccupancy\" : \"aeiou\",\\n        \"valueAdds\" : [ {\\n          \"id\" : \"aeiou\",\\n          \"description\" : \"aeiou\"\\n        } ],\\n        \"promoDescription\" : \"aeiou\",\\n        \"hasFreeCancellation\" : true,\\n        \"promoId\" : \"aeiou\",\\n        \"taxRate\" : \"aeiou\",\\n        \"roomLongDescription\" : \"aeiou\",\\n        \"bedTypes\" : [ {\\n          \"id\" : \"aeiou\",\\n          \"description\" : \"aeiou\"\\n        } ],\\n        \"minGuestAge\" : \"aeiou\",\\n        \"ratePlanCode\" : \"aeiou\",\\n        \"cancellationPolicy\" : \"aeiou\",\\n        \"nonRefundable\" : true,\\n        \"supplierType\" : \"aeiou\",\\n        \"smokingPreferences\" : \"\",\\n        \"depositRequired\" : true,\\n        \"isPayLater\" : true,\\n        \"otherInformation\" : \"aeiou\",\\n        \"productKey\" : \"aeiou\",\\n        \"payLaterOffer\" : null,\\n        \"policy\" : \"aeiou\",\\n        \"immediateChargeRequired\" : true,\\n        \"rateInfo\" : [ {\\n          \"chargeableRateInfo\" : {\\n            \"roomTypeCode\" : \"aeiou\",\\n            \"total\" : \"aeiou\",\\n            \"surcharges\" : [ {\\n              \"amount\" : \"aeiou\",\\n              \"type\" : \"aeiou\"\\n            } ],\\n            \"strikethroughPriceWithTaxesAndFeesToShowUsers\" : \"aeiou\",\\n            \"surchargesForEntireStay\" : [ null ],\\n            \"depositAmountToShowUsers\" : \"aeiou\",\\n            \"nightlyRatesSize\" : \"aeiou\",\\n            \"surchargeTotal\" : \"aeiou\",\\n            \"depositAmountExact\" : \"aeiou\",\\n            \"surchargeTotalForEntireStay\" : \"aeiou\",\\n            \"priceAdjustments\" : [ {\\n              \"amount\" : \"aeiou\",\\n              \"type\" : \"aeiou\",\\n              \"formattedAmount\" : \"aeiou\"\\n            } ],\\n            \"averageRate\" : \"aeiou\",\\n            \"taxStatusType\" : \"aeiou\",\\n            \"dailyMandatoryFee\" : \"aeiou\",\\n            \"maxNightlyRate\" : \"aeiou\",\\n            \"totalMandatoryFees\" : \"aeiou\",\\n            \"nightlyRatesPerRoom\" : [ {\\n              \"rate\" : \"aeiou\",\\n              \"promo\" : true,\\n              \"baseRate\" : \"aeiou\"\\n            } ],\\n            \"priceRemainingAfterDepositToShowUsers\" : \"aeiou\",\\n            \"nightlyRateTotal\" : \"aeiou\",\\n            \"showResortFeeMessage\" : true,\\n            \"resortFeeInclusion\" : true,\\n            \"currencyCode\" : \"aeiou\",\\n            \"priceRemainingAfterDepositExact\" : \"aeiou\",\\n            \"userPriceType\" : \"aeiou\",\\n            \"priceToShowUsers\" : \"aeiou\",\\n            \"checkoutPriceType\" : \"aeiou\",\\n            \"ratePlanCode\" : \"aeiou\",\\n            \"currencySymbol\" : \"aeiou\",\\n            \"averageBaseRate\" : \"aeiou\",\\n            \"strikethroughPriceToShowUsers\" : \"aeiou\",\\n            \"airAttached\" : true,\\n            \"totalPriceWithMandatoryFees\" : \"aeiou\"\\n          },\\n          \"rateChange\" : true,\\n          \"promo\" : true,\\n          \"convertedRateInfo\" : null,\\n          \"priceBreakdown\" : true\\n        } ],\\n        \"isDiscountRestrictedToCurrentSourceType\" : true\\n      },\\n      \"hotelName\" : \"aeiou\",\\n      \"hotelCountry\" : \"aeiou\",\\n      \"thumbnailUrl\" : \"aeiou\",\\n      \"accessibilityAmenities\" : \"\",\\n      \"longitude\" : \"aeiou\",\\n      \"latitude\" : \"aeiou\"\\n    },\\n    \"jsonPriceChangeResponse\" : {\\n      \"newProduct\" : null,\\n      \"oldProduct\" : null\\n    },\\n    \"bookingResponse\" : {\\n      \"localizedHotelName\" : \"aeiou\",\\n      \"travelRecordLocator\" : \"aeiou\",\\n      \"hotelName\" : \"aeiou\",\\n      \"guestPhone\" : {\\n        \"category\" : \"aeiou\",\\n        \"areaCode\" : \"aeiou\",\\n        \"countryCode\" : \"aeiou\",\\n        \"number\" : \"aeiou\",\\n        \"extensionNumber\" : \"aeiou\"\\n      },\\n      \"hotelPhone\" : \"aeiou\",\\n      \"checkInInstructions\" : \"aeiou\",\\n      \"debugTealeafInfo\" : \"aeiou\",\\n      \"pricePerDayBreakdown\" : \"aeiou\",\\n      \"hasFreeCancellation\" : true,\\n      \"hotelLatitude\" : \"aeiou\",\\n      \"extraGuestCharges\" : \"aeiou\",\\n      \"nightCount\" : \"aeiou\",\\n      \"cancellationPolicy\" : \"aeiou\",\\n      \"isMerchant\" : true,\\n      \"hotelStateProvinceCode\" : \"aeiou\",\\n      \"itineraryNumber\" : \"aeiou\",\\n      \"email\" : \"aeiou\",\\n      \"checkInDateForTracking\" : \"aeiou\",\\n      \"numberOfRoomsBooked\" : \"aeiou\",\\n      \"maxGuestCount\" : \"aeiou\",\\n      \"roomOccupants\" : [ {\\n        \"occupantSelectedRoomOptions\" : {\\n          \"hasExtraBedInfant\" : true,\\n          \"bedTypeName\" : \"aeiou\",\\n          \"isRoomOptionsAvailable\" : true,\\n          \"specialRequest\" : true,\\n          \"smokingPreference\" : {\\n            \"locMsgId\" : \"aeiou\",\\n            \"description\" : \"aeiou\"\\n          },\\n          \"isSmokingPreferenceSelected\" : true,\\n          \"hasExtraBedChild\" : true,\\n          \"hasExtraBedAdult\" : true\\n        },\\n        \"primaryOccupantName\" : \"aeiou\",\\n        \"orderLineGUID\" : \"aeiou\",\\n        \"adultCount\" : 123,\\n        \"bookingItemId\" : \"aeiou\",\\n        \"reservationStatus\" : \"aeiou\",\\n        \"childAndInfantAges\" : [ 123 ]\\n      } ],\\n      \"hotelCountryCode\" : \"aeiou\",\\n      \"hotelInventoryTypeName\" : \"aeiou\",\\n      \"hotelPostalCode\" : \"aeiou\",\\n      \"confirmationUrl\" : \"aeiou\",\\n      \"nonLocalizedhotelName\" : \"aeiou\",\\n      \"hotelLongitude\" : \"aeiou\",\\n      \"hotelConfirmationNumber\" : \"aeiou\",\\n      \"hotelAddress\" : \"aeiou\",\\n      \"freeCancellationWindowDate\" : \"aeiou\",\\n      \"averageDailyHotelPrice\" : \"aeiou\",\\n      \"isGDS\" : true,\\n      \"warnings\" : [ null ],\\n      \"roomDescription\" : \"aeiou\",\\n      \"totalPrice\" : \"aeiou\",\\n      \"guestAddress\" : {\\n        \"postalCode\" : \"aeiou\",\\n        \"secondAddressLine\" : \"aeiou\",\\n        \"categoryCode\" : \"aeiou\",\\n        \"province\" : \"aeiou\",\\n        \"firstAddressLine\" : \"aeiou\",\\n        \"countryAlpha3Code\" : \"aeiou\",\\n        \"city\" : \"aeiou\"\\n      },\\n      \"checkInDate\" : \"aeiou\",\\n      \"currencyCode\" : \"aeiou\",\\n      \"confirmationPending\" : \"aeiou\",\\n      \"checkOutDate\" : \"aeiou\",\\n      \"error\" : [ null ],\\n      \"tripId\" : \"aeiou\",\\n      \"fees\" : \"aeiou\",\\n      \"isOpaque\" : true,\\n      \"hotelCity\" : \"aeiou\",\\n      \"supplierType\" : \"aeiou\",\\n      \"nonRefundable\" : \"aeiou\",\\n      \"guestFullName\" : \"aeiou\",\\n      \"passbookUrl\" : \"aeiou\",\\n      \"averageBaseRate\" : \"aeiou\",\\n      \"orderNumber\" : 123,\\n      \"nightlyRates\" : [ \"\" ],\\n      \"taxes\" : \"aeiou\"\\n    }\\n  },\\n  \"orderId\" : \"aeiou\",\\n  \"newTrip\" : {\\n    \"travelRecordLocator\" : \"aeiou\",\\n    \"itineraryNumber\" : \"aeiou\",\\n    \"tripId\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "hotels-checkout"
        }, {
          "hasProduces" : true,
          "returnSimpleType" : true,
          "hasMore" : true,
          "path" : "/m/api/hotel/trip/checkoutfields",
          "operationId" : "hotels-checkout-fields",
          "returnType" : "apiFieldsResponse",
          "httpMethod" : "GET",
          "returnBaseType" : "apiFieldsResponse",
          "summary" : "Get Required Checkout Fields",
          "notes" : "Service that returns the fields that are required or optional for a given point of sale.",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200",
            "message" : "successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "apiFieldsResponse",
            "baseType" : "apiFieldsResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/apiFieldsResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/apiFieldsResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "apiFieldsResponse" ],
          "examples" : [ {
            "example" : "{\\n  \"paymentFields\" : \"aeiou\"\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "hotels-checkout-fields"
        }, {
          "hasConsumes" : true,
          "hasProduces" : true,
          "hasParams" : true,
          "returnSimpleType" : true,
          "path" : "/m/api/hotel/trip/create",
          "operationId" : "hotels-create-trip",
          "returnType" : "jsonCreateTripResponse",
          "httpMethod" : "POST",
          "returnBaseType" : "jsonCreateTripResponse",
          "summary" : "Create A Trip",
          "notes" : "Mobile API Hotels Create Trip",
          "baseName" : "Hotels",
          "defaultResponse" : "null",
          "consumes" : [ {
            "hasMore" : null,
            "mediaType" : "application/x-www-form-urlencoded"
          } ],
          "produces" : [ {
            "hasMore" : null,
            "mediaType" : "application/json"
          } ],
          "allParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product key, obtained by calling /m/api/hotel/offers,  we are going to create a trip for.",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"formData\",\n  \"description\" : \"The product key, obtained by calling /m/api/hotel/offers,  we are going to create a trip for.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tripTitle",
            "paramName" : "tripTitle",
            "dataType" : "String",
            "description" : "[Optional] The name of this itinerary as it will appear to customer service and in the itinerary list. Upto 255 characters that must be one of these: .,a-zA-Z0-9'- #",
            "jsonSchema" : "{\n  \"name\" : \"tripTitle\",\n  \"in\" : \"formData\",\n  \"description\" : \"[Optional] The name of this itinerary as it will appear to customer service and in the itinerary list. Upto 255 characters that must be one of these: .,a-zA-Z0-9'- #\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "withInsurance",
            "paramName" : "withInsurance",
            "dataType" : "Boolean",
            "description" : "[Optional] Whether to return the available insurance options for this trip. Currently this only works for flights. (Default: false)",
            "jsonSchema" : "{\n  \"name\" : \"withInsurance\",\n  \"in\" : \"formData\",\n  \"description\" : \"[Optional] Whether to return the available insurance options for this trip. Currently this only works for flights. (Default: false)\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "qualifyAirAttach",
            "paramName" : "qualifyAirAttach",
            "dataType" : "Boolean",
            "description" : "[Optional] Whether to return a qualified air attach product for this trip. It will use the same rate plan and room type codes as the productKey sent in the request. But the product key that will be used to get the air attached product will be different",
            "jsonSchema" : "{\n  \"name\" : \"qualifyAirAttach\",\n  \"in\" : \"formData\",\n  \"description\" : \"[Optional] Whether to return a qualified air attach product for this trip. It will use the same rate plan and room type codes as the productKey sent in the request. But the product key that will be used to get the air attached product will be different\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "roomInfoFields",
            "paramName" : "roomInfoFields",
            "dataType" : "List",
            "description" : "The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient. For example 2,12,2,3,0",
            "baseType" : "String",
            "jsonSchema" : "{\n  \"name\" : \"roomInfoFields\",\n  \"in\" : \"formData\",\n  \"description\" : \"The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient. For example 2,12,2,3,0\",\n  \"required\" : true,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
            "required" : true
          } ],
          "bodyParams" : [ ],
          "pathParams" : [ ],
          "queryParams" : [ ],
          "headerParams" : [ ],
          "formParams" : [ {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "baseName" : "productKey",
            "paramName" : "productKey",
            "dataType" : "String",
            "description" : "The product key, obtained by calling /m/api/hotel/offers,  we are going to create a trip for.",
            "jsonSchema" : "{\n  \"name\" : \"productKey\",\n  \"in\" : \"formData\",\n  \"description\" : \"The product key, obtained by calling /m/api/hotel/offers,  we are going to create a trip for.\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
            "required" : true
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "tripTitle",
            "paramName" : "tripTitle",
            "dataType" : "String",
            "description" : "[Optional] The name of this itinerary as it will appear to customer service and in the itinerary list. Upto 255 characters that must be one of these: .,a-zA-Z0-9'- #",
            "jsonSchema" : "{\n  \"name\" : \"tripTitle\",\n  \"in\" : \"formData\",\n  \"description\" : \"[Optional] The name of this itinerary as it will appear to customer service and in the itinerary list. Upto 255 characters that must be one of these: .,a-zA-Z0-9'- #\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "withInsurance",
            "paramName" : "withInsurance",
            "dataType" : "Boolean",
            "description" : "[Optional] Whether to return the available insurance options for this trip. Currently this only works for flights. (Default: false)",
            "jsonSchema" : "{\n  \"name\" : \"withInsurance\",\n  \"in\" : \"formData\",\n  \"description\" : \"[Optional] Whether to return the available insurance options for this trip. Currently this only works for flights. (Default: false)\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "hasMore" : true,
            "secondaryParam" : true,
            "baseName" : "qualifyAirAttach",
            "paramName" : "qualifyAirAttach",
            "dataType" : "Boolean",
            "description" : "[Optional] Whether to return a qualified air attach product for this trip. It will use the same rate plan and room type codes as the productKey sent in the request. But the product key that will be used to get the air attached product will be different",
            "jsonSchema" : "{\n  \"name\" : \"qualifyAirAttach\",\n  \"in\" : \"formData\",\n  \"description\" : \"[Optional] Whether to return a qualified air attach product for this trip. It will use the same rate plan and room type codes as the productKey sent in the request. But the product key that will be used to get the air attached product will be different\",\n  \"required\" : false,\n  \"type\" : \"boolean\"\n}",
            "required" : false
          }, {
            "isFormParam" : true,
            "notFile" : true,
            "secondaryParam" : true,
            "baseName" : "roomInfoFields",
            "paramName" : "roomInfoFields",
            "dataType" : "List",
            "description" : "The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient. For example 2,12,2,3,0",
            "baseType" : "String",
            "jsonSchema" : "{\n  \"name\" : \"roomInfoFields\",\n  \"in\" : \"formData\",\n  \"description\" : \"The occupants of the first room to book. A CSV of first the # of adults in the room, then the children's ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient. For example 2,12,2,3,0\",\n  \"required\" : true,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
            "required" : true
          } ],
          "tags" : [ "Hotels" ],
          "responses" : [ {
            "code" : "200",
            "message" : "Successful operation",
            "hasMore" : false,
            "headers" : [ ],
            "dataType" : "jsonCreateTripResponse",
            "baseType" : "jsonCreateTripResponse",
            "simpleType" : true,
            "primitiveType" : false,
            "schema" : {
              "$ref" : "#/definitions/jsonCreateTripResponse"
            },
            "jsonSchema" : "{\n  \"description\" : \"Successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/jsonCreateTripResponse\"\n  }\n}"
          } ],
          "responseHeaders" : [ ],
          "imports" : [ "jsonCreateTripResponse", "string" ],
          "examples" : [ {
            "example" : "{\\n  \"newHotelProductResponse\" : null,\\n  \"error\" : [ {\\n    \"activityId\" : \"aeiou\",\\n    \"diagnosticId\" : \"aeiou\",\\n    \"errorInfo\" : \"aeiou\",\\n    \"diagnosticFullText\" : \"aeiou\",\\n    \"errorCode\" : \"aeiou\"\\n  } ],\\n  \"tealeafTransactionId\" : \"aeiou\",\\n  \"tripId\" : \"aeiou\",\\n  \"airAttachedProductResponse\" : null,\\n  \"originalHotelProductResponse\" : {\\n    \"numberOfNights\" : \"aeiou\",\\n    \"localizedHotelName\" : \"aeiou\",\\n    \"hotelStarRating\" : \"aeiou\",\\n    \"checkInDate\" : \"aeiou\",\\n    \"checkOutDate\" : \"aeiou\",\\n    \"tealeafTransactionId\" : \"aeiou\",\\n    \"isVipAccess\" : true,\\n    \"adultCount\" : 123,\\n    \"numberOfRooms\" : \"aeiou\",\\n    \"bigImageUrl\" : \"aeiou\",\\n    \"hotelId\" : \"aeiou\",\\n    \"hotelCity\" : \"aeiou\",\\n    \"supplierType\" : \"aeiou\",\\n    \"hotelStateProvince\" : \"aeiou\",\\n    \"largeThumbnailUrl\" : \"aeiou\",\\n    \"hotelAddress\" : \"aeiou\",\\n    \"nonLocalizedHotelName\" : \"aeiou\",\\n    \"errors\" : [ null ],\\n    \"hotelRoomResponse\" : {\\n      \"roomTypeCode\" : \"aeiou\",\\n      \"cancelPolicyInfoList\" : [ {\\n        \"amount\" : \"aeiou\",\\n        \"currencyCode\" : \"aeiou\",\\n        \"percent\" : \"aeiou\",\\n        \"timeZoneDescription\" : \"aeiou\",\\n        \"cancelTime\" : \"aeiou\",\\n        \"startWindowHours\" : \"aeiou\",\\n        \"versionID\" : \"aeiou\",\\n        \"nightCount\" : \"aeiou\"\\n      } ],\\n      \"rateOccupancyPerRoom\" : \"aeiou\",\\n      \"currentAllotment\" : \"aeiou\",\\n      \"roomTypeDescription\" : \"aeiou\",\\n      \"isSameDayDRR\" : true,\\n      \"roomThumbnailUrl\" : \"aeiou\",\\n      \"guaranteeRequired\" : true,\\n      \"rateChange\" : true,\\n      \"rateDescription\" : \"aeiou\",\\n      \"freeCancellationWindowDate\" : \"aeiou\",\\n      \"quotedOccupancy\" : \"aeiou\",\\n      \"valueAdds\" : [ {\\n        \"id\" : \"aeiou\",\\n        \"description\" : \"aeiou\"\\n      } ],\\n      \"promoDescription\" : \"aeiou\",\\n      \"hasFreeCancellation\" : true,\\n      \"promoId\" : \"aeiou\",\\n      \"taxRate\" : \"aeiou\",\\n      \"roomLongDescription\" : \"aeiou\",\\n      \"bedTypes\" : [ {\\n        \"id\" : \"aeiou\",\\n        \"description\" : \"aeiou\"\\n      } ],\\n      \"minGuestAge\" : \"aeiou\",\\n      \"ratePlanCode\" : \"aeiou\",\\n      \"cancellationPolicy\" : \"aeiou\",\\n      \"nonRefundable\" : true,\\n      \"supplierType\" : \"aeiou\",\\n      \"smokingPreferences\" : \"\",\\n      \"depositRequired\" : true,\\n      \"isPayLater\" : true,\\n      \"otherInformation\" : \"aeiou\",\\n      \"productKey\" : \"aeiou\",\\n      \"payLaterOffer\" : null,\\n      \"policy\" : \"aeiou\",\\n      \"immediateChargeRequired\" : true,\\n      \"rateInfo\" : [ {\\n        \"chargeableRateInfo\" : {\\n          \"roomTypeCode\" : \"aeiou\",\\n          \"total\" : \"aeiou\",\\n          \"surcharges\" : [ {\\n            \"amount\" : \"aeiou\",\\n            \"type\" : \"aeiou\"\\n          } ],\\n          \"strikethroughPriceWithTaxesAndFeesToShowUsers\" : \"aeiou\",\\n          \"surchargesForEntireStay\" : [ null ],\\n          \"depositAmountToShowUsers\" : \"aeiou\",\\n          \"nightlyRatesSize\" : \"aeiou\",\\n          \"surchargeTotal\" : \"aeiou\",\\n          \"depositAmountExact\" : \"aeiou\",\\n          \"surchargeTotalForEntireStay\" : \"aeiou\",\\n          \"priceAdjustments\" : [ {\\n            \"amount\" : \"aeiou\",\\n            \"type\" : \"aeiou\",\\n            \"formattedAmount\" : \"aeiou\"\\n          } ],\\n          \"averageRate\" : \"aeiou\",\\n          \"taxStatusType\" : \"aeiou\",\\n          \"dailyMandatoryFee\" : \"aeiou\",\\n          \"maxNightlyRate\" : \"aeiou\",\\n          \"totalMandatoryFees\" : \"aeiou\",\\n          \"nightlyRatesPerRoom\" : [ {\\n            \"rate\" : \"aeiou\",\\n            \"promo\" : true,\\n            \"baseRate\" : \"aeiou\"\\n          } ],\\n          \"priceRemainingAfterDepositToShowUsers\" : \"aeiou\",\\n          \"nightlyRateTotal\" : \"aeiou\",\\n          \"showResortFeeMessage\" : true,\\n          \"resortFeeInclusion\" : true,\\n          \"currencyCode\" : \"aeiou\",\\n          \"priceRemainingAfterDepositExact\" : \"aeiou\",\\n          \"userPriceType\" : \"aeiou\",\\n          \"priceToShowUsers\" : \"aeiou\",\\n          \"checkoutPriceType\" : \"aeiou\",\\n          \"ratePlanCode\" : \"aeiou\",\\n          \"currencySymbol\" : \"aeiou\",\\n          \"averageBaseRate\" : \"aeiou\",\\n          \"strikethroughPriceToShowUsers\" : \"aeiou\",\\n          \"airAttached\" : true,\\n          \"totalPriceWithMandatoryFees\" : \"aeiou\"\\n        },\\n        \"rateChange\" : true,\\n        \"promo\" : true,\\n        \"convertedRateInfo\" : null,\\n        \"priceBreakdown\" : true\\n      } ],\\n      \"isDiscountRestrictedToCurrentSourceType\" : true\\n    },\\n    \"hotelName\" : \"aeiou\",\\n    \"hotelCountry\" : \"aeiou\",\\n    \"thumbnailUrl\" : \"aeiou\",\\n    \"accessibilityAmenities\" : \"\",\\n    \"longitude\" : \"aeiou\",\\n    \"latitude\" : \"aeiou\"\\n  },\\n  \"validFormsOfPayment\" : [ {\\n    \"fee\" : \"aeiou\",\\n    \"feeCurrencyCode\" : \"aeiou\",\\n    \"formattedFee\" : \"aeiou\",\\n    \"name\" : \"aeiou\",\\n    \"totalFarePriceWithFee\" : \"aeiou\"\\n  } ],\\n  \"loyaltyPoints\" : {\\n    \"loyaltyPointInfoList\" : [ {\\n      \"pointValue\" : 123,\\n      \"pointType\" : \"aeiou\"\\n    } ],\\n    \"totalLoyaltyPoints\" : 123\\n  },\\n  \"userId\" : \"aeiou\",\\n  \"userCoupons\" : [ null ],\\n  \"warnings\" : [ null ],\\n  \"expediaRewards\" : {\\n    \"totalPointsToEarn\" : 123,\\n    \"isActiveRewardsMember\" : true,\\n    \"rewardsMembershipTierName\" : \"aeiou\"\\n  },\\n  \"coupon\" : {\\n    \"name\" : \"aeiou\",\\n    \"instanceId\" : 123,\\n    \"code\" : \"aeiou\"\\n  }\\n}",
            "contentType" : "application/json"
          } ],
          "nickname" : "hotels-create-trip"
        } ],
        "classname" : "HotelsApi"
      },
      "appDescription" : "Expedia Mobile API Documentation. <br><font color=\"blue\"> (Note: In case of authorization exception, just <a href=\"/static/mobile/swaggerui/#!/User/signin-user\">Sign-In</a>)</font>"
    } ]
  },
  "modelPackage" : "",
  "apiPackage" : "",
  "contextPath" : "/",
  "appDescription" : "Expedia Mobile API Documentation. <br><font color=\"blue\"> (Note: In case of authorization exception, just <a href=\"/static/mobile/swaggerui/#!/User/signin-user\">Sign-In</a>)</font>",
  "version" : "0.0.1"
}